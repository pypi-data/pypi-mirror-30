#!/usr/bin/env python2
import argparse
import csv
import os
import sys

from immunedb.identification.metadata import COMMON_FIELDS, REQUIRED_FIELDS

if __name__ == '__main__':
    parser = argparse.ArgumentParser('Generates a template metadata file')
    parser.add_argument('--path', default='.', help='The directory in which '
                        'the FASTA or FASTQ files exist.')
    parser.add_argument('--out', default='metadata.tsv', help='Path to '
                        'output file.  Use - for stdout.')
    parser.add_argument('--use-filenames', action='store_true',
                        help='Sets the sample name for each file to the '
                        'filename without the .fasta or .fastq extension '
                        '(e.g. sample1.fasta would be given the sample name '
                        'sample1)')
    parser.add_argument('--include-common', action='store_true',
                        help='''Includes additional common metadata fields:
                        {}'''.format(','.join(COMMON_FIELDS)))
    args = parser.parse_args()

    files = [os.path.basename(f) for f in os.listdir(args.path)
             if f.endswith('.fasta') or f.endswith('.fastq')]
    if len(files) == 0:
        parser.error('No FASTA or FASTQ files.')

    with sys.stdout if args.out == '-' else open(args.out, 'w+') as fh:
        fieldnames = REQUIRED_FIELDS
        if args.include_common:
            fieldnames += COMMON_FIELDS
        writer = csv.DictWriter(
            fh,
            fieldnames=fieldnames,
            delimiter='\t')

        writer.writeheader()
        for fn in files:
            name, ext = os.path.splitext(fn)
            row = {'file_name': fn}
            if args.use_filenames:
                row['sample_name'] = name
            writer.writerow(row)
