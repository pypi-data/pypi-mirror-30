Env(name="diamond", base="bioconda", packages="diamond")


rule diamond_makedb:
    "Build Diamond index file"
    message:
        "Diamond: running makedb on {input}"
    input:
        ref = "{path}/{file}.fastp.gz"
    params:
        db  = "{path}.diamond/{file}"
    output:
        db  = "{params.db}.dmnd"
    log:
              "{params.db}.log"
    conda:
        "diamond"
    params:
        mem = icfg.mem("32g")
    threads:
        16
    shell: """
    diamond makedb \
    --in {input.ref} \
    --db {params.db} \
    --threads {threads} \
    >{log} 2>&1
    """


with Stage("map_diamond") as S:
    S.doc("""
    FIXME
    """)
    rule diamond_blastx_fasta:
        "Align DNA sequences from FASTA against protein reference"
        message:
            "Diamond: running blastx on {input.fa}"
        input:
            fa = "{:prev:}/{source}.contigs.fasta.gz",
            db = "{:reference.dir:}.diamond/{target}.contigs.dmnd"
        output:
                 "{:this:}/{target}.{source}.daa"
        params:
            mem = icfg.mem("32g")
        threads:
            16
        conda:
            "diamond"
        shell: """
        diamond blastx \
        --db {input.db} \
        --query {input.fa} \
        --out {output} \
        --outfmt 100 \
        --threads {threads}
        """

    rule diamond_blastx_fastq:  # ymp: extends diamond_blastx_fasta
        input:
            fa = "{:prev:}/{sample}.{pairname}.fq.gz",
            db = "{:reference.dir:}.diamond/ALL.contigs.dmnd"
        output:
                 "{:this:}/{sample}.{pairname}.daa"

    rule diamond_view:
        "Convert Diamond binary output (daa) to BLAST6 format"
        message:
            "Diamond: converting {input} to BLAST6"
        input:
            "{:this:}/{file}.daa"
        output:
            "{:this:}/{file}.blast6"
        conda:
            "diamond"
        shell: """
        diamond view --daa {input} > {output}
        """

    rule diamond_all:
        output:
            touch("{:this:}/all")
        input:
            "{:this:}/stamp.all_{:targets:}"

    rule diamond_all_for_target:
        output:
            touch("{:this:}/stamp.all_{target}")
        input:
            "{:this:}/{target}.{:sources:}.daa"

    rule diamond_all_fq:
        output:
            touch("{:this:}/all")
        input:
            "{:this:}/{:fq_names:}.daa"
