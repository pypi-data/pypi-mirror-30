# This class was generated on Sat, 07 Apr 2018 16:49:42 UTC by version 0.1.0-dev+2136c8-dirty of Braintree SDK Generator
# payment_list_request.py
# @version 0.1.0-dev+2136c8-dirty
# @type request
# @data 
# DO NOT EDIT
import braintreehttp

try:
    from urllib import quote  # Python 2.X
except ImportError:
    from urllib.parse import quote  # Python 3+

class PaymentListRequest:
    """
    Lists payments that were created by the [create payment](#payment_create) call and that are in any state. The list shows the payments that are made to the merchant who makes the call. To filter the payments that appear in the response, you can specify one or more optional query and pagination parameters. See [Filtering and pagination](/docs/api/overview/#query-parameters).
    """
    def __init__(self):
        self.verb = "GET"
        self.path = "/v1/payments/payment?"
        self.headers = {}
        self.headers["Content-Type"] = "application/json"
        self.body = None

    def count(self, count):
        params = str(count)
        self.path += "count=" + quote(params) + "&"
        return self

    def end_time(self, end_time):
        params = str(end_time)
        self.path += "end_time=" + quote(params) + "&"
        return self

    def payee_id(self, payee_id):
        params = str(payee_id)
        self.path += "payee_id=" + quote(params) + "&"
        return self

    def sort_by(self, sort_by):
        params = str(sort_by)
        self.path += "sort_by=" + quote(params) + "&"
        return self

    def sort_order(self, sort_order):
        params = str(sort_order)
        self.path += "sort_order=" + quote(params) + "&"
        return self

    def start_id(self, start_id):
        params = str(start_id)
        self.path += "start_id=" + quote(params) + "&"
        return self

    def start_index(self, start_index):
        params = str(start_index)
        self.path += "start_index=" + quote(params) + "&"
        return self

    def start_time(self, start_time):
        params = str(start_time)
        self.path += "start_time=" + quote(params) + "&"
        return self

    
