Metadata-Version: 2.0
Name: openmesh
Version: 1.0.0.post22
Summary: Python bindings for OpenMesh.
Home-page: https://www.graphics.rwth-aachen.de:9000/OpenMesh/openmesh-python
Author: Alexander Dielen, Isaak Lim, Janis Born
Author-email: isaak.lim@cs.rwth-aachen.de
License: BSD 3-Clause
Project-URL: Tracker, https://www.graphics.rwth-aachen.de:9000/OpenMesh/openmesh-python/issues
Project-URL: Source, https://www.graphics.rwth-aachen.de:9000/OpenMesh/openmesh-python
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Multimedia :: Graphics
Requires-Dist: numpy

# OpenMesh Python Bindings
[![pipeline status](https://www.graphics.rwth-aachen.de:9000/OpenMesh/openmesh-python/badges/master/pipeline.svg)](https://www.graphics.rwth-aachen.de:9000/OpenMesh/openmesh-python/commits/master)

OpenMesh python bindings implemented with
[pybind11](https://github.com/pybind/pybind11) that are tightly integrated with
[numpy](http://www.numpy.org/).

## Installing

### Prebuild Binaries

We provide prebuild wheels for installation with pip for the following configurations:
#### Linux
* [Python 2.7](https://www.graphics.rwth-aachen.de:9000/OpenMesh/openmesh-python/-/jobs/artifacts/master/browse/release?job=deploy-2.7-linux)
* [Python 3.5](https://www.graphics.rwth-aachen.de:9000/OpenMesh/openmesh-python/-/jobs/artifacts/master/browse/release?job=deploy-3.5-linux)

#### macOS 10.13
* [Python 2.7](https://www.graphics.rwth-aachen.de:9000/OpenMesh/openmesh-python/-/jobs/artifacts/master/browse/release?job=deploy-2.7-macos)
* [Python 3.5](https://www.graphics.rwth-aachen.de:9000/OpenMesh/openmesh-python/-/jobs/artifacts/master/browse/release?job=deploy-3.5-macos)

#### Windows
* [Python 3.6](https://www.graphics.rwth-aachen.de:9000/OpenMesh/openmesh-python/-/jobs/artifacts/master/browse/release?job=deploy-3.6-VS2017)

### Building from source
1. recursively clone the repo
2. cd to repo dir
3. `pip install -e .` (or `pip install -e . --user` if you are not root or in a
   virtualenv)


