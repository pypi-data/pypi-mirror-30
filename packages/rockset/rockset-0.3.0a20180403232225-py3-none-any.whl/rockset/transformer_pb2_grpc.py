# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from rockset import transformer_pb2 as rockset_dot_transformer__pb2


class TransformerServiceStub(object):
  """The service definition allows an application to configure
  an arbitrary transformer to transform a byte-serialized
  message to a rockset Document.
  It can be used to convert a json document to a rockset
  document. It can be used to generate terms from a
  text blob.

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Transform = channel.unary_unary(
        '/rockset.TransformerService/Transform',
        request_serializer=rockset_dot_transformer__pb2.TransformRequest.SerializeToString,
        response_deserializer=rockset_dot_transformer__pb2.TransformResponse.FromString,
        )
    self.Score = channel.unary_unary(
        '/rockset.TransformerService/Score',
        request_serializer=rockset_dot_transformer__pb2.ScoreRequest.SerializeToString,
        response_deserializer=rockset_dot_transformer__pb2.ScoreResponse.FromString,
        )
    self.TransformSearch = channel.unary_unary(
        '/rockset.TransformerService/TransformSearch',
        request_serializer=rockset_dot_transformer__pb2.TransformSearchRequest.SerializeToString,
        response_deserializer=rockset_dot_transformer__pb2.TransformSearchResponse.FromString,
        )


class TransformerServiceServicer(object):
  """The service definition allows an application to configure
  an arbitrary transformer to transform a byte-serialized
  message to a rockset Document.
  It can be used to convert a json document to a rockset
  document. It can be used to generate terms from a
  text blob.

  """

  def Transform(self, request, context):
    """Converts a list of documents into one or more
    rockset document.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Score(self, request, context):
    """Scores a list of doc, given a list of values returns a list of doubles
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TransformSearch(self, request, context):
    """Transformes a search query using field analyzer and spell checker
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TransformerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Transform': grpc.unary_unary_rpc_method_handler(
          servicer.Transform,
          request_deserializer=rockset_dot_transformer__pb2.TransformRequest.FromString,
          response_serializer=rockset_dot_transformer__pb2.TransformResponse.SerializeToString,
      ),
      'Score': grpc.unary_unary_rpc_method_handler(
          servicer.Score,
          request_deserializer=rockset_dot_transformer__pb2.ScoreRequest.FromString,
          response_serializer=rockset_dot_transformer__pb2.ScoreResponse.SerializeToString,
      ),
      'TransformSearch': grpc.unary_unary_rpc_method_handler(
          servicer.TransformSearch,
          request_deserializer=rockset_dot_transformer__pb2.TransformSearchRequest.FromString,
          response_serializer=rockset_dot_transformer__pb2.TransformSearchResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'rockset.TransformerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
