# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rockset/transformer.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rockset import document_pb2 as rockset_dot_document__pb2
from rockset import value_pb2 as rockset_dot_value__pb2
from rockset import query_pb2 as rockset_dot_query__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rockset/transformer.proto',
  package='rockset',
  syntax='proto3',
  serialized_pb=_b('\n\x19rockset/transformer.proto\x12\x07rockset\x1a\x16rockset/document.proto\x1a\x13rockset/value.proto\x1a\x13rockset/query.proto\"\\\n\x0eTransformField\x12\x12\n\ninput_path\x18\x01 \x03(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x14\n\x0coutput_field\x18\x03 \x01(\t\x12\x12\n\nparameters\x18\x04 \x01(\t\":\n\x0fTransformFields\x12\'\n\x06\x66ields\x18\x01 \x03(\x0b\x32\x17.rockset.TransformField\"=\n\x11SqlTransformField\x12\x12\n\nprojection\x18\x01 \x01(\t\x12\x14\n\x0coutput_field\x18\x02 \x01(\t\"@\n\x12SqlTransformFields\x12*\n\x06\x66ields\x18\x01 \x03(\x0b\x32\x1a.rockset.SqlTransformField\"\x9c\x01\n\x10TransformRequest\x12$\n\tdocuments\x18\x02 \x03(\x0b\x32\x11.rockset.Document\x12\x1a\n\x10transformer_name\x18\x05 \x01(\tH\x00\x12;\n\x14sql_transform_fields\x18\x07 \x01(\x0b\x32\x1b.rockset.SqlTransformFieldsH\x00\x42\t\n\x07t_oneof\"z\n\x0eTransformError\x12*\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x1c.rockset.TransformError.Code\x12\x0b\n\x03msg\x18\x02 \x01(\t\"/\n\x04\x43ode\x12\n\n\x06\x46\x41ILED\x10\x00\x12\x0f\n\x0bUNAVAILABLE\x10\x01\x12\n\n\x06\x44\x45LETE\x10\x02\"r\n\x0fTransformResult\x12%\n\x08\x64ocument\x18\x01 \x01(\x0b\x32\x11.rockset.DocumentH\x00\x12(\n\x05\x65rror\x18\x02 \x01(\x0b\x32\x17.rockset.TransformErrorH\x00\x42\x0e\n\x0cresult_union\">\n\x11TransformResponse\x12)\n\x07results\x18\x01 \x03(\x0b\x32\x18.rockset.TransformResult\"p\n\x0cScoreRequest\x12\x1e\n\x06values\x18\x01 \x03(\x0b\x32\x0e.rockset.Value\x12\x13\n\x0bscorer_name\x18\x02 \x01(\t\x12\x13\n\x0bscorer_code\x18\x03 \x01(\t\x12\x16\n\x0escorer_context\x18\x04 \x01(\t\"\x1f\n\rScoreResponse\x12\x0e\n\x06scores\x18\x01 \x03(\x01\"a\n\x16TransformSearchRequest\x12\x0f\n\x07queries\x18\x01 \x03(\t\x12\x18\n\x10transformer_name\x18\x02 \x01(\t\x12\x1c\n\x14spell_check_language\x18\x03 \x01(\t\"O\n\x17TransformSearchResponse\x12\x34\n\x13transformed_queries\x18\x01 \x03(\x0b\x32\x17.rockset.ProximityQuery2\xec\x01\n\x12TransformerService\x12\x44\n\tTransform\x12\x19.rockset.TransformRequest\x1a\x1a.rockset.TransformResponse\"\x00\x12\x38\n\x05Score\x12\x15.rockset.ScoreRequest\x1a\x16.rockset.ScoreResponse\"\x00\x12V\n\x0fTransformSearch\x12\x1f.rockset.TransformSearchRequest\x1a .rockset.TransformSearchResponse\"\x00\x42\x1a\n\x16io.rockset.transformerP\x01\x62\x06proto3')
  ,
  dependencies=[rockset_dot_document__pb2.DESCRIPTOR,rockset_dot_value__pb2.DESCRIPTOR,rockset_dot_query__pb2.DESCRIPTOR,])



_TRANSFORMERROR_CODE = _descriptor.EnumDescriptor(
  name='Code',
  full_name='rockset.TransformError.Code',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FAILED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNAVAILABLE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DELETE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=621,
  serialized_end=668,
)
_sym_db.RegisterEnumDescriptor(_TRANSFORMERROR_CODE)


_TRANSFORMFIELD = _descriptor.Descriptor(
  name='TransformField',
  full_name='rockset.TransformField',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='input_path', full_name='rockset.TransformField.input_path', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='rockset.TransformField.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='output_field', full_name='rockset.TransformField.output_field', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parameters', full_name='rockset.TransformField.parameters', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=104,
  serialized_end=196,
)


_TRANSFORMFIELDS = _descriptor.Descriptor(
  name='TransformFields',
  full_name='rockset.TransformFields',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='fields', full_name='rockset.TransformFields.fields', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=198,
  serialized_end=256,
)


_SQLTRANSFORMFIELD = _descriptor.Descriptor(
  name='SqlTransformField',
  full_name='rockset.SqlTransformField',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='projection', full_name='rockset.SqlTransformField.projection', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='output_field', full_name='rockset.SqlTransformField.output_field', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=258,
  serialized_end=319,
)


_SQLTRANSFORMFIELDS = _descriptor.Descriptor(
  name='SqlTransformFields',
  full_name='rockset.SqlTransformFields',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='fields', full_name='rockset.SqlTransformFields.fields', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=321,
  serialized_end=385,
)


_TRANSFORMREQUEST = _descriptor.Descriptor(
  name='TransformRequest',
  full_name='rockset.TransformRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='documents', full_name='rockset.TransformRequest.documents', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='transformer_name', full_name='rockset.TransformRequest.transformer_name', index=1,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sql_transform_fields', full_name='rockset.TransformRequest.sql_transform_fields', index=2,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='t_oneof', full_name='rockset.TransformRequest.t_oneof',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=388,
  serialized_end=544,
)


_TRANSFORMERROR = _descriptor.Descriptor(
  name='TransformError',
  full_name='rockset.TransformError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='rockset.TransformError.code', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='msg', full_name='rockset.TransformError.msg', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _TRANSFORMERROR_CODE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=546,
  serialized_end=668,
)


_TRANSFORMRESULT = _descriptor.Descriptor(
  name='TransformResult',
  full_name='rockset.TransformResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='document', full_name='rockset.TransformResult.document', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='rockset.TransformResult.error', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='result_union', full_name='rockset.TransformResult.result_union',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=670,
  serialized_end=784,
)


_TRANSFORMRESPONSE = _descriptor.Descriptor(
  name='TransformResponse',
  full_name='rockset.TransformResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='results', full_name='rockset.TransformResponse.results', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=786,
  serialized_end=848,
)


_SCOREREQUEST = _descriptor.Descriptor(
  name='ScoreRequest',
  full_name='rockset.ScoreRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='values', full_name='rockset.ScoreRequest.values', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scorer_name', full_name='rockset.ScoreRequest.scorer_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scorer_code', full_name='rockset.ScoreRequest.scorer_code', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scorer_context', full_name='rockset.ScoreRequest.scorer_context', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=850,
  serialized_end=962,
)


_SCORERESPONSE = _descriptor.Descriptor(
  name='ScoreResponse',
  full_name='rockset.ScoreResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scores', full_name='rockset.ScoreResponse.scores', index=0,
      number=1, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=964,
  serialized_end=995,
)


_TRANSFORMSEARCHREQUEST = _descriptor.Descriptor(
  name='TransformSearchRequest',
  full_name='rockset.TransformSearchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='queries', full_name='rockset.TransformSearchRequest.queries', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='transformer_name', full_name='rockset.TransformSearchRequest.transformer_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='spell_check_language', full_name='rockset.TransformSearchRequest.spell_check_language', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=997,
  serialized_end=1094,
)


_TRANSFORMSEARCHRESPONSE = _descriptor.Descriptor(
  name='TransformSearchResponse',
  full_name='rockset.TransformSearchResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='transformed_queries', full_name='rockset.TransformSearchResponse.transformed_queries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1096,
  serialized_end=1175,
)

_TRANSFORMFIELDS.fields_by_name['fields'].message_type = _TRANSFORMFIELD
_SQLTRANSFORMFIELDS.fields_by_name['fields'].message_type = _SQLTRANSFORMFIELD
_TRANSFORMREQUEST.fields_by_name['documents'].message_type = rockset_dot_document__pb2._DOCUMENT
_TRANSFORMREQUEST.fields_by_name['sql_transform_fields'].message_type = _SQLTRANSFORMFIELDS
_TRANSFORMREQUEST.oneofs_by_name['t_oneof'].fields.append(
  _TRANSFORMREQUEST.fields_by_name['transformer_name'])
_TRANSFORMREQUEST.fields_by_name['transformer_name'].containing_oneof = _TRANSFORMREQUEST.oneofs_by_name['t_oneof']
_TRANSFORMREQUEST.oneofs_by_name['t_oneof'].fields.append(
  _TRANSFORMREQUEST.fields_by_name['sql_transform_fields'])
_TRANSFORMREQUEST.fields_by_name['sql_transform_fields'].containing_oneof = _TRANSFORMREQUEST.oneofs_by_name['t_oneof']
_TRANSFORMERROR.fields_by_name['code'].enum_type = _TRANSFORMERROR_CODE
_TRANSFORMERROR_CODE.containing_type = _TRANSFORMERROR
_TRANSFORMRESULT.fields_by_name['document'].message_type = rockset_dot_document__pb2._DOCUMENT
_TRANSFORMRESULT.fields_by_name['error'].message_type = _TRANSFORMERROR
_TRANSFORMRESULT.oneofs_by_name['result_union'].fields.append(
  _TRANSFORMRESULT.fields_by_name['document'])
_TRANSFORMRESULT.fields_by_name['document'].containing_oneof = _TRANSFORMRESULT.oneofs_by_name['result_union']
_TRANSFORMRESULT.oneofs_by_name['result_union'].fields.append(
  _TRANSFORMRESULT.fields_by_name['error'])
_TRANSFORMRESULT.fields_by_name['error'].containing_oneof = _TRANSFORMRESULT.oneofs_by_name['result_union']
_TRANSFORMRESPONSE.fields_by_name['results'].message_type = _TRANSFORMRESULT
_SCOREREQUEST.fields_by_name['values'].message_type = rockset_dot_value__pb2._VALUE
_TRANSFORMSEARCHRESPONSE.fields_by_name['transformed_queries'].message_type = rockset_dot_query__pb2._PROXIMITYQUERY
DESCRIPTOR.message_types_by_name['TransformField'] = _TRANSFORMFIELD
DESCRIPTOR.message_types_by_name['TransformFields'] = _TRANSFORMFIELDS
DESCRIPTOR.message_types_by_name['SqlTransformField'] = _SQLTRANSFORMFIELD
DESCRIPTOR.message_types_by_name['SqlTransformFields'] = _SQLTRANSFORMFIELDS
DESCRIPTOR.message_types_by_name['TransformRequest'] = _TRANSFORMREQUEST
DESCRIPTOR.message_types_by_name['TransformError'] = _TRANSFORMERROR
DESCRIPTOR.message_types_by_name['TransformResult'] = _TRANSFORMRESULT
DESCRIPTOR.message_types_by_name['TransformResponse'] = _TRANSFORMRESPONSE
DESCRIPTOR.message_types_by_name['ScoreRequest'] = _SCOREREQUEST
DESCRIPTOR.message_types_by_name['ScoreResponse'] = _SCORERESPONSE
DESCRIPTOR.message_types_by_name['TransformSearchRequest'] = _TRANSFORMSEARCHREQUEST
DESCRIPTOR.message_types_by_name['TransformSearchResponse'] = _TRANSFORMSEARCHRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TransformField = _reflection.GeneratedProtocolMessageType('TransformField', (_message.Message,), dict(
  DESCRIPTOR = _TRANSFORMFIELD,
  __module__ = 'rockset.transformer_pb2'
  # @@protoc_insertion_point(class_scope:rockset.TransformField)
  ))
_sym_db.RegisterMessage(TransformField)

TransformFields = _reflection.GeneratedProtocolMessageType('TransformFields', (_message.Message,), dict(
  DESCRIPTOR = _TRANSFORMFIELDS,
  __module__ = 'rockset.transformer_pb2'
  # @@protoc_insertion_point(class_scope:rockset.TransformFields)
  ))
_sym_db.RegisterMessage(TransformFields)

SqlTransformField = _reflection.GeneratedProtocolMessageType('SqlTransformField', (_message.Message,), dict(
  DESCRIPTOR = _SQLTRANSFORMFIELD,
  __module__ = 'rockset.transformer_pb2'
  # @@protoc_insertion_point(class_scope:rockset.SqlTransformField)
  ))
_sym_db.RegisterMessage(SqlTransformField)

SqlTransformFields = _reflection.GeneratedProtocolMessageType('SqlTransformFields', (_message.Message,), dict(
  DESCRIPTOR = _SQLTRANSFORMFIELDS,
  __module__ = 'rockset.transformer_pb2'
  # @@protoc_insertion_point(class_scope:rockset.SqlTransformFields)
  ))
_sym_db.RegisterMessage(SqlTransformFields)

TransformRequest = _reflection.GeneratedProtocolMessageType('TransformRequest', (_message.Message,), dict(
  DESCRIPTOR = _TRANSFORMREQUEST,
  __module__ = 'rockset.transformer_pb2'
  # @@protoc_insertion_point(class_scope:rockset.TransformRequest)
  ))
_sym_db.RegisterMessage(TransformRequest)

TransformError = _reflection.GeneratedProtocolMessageType('TransformError', (_message.Message,), dict(
  DESCRIPTOR = _TRANSFORMERROR,
  __module__ = 'rockset.transformer_pb2'
  # @@protoc_insertion_point(class_scope:rockset.TransformError)
  ))
_sym_db.RegisterMessage(TransformError)

TransformResult = _reflection.GeneratedProtocolMessageType('TransformResult', (_message.Message,), dict(
  DESCRIPTOR = _TRANSFORMRESULT,
  __module__ = 'rockset.transformer_pb2'
  # @@protoc_insertion_point(class_scope:rockset.TransformResult)
  ))
_sym_db.RegisterMessage(TransformResult)

TransformResponse = _reflection.GeneratedProtocolMessageType('TransformResponse', (_message.Message,), dict(
  DESCRIPTOR = _TRANSFORMRESPONSE,
  __module__ = 'rockset.transformer_pb2'
  # @@protoc_insertion_point(class_scope:rockset.TransformResponse)
  ))
_sym_db.RegisterMessage(TransformResponse)

ScoreRequest = _reflection.GeneratedProtocolMessageType('ScoreRequest', (_message.Message,), dict(
  DESCRIPTOR = _SCOREREQUEST,
  __module__ = 'rockset.transformer_pb2'
  # @@protoc_insertion_point(class_scope:rockset.ScoreRequest)
  ))
_sym_db.RegisterMessage(ScoreRequest)

ScoreResponse = _reflection.GeneratedProtocolMessageType('ScoreResponse', (_message.Message,), dict(
  DESCRIPTOR = _SCORERESPONSE,
  __module__ = 'rockset.transformer_pb2'
  # @@protoc_insertion_point(class_scope:rockset.ScoreResponse)
  ))
_sym_db.RegisterMessage(ScoreResponse)

TransformSearchRequest = _reflection.GeneratedProtocolMessageType('TransformSearchRequest', (_message.Message,), dict(
  DESCRIPTOR = _TRANSFORMSEARCHREQUEST,
  __module__ = 'rockset.transformer_pb2'
  # @@protoc_insertion_point(class_scope:rockset.TransformSearchRequest)
  ))
_sym_db.RegisterMessage(TransformSearchRequest)

TransformSearchResponse = _reflection.GeneratedProtocolMessageType('TransformSearchResponse', (_message.Message,), dict(
  DESCRIPTOR = _TRANSFORMSEARCHRESPONSE,
  __module__ = 'rockset.transformer_pb2'
  # @@protoc_insertion_point(class_scope:rockset.TransformSearchResponse)
  ))
_sym_db.RegisterMessage(TransformSearchResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\026io.rockset.transformerP\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class TransformerServiceStub(object):
    """The service definition allows an application to configure
    an arbitrary transformer to transform a byte-serialized
    message to a rockset Document.
    It can be used to convert a json document to a rockset
    document. It can be used to generate terms from a
    text blob.

    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Transform = channel.unary_unary(
          '/rockset.TransformerService/Transform',
          request_serializer=TransformRequest.SerializeToString,
          response_deserializer=TransformResponse.FromString,
          )
      self.Score = channel.unary_unary(
          '/rockset.TransformerService/Score',
          request_serializer=ScoreRequest.SerializeToString,
          response_deserializer=ScoreResponse.FromString,
          )
      self.TransformSearch = channel.unary_unary(
          '/rockset.TransformerService/TransformSearch',
          request_serializer=TransformSearchRequest.SerializeToString,
          response_deserializer=TransformSearchResponse.FromString,
          )


  class TransformerServiceServicer(object):
    """The service definition allows an application to configure
    an arbitrary transformer to transform a byte-serialized
    message to a rockset Document.
    It can be used to convert a json document to a rockset
    document. It can be used to generate terms from a
    text blob.

    """

    def Transform(self, request, context):
      """Converts a list of documents into one or more
      rockset document.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Score(self, request, context):
      """Scores a list of doc, given a list of values returns a list of doubles
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def TransformSearch(self, request, context):
      """Transformes a search query using field analyzer and spell checker
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_TransformerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Transform': grpc.unary_unary_rpc_method_handler(
            servicer.Transform,
            request_deserializer=TransformRequest.FromString,
            response_serializer=TransformResponse.SerializeToString,
        ),
        'Score': grpc.unary_unary_rpc_method_handler(
            servicer.Score,
            request_deserializer=ScoreRequest.FromString,
            response_serializer=ScoreResponse.SerializeToString,
        ),
        'TransformSearch': grpc.unary_unary_rpc_method_handler(
            servicer.TransformSearch,
            request_deserializer=TransformSearchRequest.FromString,
            response_serializer=TransformSearchResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'rockset.TransformerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaTransformerServiceServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The service definition allows an application to configure
    an arbitrary transformer to transform a byte-serialized
    message to a rockset Document.
    It can be used to convert a json document to a rockset
    document. It can be used to generate terms from a
    text blob.

    """
    def Transform(self, request, context):
      """Converts a list of documents into one or more
      rockset document.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Score(self, request, context):
      """Scores a list of doc, given a list of values returns a list of doubles
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def TransformSearch(self, request, context):
      """Transformes a search query using field analyzer and spell checker
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaTransformerServiceStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The service definition allows an application to configure
    an arbitrary transformer to transform a byte-serialized
    message to a rockset Document.
    It can be used to convert a json document to a rockset
    document. It can be used to generate terms from a
    text blob.

    """
    def Transform(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Converts a list of documents into one or more
      rockset document.
      """
      raise NotImplementedError()
    Transform.future = None
    def Score(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Scores a list of doc, given a list of values returns a list of doubles
      """
      raise NotImplementedError()
    Score.future = None
    def TransformSearch(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Transformes a search query using field analyzer and spell checker
      """
      raise NotImplementedError()
    TransformSearch.future = None


  def beta_create_TransformerService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('rockset.TransformerService', 'Score'): ScoreRequest.FromString,
      ('rockset.TransformerService', 'Transform'): TransformRequest.FromString,
      ('rockset.TransformerService', 'TransformSearch'): TransformSearchRequest.FromString,
    }
    response_serializers = {
      ('rockset.TransformerService', 'Score'): ScoreResponse.SerializeToString,
      ('rockset.TransformerService', 'Transform'): TransformResponse.SerializeToString,
      ('rockset.TransformerService', 'TransformSearch'): TransformSearchResponse.SerializeToString,
    }
    method_implementations = {
      ('rockset.TransformerService', 'Score'): face_utilities.unary_unary_inline(servicer.Score),
      ('rockset.TransformerService', 'Transform'): face_utilities.unary_unary_inline(servicer.Transform),
      ('rockset.TransformerService', 'TransformSearch'): face_utilities.unary_unary_inline(servicer.TransformSearch),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_TransformerService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('rockset.TransformerService', 'Score'): ScoreRequest.SerializeToString,
      ('rockset.TransformerService', 'Transform'): TransformRequest.SerializeToString,
      ('rockset.TransformerService', 'TransformSearch'): TransformSearchRequest.SerializeToString,
    }
    response_deserializers = {
      ('rockset.TransformerService', 'Score'): ScoreResponse.FromString,
      ('rockset.TransformerService', 'Transform'): TransformResponse.FromString,
      ('rockset.TransformerService', 'TransformSearch'): TransformSearchResponse.FromString,
    }
    cardinalities = {
      'Score': cardinality.Cardinality.UNARY_UNARY,
      'Transform': cardinality.Cardinality.UNARY_UNARY,
      'TransformSearch': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'rockset.TransformerService', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
