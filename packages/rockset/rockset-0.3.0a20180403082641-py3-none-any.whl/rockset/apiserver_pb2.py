# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rockset/apiserver.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rockset import collection_pb2 as rockset_dot_collection__pb2
from rockset import view_pb2 as rockset_dot_view__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rockset/apiserver.proto',
  package='rockset',
  syntax='proto3',
  serialized_pb=_b('\n\x17rockset/apiserver.proto\x12\x07rockset\x1a\x18rockset/collection.proto\x1a\x12rockset/view.proto\"\xcb\x01\n\x15\x43ollectionAPIResponse\x12\x46\n\x03\x65rr\x18\x01 \x01(\x0e\x32\x39.rockset.CollectionAPIResponse.CollectionAPIResponseError\x12\x0e\n\x06\x65rrmsg\x18\x02 \x01(\t\x12\'\n\ncollection\x18\x03 \x01(\x0b\x32\x13.rockset.Collection\"1\n\x1a\x43ollectionAPIResponseError\x12\x08\n\x04NONE\x10\x00\x12\t\n\x05\x45RROR\x10\x01\"B\n\x17\x43reateCollectionRequest\x12\'\n\ncollection\x18\x01 \x01(\x0b\x32\x13.rockset.Collection\"\x18\n\x16ListCollectionsRequest\"\xd6\x01\n\x1aListCollectionsAPIResponse\x12K\n\x03\x65rr\x18\x01 \x01(\x0e\x32>.rockset.ListCollectionsAPIResponse.CollectionAPIResponseError\x12\x0e\n\x06\x65rrmsg\x18\x02 \x01(\t\x12(\n\x0b\x63ollections\x18\x03 \x03(\x0b\x32\x13.rockset.Collection\"1\n\x1a\x43ollectionAPIResponseError\x12\x08\n\x04NONE\x10\x00\x12\t\n\x05\x45RROR\x10\x01\"D\n\x19\x44\x65scribeCollectionRequest\x12\'\n\ncollection\x18\x01 \x01(\x0b\x32\x13.rockset.Collection\"e\n\x16\x41lterCollectionRequest\x12%\n\x08original\x18\x01 \x01(\x0b\x32\x13.rockset.Collection\x12$\n\x07\x61ltered\x18\x02 \x01(\x0b\x32\x13.rockset.Collection\"D\n\x19TruncateCollectionRequest\x12\'\n\ncollection\x18\x01 \x01(\x0b\x32\x13.rockset.Collection\"@\n\x15\x44ropCollectionRequest\x12\'\n\ncollection\x18\x01 \x01(\x0b\x32\x13.rockset.Collection\"\x9c\x01\n\x0fViewAPIResponse\x12:\n\x03\x65rr\x18\x01 \x01(\x0e\x32-.rockset.ViewAPIResponse.ViewAPIResponseError\x12\x0e\n\x06\x65rrmsg\x18\x02 \x01(\t\x12\x1b\n\x04view\x18\x03 \x01(\x0b\x32\r.rockset.View\" \n\x14ViewAPIResponseError\x12\x08\n\x04NONE\x10\x00\"0\n\x11\x43reateViewRequest\x12\x1b\n\x04view\x18\x01 \x01(\x0b\x32\r.rockset.View\"\x12\n\x10ListViewsRequest\"\xa7\x01\n\x14ListViewsAPIResponse\x12?\n\x03\x65rr\x18\x01 \x01(\x0e\x32\x32.rockset.ListViewsAPIResponse.ViewAPIResponseError\x12\x0e\n\x06\x65rrmsg\x18\x02 \x01(\t\x12\x1c\n\x05views\x18\x03 \x03(\x0b\x32\r.rockset.View\" \n\x14ViewAPIResponseError\x12\x08\n\x04NONE\x10\x00\"2\n\x13\x44\x65scribeViewRequest\x12\x1b\n\x04view\x18\x01 \x01(\x0b\x32\r.rockset.View\"S\n\x10\x41lterViewRequest\x12\x1f\n\x08original\x18\x01 \x01(\x0b\x32\r.rockset.View\x12\x1e\n\x07\x61ltered\x18\x02 \x01(\x0b\x32\r.rockset.View\".\n\x0f\x44ropViewRequest\x12\x1b\n\x04view\x18\x01 \x01(\x0b\x32\r.rockset.View2\xff\x06\n\tAPIServer\x12V\n\x10\x43reateCollection\x12 .rockset.CreateCollectionRequest\x1a\x1e.rockset.CollectionAPIResponse\"\x00\x12Y\n\x0fListCollections\x12\x1f.rockset.ListCollectionsRequest\x1a#.rockset.ListCollectionsAPIResponse\"\x00\x12Z\n\x12\x44\x65scribeCollection\x12\".rockset.DescribeCollectionRequest\x1a\x1e.rockset.CollectionAPIResponse\"\x00\x12T\n\x0f\x41lterCollection\x12\x1f.rockset.AlterCollectionRequest\x1a\x1e.rockset.CollectionAPIResponse\"\x00\x12Z\n\x12TruncateCollection\x12\".rockset.TruncateCollectionRequest\x1a\x1e.rockset.CollectionAPIResponse\"\x00\x12R\n\x0e\x44ropCollection\x12\x1e.rockset.DropCollectionRequest\x1a\x1e.rockset.CollectionAPIResponse\"\x00\x12\x44\n\nCreateView\x12\x1a.rockset.CreateViewRequest\x1a\x18.rockset.ViewAPIResponse\"\x00\x12G\n\tListViews\x12\x19.rockset.ListViewsRequest\x1a\x1d.rockset.ListViewsAPIResponse\"\x00\x12H\n\x0c\x44\x65scribeView\x12\x1c.rockset.DescribeViewRequest\x1a\x18.rockset.ViewAPIResponse\"\x00\x12\x42\n\tAlterView\x12\x19.rockset.AlterViewRequest\x1a\x18.rockset.ViewAPIResponse\"\x00\x12@\n\x08\x44ropView\x12\x18.rockset.DropViewRequest\x1a\x18.rockset.ViewAPIResponse\"\x00\x42\x14\n\x10io.rockset.protoP\x01\x62\x06proto3')
  ,
  dependencies=[rockset_dot_collection__pb2.DESCRIPTOR,rockset_dot_view__pb2.DESCRIPTOR,])



_COLLECTIONAPIRESPONSE_COLLECTIONAPIRESPONSEERROR = _descriptor.EnumDescriptor(
  name='CollectionAPIResponseError',
  full_name='rockset.CollectionAPIResponse.CollectionAPIResponseError',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=237,
  serialized_end=286,
)
_sym_db.RegisterEnumDescriptor(_COLLECTIONAPIRESPONSE_COLLECTIONAPIRESPONSEERROR)

_LISTCOLLECTIONSAPIRESPONSE_COLLECTIONAPIRESPONSEERROR = _descriptor.EnumDescriptor(
  name='CollectionAPIResponseError',
  full_name='rockset.ListCollectionsAPIResponse.CollectionAPIResponseError',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=237,
  serialized_end=286,
)
_sym_db.RegisterEnumDescriptor(_LISTCOLLECTIONSAPIRESPONSE_COLLECTIONAPIRESPONSEERROR)

_VIEWAPIRESPONSE_VIEWAPIRESPONSEERROR = _descriptor.EnumDescriptor(
  name='ViewAPIResponseError',
  full_name='rockset.ViewAPIResponse.ViewAPIResponseError',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1033,
  serialized_end=1065,
)
_sym_db.RegisterEnumDescriptor(_VIEWAPIRESPONSE_VIEWAPIRESPONSEERROR)

_LISTVIEWSAPIRESPONSE_VIEWAPIRESPONSEERROR = _descriptor.EnumDescriptor(
  name='ViewAPIResponseError',
  full_name='rockset.ListViewsAPIResponse.ViewAPIResponseError',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1033,
  serialized_end=1065,
)
_sym_db.RegisterEnumDescriptor(_LISTVIEWSAPIRESPONSE_VIEWAPIRESPONSEERROR)


_COLLECTIONAPIRESPONSE = _descriptor.Descriptor(
  name='CollectionAPIResponse',
  full_name='rockset.CollectionAPIResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='err', full_name='rockset.CollectionAPIResponse.err', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errmsg', full_name='rockset.CollectionAPIResponse.errmsg', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='collection', full_name='rockset.CollectionAPIResponse.collection', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _COLLECTIONAPIRESPONSE_COLLECTIONAPIRESPONSEERROR,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=83,
  serialized_end=286,
)


_CREATECOLLECTIONREQUEST = _descriptor.Descriptor(
  name='CreateCollectionRequest',
  full_name='rockset.CreateCollectionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='collection', full_name='rockset.CreateCollectionRequest.collection', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=288,
  serialized_end=354,
)


_LISTCOLLECTIONSREQUEST = _descriptor.Descriptor(
  name='ListCollectionsRequest',
  full_name='rockset.ListCollectionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=356,
  serialized_end=380,
)


_LISTCOLLECTIONSAPIRESPONSE = _descriptor.Descriptor(
  name='ListCollectionsAPIResponse',
  full_name='rockset.ListCollectionsAPIResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='err', full_name='rockset.ListCollectionsAPIResponse.err', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errmsg', full_name='rockset.ListCollectionsAPIResponse.errmsg', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='collections', full_name='rockset.ListCollectionsAPIResponse.collections', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LISTCOLLECTIONSAPIRESPONSE_COLLECTIONAPIRESPONSEERROR,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=383,
  serialized_end=597,
)


_DESCRIBECOLLECTIONREQUEST = _descriptor.Descriptor(
  name='DescribeCollectionRequest',
  full_name='rockset.DescribeCollectionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='collection', full_name='rockset.DescribeCollectionRequest.collection', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=599,
  serialized_end=667,
)


_ALTERCOLLECTIONREQUEST = _descriptor.Descriptor(
  name='AlterCollectionRequest',
  full_name='rockset.AlterCollectionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='original', full_name='rockset.AlterCollectionRequest.original', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='altered', full_name='rockset.AlterCollectionRequest.altered', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=669,
  serialized_end=770,
)


_TRUNCATECOLLECTIONREQUEST = _descriptor.Descriptor(
  name='TruncateCollectionRequest',
  full_name='rockset.TruncateCollectionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='collection', full_name='rockset.TruncateCollectionRequest.collection', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=772,
  serialized_end=840,
)


_DROPCOLLECTIONREQUEST = _descriptor.Descriptor(
  name='DropCollectionRequest',
  full_name='rockset.DropCollectionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='collection', full_name='rockset.DropCollectionRequest.collection', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=842,
  serialized_end=906,
)


_VIEWAPIRESPONSE = _descriptor.Descriptor(
  name='ViewAPIResponse',
  full_name='rockset.ViewAPIResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='err', full_name='rockset.ViewAPIResponse.err', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errmsg', full_name='rockset.ViewAPIResponse.errmsg', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='view', full_name='rockset.ViewAPIResponse.view', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _VIEWAPIRESPONSE_VIEWAPIRESPONSEERROR,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=909,
  serialized_end=1065,
)


_CREATEVIEWREQUEST = _descriptor.Descriptor(
  name='CreateViewRequest',
  full_name='rockset.CreateViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='view', full_name='rockset.CreateViewRequest.view', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1067,
  serialized_end=1115,
)


_LISTVIEWSREQUEST = _descriptor.Descriptor(
  name='ListViewsRequest',
  full_name='rockset.ListViewsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1117,
  serialized_end=1135,
)


_LISTVIEWSAPIRESPONSE = _descriptor.Descriptor(
  name='ListViewsAPIResponse',
  full_name='rockset.ListViewsAPIResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='err', full_name='rockset.ListViewsAPIResponse.err', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errmsg', full_name='rockset.ListViewsAPIResponse.errmsg', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='views', full_name='rockset.ListViewsAPIResponse.views', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LISTVIEWSAPIRESPONSE_VIEWAPIRESPONSEERROR,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1138,
  serialized_end=1305,
)


_DESCRIBEVIEWREQUEST = _descriptor.Descriptor(
  name='DescribeViewRequest',
  full_name='rockset.DescribeViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='view', full_name='rockset.DescribeViewRequest.view', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1307,
  serialized_end=1357,
)


_ALTERVIEWREQUEST = _descriptor.Descriptor(
  name='AlterViewRequest',
  full_name='rockset.AlterViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='original', full_name='rockset.AlterViewRequest.original', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='altered', full_name='rockset.AlterViewRequest.altered', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1359,
  serialized_end=1442,
)


_DROPVIEWREQUEST = _descriptor.Descriptor(
  name='DropViewRequest',
  full_name='rockset.DropViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='view', full_name='rockset.DropViewRequest.view', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1444,
  serialized_end=1490,
)

_COLLECTIONAPIRESPONSE.fields_by_name['err'].enum_type = _COLLECTIONAPIRESPONSE_COLLECTIONAPIRESPONSEERROR
_COLLECTIONAPIRESPONSE.fields_by_name['collection'].message_type = rockset_dot_collection__pb2._COLLECTION
_COLLECTIONAPIRESPONSE_COLLECTIONAPIRESPONSEERROR.containing_type = _COLLECTIONAPIRESPONSE
_CREATECOLLECTIONREQUEST.fields_by_name['collection'].message_type = rockset_dot_collection__pb2._COLLECTION
_LISTCOLLECTIONSAPIRESPONSE.fields_by_name['err'].enum_type = _LISTCOLLECTIONSAPIRESPONSE_COLLECTIONAPIRESPONSEERROR
_LISTCOLLECTIONSAPIRESPONSE.fields_by_name['collections'].message_type = rockset_dot_collection__pb2._COLLECTION
_LISTCOLLECTIONSAPIRESPONSE_COLLECTIONAPIRESPONSEERROR.containing_type = _LISTCOLLECTIONSAPIRESPONSE
_DESCRIBECOLLECTIONREQUEST.fields_by_name['collection'].message_type = rockset_dot_collection__pb2._COLLECTION
_ALTERCOLLECTIONREQUEST.fields_by_name['original'].message_type = rockset_dot_collection__pb2._COLLECTION
_ALTERCOLLECTIONREQUEST.fields_by_name['altered'].message_type = rockset_dot_collection__pb2._COLLECTION
_TRUNCATECOLLECTIONREQUEST.fields_by_name['collection'].message_type = rockset_dot_collection__pb2._COLLECTION
_DROPCOLLECTIONREQUEST.fields_by_name['collection'].message_type = rockset_dot_collection__pb2._COLLECTION
_VIEWAPIRESPONSE.fields_by_name['err'].enum_type = _VIEWAPIRESPONSE_VIEWAPIRESPONSEERROR
_VIEWAPIRESPONSE.fields_by_name['view'].message_type = rockset_dot_view__pb2._VIEW
_VIEWAPIRESPONSE_VIEWAPIRESPONSEERROR.containing_type = _VIEWAPIRESPONSE
_CREATEVIEWREQUEST.fields_by_name['view'].message_type = rockset_dot_view__pb2._VIEW
_LISTVIEWSAPIRESPONSE.fields_by_name['err'].enum_type = _LISTVIEWSAPIRESPONSE_VIEWAPIRESPONSEERROR
_LISTVIEWSAPIRESPONSE.fields_by_name['views'].message_type = rockset_dot_view__pb2._VIEW
_LISTVIEWSAPIRESPONSE_VIEWAPIRESPONSEERROR.containing_type = _LISTVIEWSAPIRESPONSE
_DESCRIBEVIEWREQUEST.fields_by_name['view'].message_type = rockset_dot_view__pb2._VIEW
_ALTERVIEWREQUEST.fields_by_name['original'].message_type = rockset_dot_view__pb2._VIEW
_ALTERVIEWREQUEST.fields_by_name['altered'].message_type = rockset_dot_view__pb2._VIEW
_DROPVIEWREQUEST.fields_by_name['view'].message_type = rockset_dot_view__pb2._VIEW
DESCRIPTOR.message_types_by_name['CollectionAPIResponse'] = _COLLECTIONAPIRESPONSE
DESCRIPTOR.message_types_by_name['CreateCollectionRequest'] = _CREATECOLLECTIONREQUEST
DESCRIPTOR.message_types_by_name['ListCollectionsRequest'] = _LISTCOLLECTIONSREQUEST
DESCRIPTOR.message_types_by_name['ListCollectionsAPIResponse'] = _LISTCOLLECTIONSAPIRESPONSE
DESCRIPTOR.message_types_by_name['DescribeCollectionRequest'] = _DESCRIBECOLLECTIONREQUEST
DESCRIPTOR.message_types_by_name['AlterCollectionRequest'] = _ALTERCOLLECTIONREQUEST
DESCRIPTOR.message_types_by_name['TruncateCollectionRequest'] = _TRUNCATECOLLECTIONREQUEST
DESCRIPTOR.message_types_by_name['DropCollectionRequest'] = _DROPCOLLECTIONREQUEST
DESCRIPTOR.message_types_by_name['ViewAPIResponse'] = _VIEWAPIRESPONSE
DESCRIPTOR.message_types_by_name['CreateViewRequest'] = _CREATEVIEWREQUEST
DESCRIPTOR.message_types_by_name['ListViewsRequest'] = _LISTVIEWSREQUEST
DESCRIPTOR.message_types_by_name['ListViewsAPIResponse'] = _LISTVIEWSAPIRESPONSE
DESCRIPTOR.message_types_by_name['DescribeViewRequest'] = _DESCRIBEVIEWREQUEST
DESCRIPTOR.message_types_by_name['AlterViewRequest'] = _ALTERVIEWREQUEST
DESCRIPTOR.message_types_by_name['DropViewRequest'] = _DROPVIEWREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CollectionAPIResponse = _reflection.GeneratedProtocolMessageType('CollectionAPIResponse', (_message.Message,), dict(
  DESCRIPTOR = _COLLECTIONAPIRESPONSE,
  __module__ = 'rockset.apiserver_pb2'
  # @@protoc_insertion_point(class_scope:rockset.CollectionAPIResponse)
  ))
_sym_db.RegisterMessage(CollectionAPIResponse)

CreateCollectionRequest = _reflection.GeneratedProtocolMessageType('CreateCollectionRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATECOLLECTIONREQUEST,
  __module__ = 'rockset.apiserver_pb2'
  # @@protoc_insertion_point(class_scope:rockset.CreateCollectionRequest)
  ))
_sym_db.RegisterMessage(CreateCollectionRequest)

ListCollectionsRequest = _reflection.GeneratedProtocolMessageType('ListCollectionsRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTCOLLECTIONSREQUEST,
  __module__ = 'rockset.apiserver_pb2'
  # @@protoc_insertion_point(class_scope:rockset.ListCollectionsRequest)
  ))
_sym_db.RegisterMessage(ListCollectionsRequest)

ListCollectionsAPIResponse = _reflection.GeneratedProtocolMessageType('ListCollectionsAPIResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTCOLLECTIONSAPIRESPONSE,
  __module__ = 'rockset.apiserver_pb2'
  # @@protoc_insertion_point(class_scope:rockset.ListCollectionsAPIResponse)
  ))
_sym_db.RegisterMessage(ListCollectionsAPIResponse)

DescribeCollectionRequest = _reflection.GeneratedProtocolMessageType('DescribeCollectionRequest', (_message.Message,), dict(
  DESCRIPTOR = _DESCRIBECOLLECTIONREQUEST,
  __module__ = 'rockset.apiserver_pb2'
  # @@protoc_insertion_point(class_scope:rockset.DescribeCollectionRequest)
  ))
_sym_db.RegisterMessage(DescribeCollectionRequest)

AlterCollectionRequest = _reflection.GeneratedProtocolMessageType('AlterCollectionRequest', (_message.Message,), dict(
  DESCRIPTOR = _ALTERCOLLECTIONREQUEST,
  __module__ = 'rockset.apiserver_pb2'
  # @@protoc_insertion_point(class_scope:rockset.AlterCollectionRequest)
  ))
_sym_db.RegisterMessage(AlterCollectionRequest)

TruncateCollectionRequest = _reflection.GeneratedProtocolMessageType('TruncateCollectionRequest', (_message.Message,), dict(
  DESCRIPTOR = _TRUNCATECOLLECTIONREQUEST,
  __module__ = 'rockset.apiserver_pb2'
  # @@protoc_insertion_point(class_scope:rockset.TruncateCollectionRequest)
  ))
_sym_db.RegisterMessage(TruncateCollectionRequest)

DropCollectionRequest = _reflection.GeneratedProtocolMessageType('DropCollectionRequest', (_message.Message,), dict(
  DESCRIPTOR = _DROPCOLLECTIONREQUEST,
  __module__ = 'rockset.apiserver_pb2'
  # @@protoc_insertion_point(class_scope:rockset.DropCollectionRequest)
  ))
_sym_db.RegisterMessage(DropCollectionRequest)

ViewAPIResponse = _reflection.GeneratedProtocolMessageType('ViewAPIResponse', (_message.Message,), dict(
  DESCRIPTOR = _VIEWAPIRESPONSE,
  __module__ = 'rockset.apiserver_pb2'
  # @@protoc_insertion_point(class_scope:rockset.ViewAPIResponse)
  ))
_sym_db.RegisterMessage(ViewAPIResponse)

CreateViewRequest = _reflection.GeneratedProtocolMessageType('CreateViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATEVIEWREQUEST,
  __module__ = 'rockset.apiserver_pb2'
  # @@protoc_insertion_point(class_scope:rockset.CreateViewRequest)
  ))
_sym_db.RegisterMessage(CreateViewRequest)

ListViewsRequest = _reflection.GeneratedProtocolMessageType('ListViewsRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTVIEWSREQUEST,
  __module__ = 'rockset.apiserver_pb2'
  # @@protoc_insertion_point(class_scope:rockset.ListViewsRequest)
  ))
_sym_db.RegisterMessage(ListViewsRequest)

ListViewsAPIResponse = _reflection.GeneratedProtocolMessageType('ListViewsAPIResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTVIEWSAPIRESPONSE,
  __module__ = 'rockset.apiserver_pb2'
  # @@protoc_insertion_point(class_scope:rockset.ListViewsAPIResponse)
  ))
_sym_db.RegisterMessage(ListViewsAPIResponse)

DescribeViewRequest = _reflection.GeneratedProtocolMessageType('DescribeViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _DESCRIBEVIEWREQUEST,
  __module__ = 'rockset.apiserver_pb2'
  # @@protoc_insertion_point(class_scope:rockset.DescribeViewRequest)
  ))
_sym_db.RegisterMessage(DescribeViewRequest)

AlterViewRequest = _reflection.GeneratedProtocolMessageType('AlterViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _ALTERVIEWREQUEST,
  __module__ = 'rockset.apiserver_pb2'
  # @@protoc_insertion_point(class_scope:rockset.AlterViewRequest)
  ))
_sym_db.RegisterMessage(AlterViewRequest)

DropViewRequest = _reflection.GeneratedProtocolMessageType('DropViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _DROPVIEWREQUEST,
  __module__ = 'rockset.apiserver_pb2'
  # @@protoc_insertion_point(class_scope:rockset.DropViewRequest)
  ))
_sym_db.RegisterMessage(DropViewRequest)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\020io.rockset.protoP\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class APIServerStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CreateCollection = channel.unary_unary(
          '/rockset.APIServer/CreateCollection',
          request_serializer=CreateCollectionRequest.SerializeToString,
          response_deserializer=CollectionAPIResponse.FromString,
          )
      self.ListCollections = channel.unary_unary(
          '/rockset.APIServer/ListCollections',
          request_serializer=ListCollectionsRequest.SerializeToString,
          response_deserializer=ListCollectionsAPIResponse.FromString,
          )
      self.DescribeCollection = channel.unary_unary(
          '/rockset.APIServer/DescribeCollection',
          request_serializer=DescribeCollectionRequest.SerializeToString,
          response_deserializer=CollectionAPIResponse.FromString,
          )
      self.AlterCollection = channel.unary_unary(
          '/rockset.APIServer/AlterCollection',
          request_serializer=AlterCollectionRequest.SerializeToString,
          response_deserializer=CollectionAPIResponse.FromString,
          )
      self.TruncateCollection = channel.unary_unary(
          '/rockset.APIServer/TruncateCollection',
          request_serializer=TruncateCollectionRequest.SerializeToString,
          response_deserializer=CollectionAPIResponse.FromString,
          )
      self.DropCollection = channel.unary_unary(
          '/rockset.APIServer/DropCollection',
          request_serializer=DropCollectionRequest.SerializeToString,
          response_deserializer=CollectionAPIResponse.FromString,
          )
      self.CreateView = channel.unary_unary(
          '/rockset.APIServer/CreateView',
          request_serializer=CreateViewRequest.SerializeToString,
          response_deserializer=ViewAPIResponse.FromString,
          )
      self.ListViews = channel.unary_unary(
          '/rockset.APIServer/ListViews',
          request_serializer=ListViewsRequest.SerializeToString,
          response_deserializer=ListViewsAPIResponse.FromString,
          )
      self.DescribeView = channel.unary_unary(
          '/rockset.APIServer/DescribeView',
          request_serializer=DescribeViewRequest.SerializeToString,
          response_deserializer=ViewAPIResponse.FromString,
          )
      self.AlterView = channel.unary_unary(
          '/rockset.APIServer/AlterView',
          request_serializer=AlterViewRequest.SerializeToString,
          response_deserializer=ViewAPIResponse.FromString,
          )
      self.DropView = channel.unary_unary(
          '/rockset.APIServer/DropView',
          request_serializer=DropViewRequest.SerializeToString,
          response_deserializer=ViewAPIResponse.FromString,
          )


  class APIServerServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CreateCollection(self, request, context):
      """Collection DDL APIs
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListCollections(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DescribeCollection(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AlterCollection(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def TruncateCollection(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DropCollection(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateView(self, request, context):
      """View DDL APIs
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListViews(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DescribeView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AlterView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DropView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_APIServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CreateCollection': grpc.unary_unary_rpc_method_handler(
            servicer.CreateCollection,
            request_deserializer=CreateCollectionRequest.FromString,
            response_serializer=CollectionAPIResponse.SerializeToString,
        ),
        'ListCollections': grpc.unary_unary_rpc_method_handler(
            servicer.ListCollections,
            request_deserializer=ListCollectionsRequest.FromString,
            response_serializer=ListCollectionsAPIResponse.SerializeToString,
        ),
        'DescribeCollection': grpc.unary_unary_rpc_method_handler(
            servicer.DescribeCollection,
            request_deserializer=DescribeCollectionRequest.FromString,
            response_serializer=CollectionAPIResponse.SerializeToString,
        ),
        'AlterCollection': grpc.unary_unary_rpc_method_handler(
            servicer.AlterCollection,
            request_deserializer=AlterCollectionRequest.FromString,
            response_serializer=CollectionAPIResponse.SerializeToString,
        ),
        'TruncateCollection': grpc.unary_unary_rpc_method_handler(
            servicer.TruncateCollection,
            request_deserializer=TruncateCollectionRequest.FromString,
            response_serializer=CollectionAPIResponse.SerializeToString,
        ),
        'DropCollection': grpc.unary_unary_rpc_method_handler(
            servicer.DropCollection,
            request_deserializer=DropCollectionRequest.FromString,
            response_serializer=CollectionAPIResponse.SerializeToString,
        ),
        'CreateView': grpc.unary_unary_rpc_method_handler(
            servicer.CreateView,
            request_deserializer=CreateViewRequest.FromString,
            response_serializer=ViewAPIResponse.SerializeToString,
        ),
        'ListViews': grpc.unary_unary_rpc_method_handler(
            servicer.ListViews,
            request_deserializer=ListViewsRequest.FromString,
            response_serializer=ListViewsAPIResponse.SerializeToString,
        ),
        'DescribeView': grpc.unary_unary_rpc_method_handler(
            servicer.DescribeView,
            request_deserializer=DescribeViewRequest.FromString,
            response_serializer=ViewAPIResponse.SerializeToString,
        ),
        'AlterView': grpc.unary_unary_rpc_method_handler(
            servicer.AlterView,
            request_deserializer=AlterViewRequest.FromString,
            response_serializer=ViewAPIResponse.SerializeToString,
        ),
        'DropView': grpc.unary_unary_rpc_method_handler(
            servicer.DropView,
            request_deserializer=DropViewRequest.FromString,
            response_serializer=ViewAPIResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'rockset.APIServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaAPIServerServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CreateCollection(self, request, context):
      """Collection DDL APIs
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListCollections(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DescribeCollection(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AlterCollection(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def TruncateCollection(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DropCollection(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateView(self, request, context):
      """View DDL APIs
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListViews(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DescribeView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AlterView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DropView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaAPIServerStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CreateCollection(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Collection DDL APIs
      """
      raise NotImplementedError()
    CreateCollection.future = None
    def ListCollections(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ListCollections.future = None
    def DescribeCollection(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DescribeCollection.future = None
    def AlterCollection(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AlterCollection.future = None
    def TruncateCollection(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    TruncateCollection.future = None
    def DropCollection(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DropCollection.future = None
    def CreateView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """View DDL APIs
      """
      raise NotImplementedError()
    CreateView.future = None
    def ListViews(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ListViews.future = None
    def DescribeView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DescribeView.future = None
    def AlterView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AlterView.future = None
    def DropView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DropView.future = None


  def beta_create_APIServer_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('rockset.APIServer', 'AlterCollection'): AlterCollectionRequest.FromString,
      ('rockset.APIServer', 'AlterView'): AlterViewRequest.FromString,
      ('rockset.APIServer', 'CreateCollection'): CreateCollectionRequest.FromString,
      ('rockset.APIServer', 'CreateView'): CreateViewRequest.FromString,
      ('rockset.APIServer', 'DescribeCollection'): DescribeCollectionRequest.FromString,
      ('rockset.APIServer', 'DescribeView'): DescribeViewRequest.FromString,
      ('rockset.APIServer', 'DropCollection'): DropCollectionRequest.FromString,
      ('rockset.APIServer', 'DropView'): DropViewRequest.FromString,
      ('rockset.APIServer', 'ListCollections'): ListCollectionsRequest.FromString,
      ('rockset.APIServer', 'ListViews'): ListViewsRequest.FromString,
      ('rockset.APIServer', 'TruncateCollection'): TruncateCollectionRequest.FromString,
    }
    response_serializers = {
      ('rockset.APIServer', 'AlterCollection'): CollectionAPIResponse.SerializeToString,
      ('rockset.APIServer', 'AlterView'): ViewAPIResponse.SerializeToString,
      ('rockset.APIServer', 'CreateCollection'): CollectionAPIResponse.SerializeToString,
      ('rockset.APIServer', 'CreateView'): ViewAPIResponse.SerializeToString,
      ('rockset.APIServer', 'DescribeCollection'): CollectionAPIResponse.SerializeToString,
      ('rockset.APIServer', 'DescribeView'): ViewAPIResponse.SerializeToString,
      ('rockset.APIServer', 'DropCollection'): CollectionAPIResponse.SerializeToString,
      ('rockset.APIServer', 'DropView'): ViewAPIResponse.SerializeToString,
      ('rockset.APIServer', 'ListCollections'): ListCollectionsAPIResponse.SerializeToString,
      ('rockset.APIServer', 'ListViews'): ListViewsAPIResponse.SerializeToString,
      ('rockset.APIServer', 'TruncateCollection'): CollectionAPIResponse.SerializeToString,
    }
    method_implementations = {
      ('rockset.APIServer', 'AlterCollection'): face_utilities.unary_unary_inline(servicer.AlterCollection),
      ('rockset.APIServer', 'AlterView'): face_utilities.unary_unary_inline(servicer.AlterView),
      ('rockset.APIServer', 'CreateCollection'): face_utilities.unary_unary_inline(servicer.CreateCollection),
      ('rockset.APIServer', 'CreateView'): face_utilities.unary_unary_inline(servicer.CreateView),
      ('rockset.APIServer', 'DescribeCollection'): face_utilities.unary_unary_inline(servicer.DescribeCollection),
      ('rockset.APIServer', 'DescribeView'): face_utilities.unary_unary_inline(servicer.DescribeView),
      ('rockset.APIServer', 'DropCollection'): face_utilities.unary_unary_inline(servicer.DropCollection),
      ('rockset.APIServer', 'DropView'): face_utilities.unary_unary_inline(servicer.DropView),
      ('rockset.APIServer', 'ListCollections'): face_utilities.unary_unary_inline(servicer.ListCollections),
      ('rockset.APIServer', 'ListViews'): face_utilities.unary_unary_inline(servicer.ListViews),
      ('rockset.APIServer', 'TruncateCollection'): face_utilities.unary_unary_inline(servicer.TruncateCollection),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_APIServer_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('rockset.APIServer', 'AlterCollection'): AlterCollectionRequest.SerializeToString,
      ('rockset.APIServer', 'AlterView'): AlterViewRequest.SerializeToString,
      ('rockset.APIServer', 'CreateCollection'): CreateCollectionRequest.SerializeToString,
      ('rockset.APIServer', 'CreateView'): CreateViewRequest.SerializeToString,
      ('rockset.APIServer', 'DescribeCollection'): DescribeCollectionRequest.SerializeToString,
      ('rockset.APIServer', 'DescribeView'): DescribeViewRequest.SerializeToString,
      ('rockset.APIServer', 'DropCollection'): DropCollectionRequest.SerializeToString,
      ('rockset.APIServer', 'DropView'): DropViewRequest.SerializeToString,
      ('rockset.APIServer', 'ListCollections'): ListCollectionsRequest.SerializeToString,
      ('rockset.APIServer', 'ListViews'): ListViewsRequest.SerializeToString,
      ('rockset.APIServer', 'TruncateCollection'): TruncateCollectionRequest.SerializeToString,
    }
    response_deserializers = {
      ('rockset.APIServer', 'AlterCollection'): CollectionAPIResponse.FromString,
      ('rockset.APIServer', 'AlterView'): ViewAPIResponse.FromString,
      ('rockset.APIServer', 'CreateCollection'): CollectionAPIResponse.FromString,
      ('rockset.APIServer', 'CreateView'): ViewAPIResponse.FromString,
      ('rockset.APIServer', 'DescribeCollection'): CollectionAPIResponse.FromString,
      ('rockset.APIServer', 'DescribeView'): ViewAPIResponse.FromString,
      ('rockset.APIServer', 'DropCollection'): CollectionAPIResponse.FromString,
      ('rockset.APIServer', 'DropView'): ViewAPIResponse.FromString,
      ('rockset.APIServer', 'ListCollections'): ListCollectionsAPIResponse.FromString,
      ('rockset.APIServer', 'ListViews'): ListViewsAPIResponse.FromString,
      ('rockset.APIServer', 'TruncateCollection'): CollectionAPIResponse.FromString,
    }
    cardinalities = {
      'AlterCollection': cardinality.Cardinality.UNARY_UNARY,
      'AlterView': cardinality.Cardinality.UNARY_UNARY,
      'CreateCollection': cardinality.Cardinality.UNARY_UNARY,
      'CreateView': cardinality.Cardinality.UNARY_UNARY,
      'DescribeCollection': cardinality.Cardinality.UNARY_UNARY,
      'DescribeView': cardinality.Cardinality.UNARY_UNARY,
      'DropCollection': cardinality.Cardinality.UNARY_UNARY,
      'DropView': cardinality.Cardinality.UNARY_UNARY,
      'ListCollections': cardinality.Cardinality.UNARY_UNARY,
      'ListViews': cardinality.Cardinality.UNARY_UNARY,
      'TruncateCollection': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'rockset.APIServer', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
