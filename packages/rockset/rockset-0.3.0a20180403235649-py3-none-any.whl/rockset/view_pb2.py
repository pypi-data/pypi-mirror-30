# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rockset/view.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rockset import value_pb2 as rockset_dot_value__pb2
from rockset import infostats_pb2 as rockset_dot_infostats__pb2
from rockset import collection_pb2 as rockset_dot_collection__pb2
from rockset import query_pb2 as rockset_dot_query__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rockset/view.proto',
  package='rockset',
  syntax='proto3',
  serialized_pb=_b('\n\x12rockset/view.proto\x12\x07rockset\x1a\x13rockset/value.proto\x1a\x17rockset/infostats.proto\x1a\x18rockset/collection.proto\x1a\x13rockset/query.proto\"\xa8\x01\n\x04View\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06tenant\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12$\n\x07sources\x18\x04 \x03(\x0b\x32\x13.rockset.ViewSource\x12\x19\n\x03sla\x18\x05 \x01(\x0b\x32\x0c.rockset.SLA\x12\n\n\x02id\x18\x64 \x01(\t\x12 \n\x04info\x18\x65 \x01(\x0b\x32\x12.rockset.Infostats\"\xa9\x01\n\nViewSource\x12\'\n\ncollection\x18\x01 \x01(\x0b\x32\x13.rockset.Collection\x12\x1e\n\x06\x66ilter\x18\x02 \x01(\x0b\x32\x0e.rockset.Query\x12\x1d\n\x06\x66ields\x18\x03 \x01(\x0b\x32\r.rockset.Type\x12\x1f\n\x08sk_field\x18\x04 \x01(\x0b\x32\r.rockset.Type\x12\x12\n\nnew_fields\x18\x05 \x01(\x08\"]\n\x03SLA\x12\x16\n\x0elatency_p50_ms\x18\x01 \x01(\x05\x12\x16\n\x0elatency_p95_ms\x18\x02 \x01(\x05\x12\x12\n\nlag_p50_ms\x18\x65 \x01(\x05\x12\x12\n\nlag_p95_ms\x18\x66 \x01(\x05\x42\x14\n\x10io.rockset.protoP\x01\x62\x06proto3')
  ,
  dependencies=[rockset_dot_value__pb2.DESCRIPTOR,rockset_dot_infostats__pb2.DESCRIPTOR,rockset_dot_collection__pb2.DESCRIPTOR,rockset_dot_query__pb2.DESCRIPTOR,])




_VIEW = _descriptor.Descriptor(
  name='View',
  full_name='rockset.View',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='rockset.View.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tenant', full_name='rockset.View.tenant', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='rockset.View.description', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sources', full_name='rockset.View.sources', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sla', full_name='rockset.View.sla', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='rockset.View.id', index=5,
      number=100, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='info', full_name='rockset.View.info', index=6,
      number=101, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=125,
  serialized_end=293,
)


_VIEWSOURCE = _descriptor.Descriptor(
  name='ViewSource',
  full_name='rockset.ViewSource',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='collection', full_name='rockset.ViewSource.collection', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='filter', full_name='rockset.ViewSource.filter', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fields', full_name='rockset.ViewSource.fields', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sk_field', full_name='rockset.ViewSource.sk_field', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='new_fields', full_name='rockset.ViewSource.new_fields', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=296,
  serialized_end=465,
)


_SLA = _descriptor.Descriptor(
  name='SLA',
  full_name='rockset.SLA',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='latency_p50_ms', full_name='rockset.SLA.latency_p50_ms', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='latency_p95_ms', full_name='rockset.SLA.latency_p95_ms', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lag_p50_ms', full_name='rockset.SLA.lag_p50_ms', index=2,
      number=101, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lag_p95_ms', full_name='rockset.SLA.lag_p95_ms', index=3,
      number=102, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=467,
  serialized_end=560,
)

_VIEW.fields_by_name['sources'].message_type = _VIEWSOURCE
_VIEW.fields_by_name['sla'].message_type = _SLA
_VIEW.fields_by_name['info'].message_type = rockset_dot_infostats__pb2._INFOSTATS
_VIEWSOURCE.fields_by_name['collection'].message_type = rockset_dot_collection__pb2._COLLECTION
_VIEWSOURCE.fields_by_name['filter'].message_type = rockset_dot_query__pb2._QUERY
_VIEWSOURCE.fields_by_name['fields'].message_type = rockset_dot_value__pb2._TYPE
_VIEWSOURCE.fields_by_name['sk_field'].message_type = rockset_dot_value__pb2._TYPE
DESCRIPTOR.message_types_by_name['View'] = _VIEW
DESCRIPTOR.message_types_by_name['ViewSource'] = _VIEWSOURCE
DESCRIPTOR.message_types_by_name['SLA'] = _SLA
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

View = _reflection.GeneratedProtocolMessageType('View', (_message.Message,), dict(
  DESCRIPTOR = _VIEW,
  __module__ = 'rockset.view_pb2'
  # @@protoc_insertion_point(class_scope:rockset.View)
  ))
_sym_db.RegisterMessage(View)

ViewSource = _reflection.GeneratedProtocolMessageType('ViewSource', (_message.Message,), dict(
  DESCRIPTOR = _VIEWSOURCE,
  __module__ = 'rockset.view_pb2'
  # @@protoc_insertion_point(class_scope:rockset.ViewSource)
  ))
_sym_db.RegisterMessage(ViewSource)

SLA = _reflection.GeneratedProtocolMessageType('SLA', (_message.Message,), dict(
  DESCRIPTOR = _SLA,
  __module__ = 'rockset.view_pb2'
  # @@protoc_insertion_point(class_scope:rockset.SLA)
  ))
_sym_db.RegisterMessage(SLA)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\020io.rockset.protoP\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
