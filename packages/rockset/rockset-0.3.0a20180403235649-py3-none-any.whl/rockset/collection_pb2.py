# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rockset/collection.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rockset import value_pb2 as rockset_dot_value__pb2
from rockset import infostats_pb2 as rockset_dot_infostats__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rockset/collection.proto',
  package='rockset',
  syntax='proto3',
  serialized_pb=_b('\n\x18rockset/collection.proto\x12\x07rockset\x1a\x13rockset/value.proto\x1a\x17rockset/infostats.proto\"\x8b\x02\n\nCollection\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06tenant\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12*\n\x07sources\x18\x04 \x03(\x0b\x32\x19.rockset.CollectionSource\x12\x1e\n\x07\x64octype\x18\x05 \x01(\x0b\x32\r.rockset.Type\x12\x1f\n\x08sk_field\x18\x06 \x01(\x0b\x32\r.rockset.Type\x12\n\n\x02id\x18\x64 \x01(\t\x12 \n\x04info\x18\x65 \x01(\x0b\x32\x12.rockset.Infostats\x12\x14\n\x0bkafka_topic\x18\xc8\x01 \x01(\t\x12\x19\n\x10topic_partitions\x18\xc9\x01 \x01(\x05\"\x90\x02\n\x10\x43ollectionSource\x12\x44\n\x08\x63\x61tegory\x18\x01 \x01(\x0e\x32\x32.rockset.CollectionSource.CollectionSourceCategory\x12\n\n\x02id\x18\x02 \x01(\t\x12\x30\n\x08self_fmt\x18\x03 \x01(\x0b\x32\x1c.rockset.SelfContainedFormatH\x00\x12&\n\x06\x61ws_s3\x18\x07 \x01(\x0b\x32\x14.rockset.SourceAWSS3H\x01\"0\n\x18\x43ollectionSourceCategory\x12\x08\n\x04NONE\x10\x00\x12\n\n\x06\x41WS_S3\x10\nB\x0e\n\x0c\x66ormat_unionB\x0e\n\x0csource_union\"x\n\x13SelfContainedFormat\x12\x33\n\x06\x66ormat\x18\x01 \x01(\x0e\x32#.rockset.SelfContainedFormat.Format\",\n\x06\x46ormat\x12\x08\n\x04NONE\x10\x00\x12\x08\n\x04JSON\x10\x01\x12\x0e\n\nJSON_LINES\x10\x02\";\n\x0e\x41WSCredentials\x12\x12\n\naccess_key\x18\x01 \x01(\t\x12\x15\n\rsecret_access\x18\x02 \x01(\t\"^\n\x0bSourceAWSS3\x12&\n\x05\x63reds\x18\x01 \x01(\x0b\x32\x17.rockset.AWSCredentials\x12\x0e\n\x06\x62ucket\x18\x02 \x01(\t\x12\x17\n\x0fobject_prefixes\x18\x03 \x03(\tB\x14\n\x10io.rockset.protoP\x01\x62\x06proto3')
  ,
  dependencies=[rockset_dot_value__pb2.DESCRIPTOR,rockset_dot_infostats__pb2.DESCRIPTOR,])



_COLLECTIONSOURCE_COLLECTIONSOURCECATEGORY = _descriptor.EnumDescriptor(
  name='CollectionSourceCategory',
  full_name='rockset.CollectionSource.CollectionSourceCategory',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AWS_S3', index=1, number=10,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=546,
  serialized_end=594,
)
_sym_db.RegisterEnumDescriptor(_COLLECTIONSOURCE_COLLECTIONSOURCECATEGORY)

_SELFCONTAINEDFORMAT_FORMAT = _descriptor.EnumDescriptor(
  name='Format',
  full_name='rockset.SelfContainedFormat.Format',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JSON', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JSON_LINES', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=704,
  serialized_end=748,
)
_sym_db.RegisterEnumDescriptor(_SELFCONTAINEDFORMAT_FORMAT)


_COLLECTION = _descriptor.Descriptor(
  name='Collection',
  full_name='rockset.Collection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='rockset.Collection.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tenant', full_name='rockset.Collection.tenant', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='rockset.Collection.description', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sources', full_name='rockset.Collection.sources', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='doctype', full_name='rockset.Collection.doctype', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sk_field', full_name='rockset.Collection.sk_field', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='rockset.Collection.id', index=6,
      number=100, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='info', full_name='rockset.Collection.info', index=7,
      number=101, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='kafka_topic', full_name='rockset.Collection.kafka_topic', index=8,
      number=200, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='topic_partitions', full_name='rockset.Collection.topic_partitions', index=9,
      number=201, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=84,
  serialized_end=351,
)


_COLLECTIONSOURCE = _descriptor.Descriptor(
  name='CollectionSource',
  full_name='rockset.CollectionSource',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='category', full_name='rockset.CollectionSource.category', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='rockset.CollectionSource.id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='self_fmt', full_name='rockset.CollectionSource.self_fmt', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='aws_s3', full_name='rockset.CollectionSource.aws_s3', index=3,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _COLLECTIONSOURCE_COLLECTIONSOURCECATEGORY,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='format_union', full_name='rockset.CollectionSource.format_union',
      index=0, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='source_union', full_name='rockset.CollectionSource.source_union',
      index=1, containing_type=None, fields=[]),
  ],
  serialized_start=354,
  serialized_end=626,
)


_SELFCONTAINEDFORMAT = _descriptor.Descriptor(
  name='SelfContainedFormat',
  full_name='rockset.SelfContainedFormat',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='format', full_name='rockset.SelfContainedFormat.format', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SELFCONTAINEDFORMAT_FORMAT,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=628,
  serialized_end=748,
)


_AWSCREDENTIALS = _descriptor.Descriptor(
  name='AWSCredentials',
  full_name='rockset.AWSCredentials',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='access_key', full_name='rockset.AWSCredentials.access_key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='secret_access', full_name='rockset.AWSCredentials.secret_access', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=750,
  serialized_end=809,
)


_SOURCEAWSS3 = _descriptor.Descriptor(
  name='SourceAWSS3',
  full_name='rockset.SourceAWSS3',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='creds', full_name='rockset.SourceAWSS3.creds', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bucket', full_name='rockset.SourceAWSS3.bucket', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='object_prefixes', full_name='rockset.SourceAWSS3.object_prefixes', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=811,
  serialized_end=905,
)

_COLLECTION.fields_by_name['sources'].message_type = _COLLECTIONSOURCE
_COLLECTION.fields_by_name['doctype'].message_type = rockset_dot_value__pb2._TYPE
_COLLECTION.fields_by_name['sk_field'].message_type = rockset_dot_value__pb2._TYPE
_COLLECTION.fields_by_name['info'].message_type = rockset_dot_infostats__pb2._INFOSTATS
_COLLECTIONSOURCE.fields_by_name['category'].enum_type = _COLLECTIONSOURCE_COLLECTIONSOURCECATEGORY
_COLLECTIONSOURCE.fields_by_name['self_fmt'].message_type = _SELFCONTAINEDFORMAT
_COLLECTIONSOURCE.fields_by_name['aws_s3'].message_type = _SOURCEAWSS3
_COLLECTIONSOURCE_COLLECTIONSOURCECATEGORY.containing_type = _COLLECTIONSOURCE
_COLLECTIONSOURCE.oneofs_by_name['format_union'].fields.append(
  _COLLECTIONSOURCE.fields_by_name['self_fmt'])
_COLLECTIONSOURCE.fields_by_name['self_fmt'].containing_oneof = _COLLECTIONSOURCE.oneofs_by_name['format_union']
_COLLECTIONSOURCE.oneofs_by_name['source_union'].fields.append(
  _COLLECTIONSOURCE.fields_by_name['aws_s3'])
_COLLECTIONSOURCE.fields_by_name['aws_s3'].containing_oneof = _COLLECTIONSOURCE.oneofs_by_name['source_union']
_SELFCONTAINEDFORMAT.fields_by_name['format'].enum_type = _SELFCONTAINEDFORMAT_FORMAT
_SELFCONTAINEDFORMAT_FORMAT.containing_type = _SELFCONTAINEDFORMAT
_SOURCEAWSS3.fields_by_name['creds'].message_type = _AWSCREDENTIALS
DESCRIPTOR.message_types_by_name['Collection'] = _COLLECTION
DESCRIPTOR.message_types_by_name['CollectionSource'] = _COLLECTIONSOURCE
DESCRIPTOR.message_types_by_name['SelfContainedFormat'] = _SELFCONTAINEDFORMAT
DESCRIPTOR.message_types_by_name['AWSCredentials'] = _AWSCREDENTIALS
DESCRIPTOR.message_types_by_name['SourceAWSS3'] = _SOURCEAWSS3
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Collection = _reflection.GeneratedProtocolMessageType('Collection', (_message.Message,), dict(
  DESCRIPTOR = _COLLECTION,
  __module__ = 'rockset.collection_pb2'
  # @@protoc_insertion_point(class_scope:rockset.Collection)
  ))
_sym_db.RegisterMessage(Collection)

CollectionSource = _reflection.GeneratedProtocolMessageType('CollectionSource', (_message.Message,), dict(
  DESCRIPTOR = _COLLECTIONSOURCE,
  __module__ = 'rockset.collection_pb2'
  # @@protoc_insertion_point(class_scope:rockset.CollectionSource)
  ))
_sym_db.RegisterMessage(CollectionSource)

SelfContainedFormat = _reflection.GeneratedProtocolMessageType('SelfContainedFormat', (_message.Message,), dict(
  DESCRIPTOR = _SELFCONTAINEDFORMAT,
  __module__ = 'rockset.collection_pb2'
  # @@protoc_insertion_point(class_scope:rockset.SelfContainedFormat)
  ))
_sym_db.RegisterMessage(SelfContainedFormat)

AWSCredentials = _reflection.GeneratedProtocolMessageType('AWSCredentials', (_message.Message,), dict(
  DESCRIPTOR = _AWSCREDENTIALS,
  __module__ = 'rockset.collection_pb2'
  # @@protoc_insertion_point(class_scope:rockset.AWSCredentials)
  ))
_sym_db.RegisterMessage(AWSCredentials)

SourceAWSS3 = _reflection.GeneratedProtocolMessageType('SourceAWSS3', (_message.Message,), dict(
  DESCRIPTOR = _SOURCEAWSS3,
  __module__ = 'rockset.collection_pb2'
  # @@protoc_insertion_point(class_scope:rockset.SourceAWSS3)
  ))
_sym_db.RegisterMessage(SourceAWSS3)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\020io.rockset.protoP\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
