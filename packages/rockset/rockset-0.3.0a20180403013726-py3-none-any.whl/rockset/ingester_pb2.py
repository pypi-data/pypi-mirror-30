# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rockset/ingester.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rockset import collection_pb2 as rockset_dot_collection__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rockset/ingester.proto',
  package='rockset',
  syntax='proto3',
  serialized_pb=_b('\n\x16rockset/ingester.proto\x12\x07rockset\x1a\x18rockset/collection.proto\"\xd5\x01\n\rIngestWrapper\x12+\n\rsource_bucket\x18\x01 \x01(\x0b\x32\x14.rockset.SourceAWSS3\x12.\n\x11target_collection\x18\x02 \x01(\x0b\x32\x13.rockset.Collection\x12\x10\n\x06prefix\x18\x04 \x01(\tH\x00\x12\'\n\x04keys\x18\x05 \x01(\x0b\x32\x17.rockset.DownloadS3KeysH\x00\x12\x1c\n\x12\x63ontinuation_token\x18\x06 \x01(\tH\x00\x42\x0e\n\x0cingest_union\"%\n\x0e\x44ownloadS3Keys\x12\x13\n\x0bobject_keys\x18\x03 \x03(\tB\x14\n\x10io.rockset.protoP\x01\x62\x06proto3')
  ,
  dependencies=[rockset_dot_collection__pb2.DESCRIPTOR,])




_INGESTWRAPPER = _descriptor.Descriptor(
  name='IngestWrapper',
  full_name='rockset.IngestWrapper',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='source_bucket', full_name='rockset.IngestWrapper.source_bucket', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='target_collection', full_name='rockset.IngestWrapper.target_collection', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='prefix', full_name='rockset.IngestWrapper.prefix', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='keys', full_name='rockset.IngestWrapper.keys', index=3,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='continuation_token', full_name='rockset.IngestWrapper.continuation_token', index=4,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='ingest_union', full_name='rockset.IngestWrapper.ingest_union',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=62,
  serialized_end=275,
)


_DOWNLOADS3KEYS = _descriptor.Descriptor(
  name='DownloadS3Keys',
  full_name='rockset.DownloadS3Keys',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='object_keys', full_name='rockset.DownloadS3Keys.object_keys', index=0,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=277,
  serialized_end=314,
)

_INGESTWRAPPER.fields_by_name['source_bucket'].message_type = rockset_dot_collection__pb2._SOURCEAWSS3
_INGESTWRAPPER.fields_by_name['target_collection'].message_type = rockset_dot_collection__pb2._COLLECTION
_INGESTWRAPPER.fields_by_name['keys'].message_type = _DOWNLOADS3KEYS
_INGESTWRAPPER.oneofs_by_name['ingest_union'].fields.append(
  _INGESTWRAPPER.fields_by_name['prefix'])
_INGESTWRAPPER.fields_by_name['prefix'].containing_oneof = _INGESTWRAPPER.oneofs_by_name['ingest_union']
_INGESTWRAPPER.oneofs_by_name['ingest_union'].fields.append(
  _INGESTWRAPPER.fields_by_name['keys'])
_INGESTWRAPPER.fields_by_name['keys'].containing_oneof = _INGESTWRAPPER.oneofs_by_name['ingest_union']
_INGESTWRAPPER.oneofs_by_name['ingest_union'].fields.append(
  _INGESTWRAPPER.fields_by_name['continuation_token'])
_INGESTWRAPPER.fields_by_name['continuation_token'].containing_oneof = _INGESTWRAPPER.oneofs_by_name['ingest_union']
DESCRIPTOR.message_types_by_name['IngestWrapper'] = _INGESTWRAPPER
DESCRIPTOR.message_types_by_name['DownloadS3Keys'] = _DOWNLOADS3KEYS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

IngestWrapper = _reflection.GeneratedProtocolMessageType('IngestWrapper', (_message.Message,), dict(
  DESCRIPTOR = _INGESTWRAPPER,
  __module__ = 'rockset.ingester_pb2'
  # @@protoc_insertion_point(class_scope:rockset.IngestWrapper)
  ))
_sym_db.RegisterMessage(IngestWrapper)

DownloadS3Keys = _reflection.GeneratedProtocolMessageType('DownloadS3Keys', (_message.Message,), dict(
  DESCRIPTOR = _DOWNLOADS3KEYS,
  __module__ = 'rockset.ingester_pb2'
  # @@protoc_insertion_point(class_scope:rockset.DownloadS3Keys)
  ))
_sym_db.RegisterMessage(DownloadS3Keys)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\020io.rockset.protoP\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
