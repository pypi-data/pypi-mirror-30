# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rockset/file.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rockset import proto_extensions_pb2 as rockset_dot_proto__extensions__pb2
from rockset import collection_pb2 as rockset_dot_collection__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rockset/file.proto',
  package='rockset',
  syntax='proto3',
  serialized_pb=_b('\n\x12rockset/file.proto\x12\x07rockset\x1a\x1erockset/proto_extensions.proto\x1a\x18rockset/collection.proto\"\xe0\x01\n\x04\x46ile\x12\x0c\n\x02id\x18\x01 \x01(\tH\x00\x12\x12\n\x08id_field\x18\x02 \x01(\tH\x00\x12\x12\n\x08sort_key\x18\x03 \x01(\tH\x01\x12\x18\n\x0esort_key_field\x18\x04 \x01(\tH\x01\x12$\n\x04type\x18\x05 \x01(\x0e\x32\x16.rockset.File.FileType\x12\x0c\n\x04\x62ody\x18\x06 \x01(\x0c\"6\n\x08\x46ileType\x12\x08\n\x04NONE\x10\x00\x12 \n\x04JSON\x10\x01\x1a\x16\x82\x90\xbc\xfd\x02\x10\x61pplication/jsonB\n\n\x08id_oneofB\x10\n\x0esort_key_oneof\"P\n\x08\x46ileList\x12\'\n\ncollection\x18\x01 \x01(\x0b\x32\x13.rockset.Collection\x12\x1b\n\x04\x66ile\x18\x02 \x03(\x0b\x32\r.rockset.FileB\x14\n\x10io.rockset.protoP\x01\x62\x06proto3')
  ,
  dependencies=[rockset_dot_proto__extensions__pb2.DESCRIPTOR,rockset_dot_collection__pb2.DESCRIPTOR,])



_FILE_FILETYPE = _descriptor.EnumDescriptor(
  name='FileType',
  full_name='rockset.File.FileType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JSON', index=1, number=1,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\202\220\274\375\002\020application/json')),
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=230,
  serialized_end=284,
)
_sym_db.RegisterEnumDescriptor(_FILE_FILETYPE)


_FILE = _descriptor.Descriptor(
  name='File',
  full_name='rockset.File',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='rockset.File.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id_field', full_name='rockset.File.id_field', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sort_key', full_name='rockset.File.sort_key', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sort_key_field', full_name='rockset.File.sort_key_field', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='rockset.File.type', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='body', full_name='rockset.File.body', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _FILE_FILETYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='id_oneof', full_name='rockset.File.id_oneof',
      index=0, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='sort_key_oneof', full_name='rockset.File.sort_key_oneof',
      index=1, containing_type=None, fields=[]),
  ],
  serialized_start=90,
  serialized_end=314,
)


_FILELIST = _descriptor.Descriptor(
  name='FileList',
  full_name='rockset.FileList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='collection', full_name='rockset.FileList.collection', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='file', full_name='rockset.FileList.file', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=316,
  serialized_end=396,
)

_FILE.fields_by_name['type'].enum_type = _FILE_FILETYPE
_FILE_FILETYPE.containing_type = _FILE
_FILE.oneofs_by_name['id_oneof'].fields.append(
  _FILE.fields_by_name['id'])
_FILE.fields_by_name['id'].containing_oneof = _FILE.oneofs_by_name['id_oneof']
_FILE.oneofs_by_name['id_oneof'].fields.append(
  _FILE.fields_by_name['id_field'])
_FILE.fields_by_name['id_field'].containing_oneof = _FILE.oneofs_by_name['id_oneof']
_FILE.oneofs_by_name['sort_key_oneof'].fields.append(
  _FILE.fields_by_name['sort_key'])
_FILE.fields_by_name['sort_key'].containing_oneof = _FILE.oneofs_by_name['sort_key_oneof']
_FILE.oneofs_by_name['sort_key_oneof'].fields.append(
  _FILE.fields_by_name['sort_key_field'])
_FILE.fields_by_name['sort_key_field'].containing_oneof = _FILE.oneofs_by_name['sort_key_oneof']
_FILELIST.fields_by_name['collection'].message_type = rockset_dot_collection__pb2._COLLECTION
_FILELIST.fields_by_name['file'].message_type = _FILE
DESCRIPTOR.message_types_by_name['File'] = _FILE
DESCRIPTOR.message_types_by_name['FileList'] = _FILELIST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

File = _reflection.GeneratedProtocolMessageType('File', (_message.Message,), dict(
  DESCRIPTOR = _FILE,
  __module__ = 'rockset.file_pb2'
  # @@protoc_insertion_point(class_scope:rockset.File)
  ))
_sym_db.RegisterMessage(File)

FileList = _reflection.GeneratedProtocolMessageType('FileList', (_message.Message,), dict(
  DESCRIPTOR = _FILELIST,
  __module__ = 'rockset.file_pb2'
  # @@protoc_insertion_point(class_scope:rockset.FileList)
  ))
_sym_db.RegisterMessage(FileList)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\020io.rockset.protoP\001'))
_FILE_FILETYPE.values_by_name["JSON"].has_options = True
_FILE_FILETYPE.values_by_name["JSON"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\202\220\274\375\002\020application/json'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
