if(!Element.prototype.matches){Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector}(function(window,document,undefined){"use strict";var pluginName="djangoUploader",defaults={url:"",before:null,success:null,failure:null,submit:null,csrfCookieName:"csrftoken"};const DONE=4;function getCookie(name){var cookieValue=null,i=0,cookies,cookie;if(document.cookie&&document.cookie!==""){cookies=document.cookie.split(";");for(i=0;i<cookies.length;i++){cookie=cookies[i].trim();if(cookie.substring(0,name.length+1)===name+"="){cookieValue=decodeURIComponent(cookie.substring(name.length+1));break}}}return cookieValue}function closest(elt,selector){if(elt.matches(selector)){return elt}var parent=elt.parentElement;if(parent!==null){return closest(parent,selector)}return undefined}function insertAfter(elt_to_insert,elt_to_insert_it_after){var parent=elt_to_insert_it_after.parentElement;parent.insertBefore(elt_to_insert,elt_to_insert_it_after);parent.insertBefore(elt_to_insert_it_after,elt_to_insert)}function DjangoUploader(element,options){this.element=element;this.options=Object.assign({},defaults,options);this._defaults=defaults;this._name=pluginName;this.init()}DjangoUploader.prototype={init:function(){this.processing=false;this.options.url=this.element.getAttribute("data-upload-url");this.form=closest(this.element,"form");var hidden_selector="input[type=hidden][name=_"+this.element.getAttribute("name")+"]";this.hidden=this.form.querySelectorAll(hidden_selector)[0];if(this.enabled()){this.element.addEventListener("change",this.change.bind(this));this.form.addEventListener("submit",this.submit.bind(this));this.progress=document.createElement("span");this.progress.setAttribute("class","progress-label");insertAfter(this.progress,this.element)}},change:function(event){var formData=new FormData,file;if(this.element.files.length===0){return}file=this.element.files[0];if(this.options.before){if(!this.options.before.apply(this,[file])){return}}formData.append("upload",file);this.abort();this.start_upload(formData)},onProgress:function(evt){if(evt.lengthComputable){var percentLoaded=Math.round(evt.loaded/evt.total*100);this.progress.textContent=percentLoaded+"%"}},onReadyStateChange:function(){const xhr=this.xhr;if(xhr.readyState===DONE){const response=JSON.parse(xhr.response);if(xhr.status>=200&&xhr.status<300){if(response.is_valid&&response.stored){this.hidden.value=response.stored}else{this.hidden.value=""}if(this.options.success){this.options.success.apply(this,[response])}}else if(xhr.status>=400&&xhr.status<600){this.hidden.value="";if(this.options.failure){this.options.failure.apply(this,[response])}}this.processing=false;this.xhr=undefined;this.progress.textContent=""}},start_upload:function(formData){const xhr=new XMLHttpRequest;this.xhr=xhr;xhr.onreadystatechange=this.onReadyStateChange.bind(this);xhr.upload.addEventListener("progress",this.onProgress.bind(this));this.progress.textContent="Uploading...";xhr.open("POST",this.options.url,true);xhr.setRequestHeader("X-CSRFToken",getCookie(this.options.csrfCookieName));xhr.send(formData)},submit:function(event){if(this.options.submit){this.options.submit.apply(this,[event])}else{this.abort()}if(this.hidden.value){this.element.disabled=true}},abort:function(){if(this.processing){this.xhr.abort();this.processing=false;this.xhr=undefined}},enabled:function(){var xhr2=false,fileApi=false,xhr=new XMLHttpRequest;if(typeof xhr.upload!=="undefined"){xhr2=true}if(window.FormData){fileApi=true}return xhr2&&fileApi}};function init_sticky_uploads(){var i,inputs=document.querySelectorAll("input[type=file][data-upload-url]");for(i=0;i<inputs.length;i++){inputs[i].djangoUploader=new DjangoUploader(inputs[i])}}if(document.readyState==="loading"){document.addEventListener("DOMContentLoaded",init_sticky_uploads)}else{init_sticky_uploads()}})(window,document);