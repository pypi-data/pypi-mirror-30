:kbd:`<C-J>`	(And: (Not: Condition), Condition)	Enter, accept input
:kbd:`<C-D>`	(And: Condition, (Or: ViInsertMode, EmacsInsertMode))	Delete character before the cursor
:kbd:`<C-J>`	(And: Condition, (Or: ViInsertMode, EmacsInsertMode))	Newline (in case of multiline input
:kbd:`<Escape> -`	(And: EmacsMode, (Not: HasArg))	
:kbd:`<C-G>`	(And: EmacsMode, (Not: HasSelection))	Control + G: Cancel completion menu and validation state
:kbd:`<C-Q>`	(And: EmacsMode, (Not: HasSelection))	Add the next character typed to the line verbatim
:kbd:`<Escape> <`	(And: EmacsMode, (Not: HasSelection))	Move to the first line in the history
:kbd:`<Escape> >`	(And: EmacsMode, (Not: HasSelection))	Move to the end of the input history, i
:kbd:`-`	(And: EmacsMode, Condition)	When '-' is typed again, after exactly '-' has been given as an argument, ignore this
:kbd:`<C-Delete>`	(And: EmacsMode, EmacsInsertMode)	Kill from point to the end of the current word, or if between words, to the end of the next word
:kbd:`<C-Underscore>`	(And: EmacsMode, EmacsInsertMode)	Incremental undo
:kbd:`<C-X> <C-U>`	(And: EmacsMode, EmacsInsertMode)	Incremental undo
:kbd:`<C-X> r y`	(And: EmacsMode, EmacsInsertMode)	Paste before cursor
:kbd:`<C-Y>`	(And: EmacsMode, EmacsInsertMode)	Paste before cursor
:kbd:`<Escape> #`	(And: EmacsMode, EmacsInsertMode)	Without numeric argument, comment all lines
:kbd:`<Escape> *`	(And: EmacsMode, EmacsInsertMode)	`meta-*`: Insert all possible completions of the preceding text
:kbd:`<Escape> .`	(And: EmacsMode, EmacsInsertMode)	Like `yank_nth_arg`, but if no argument has been given, yank the last word of each line
:kbd:`<Escape> /`	(And: EmacsMode, EmacsInsertMode)	M-/: Complete
:kbd:`<Escape> <Backspace>`	(And: EmacsMode, EmacsInsertMode)	Kills the word before point, using "not a letter nor a digit" as a word boundary
:kbd:`<Escape> <C-H>`	(And: EmacsMode, EmacsInsertMode)	Kills the word before point, using "not a letter nor a digit" as a word boundary
:kbd:`<Escape> <C-Y>`	(And: EmacsMode, EmacsInsertMode)	Insert the first argument of the previous command
:kbd:`<Escape> \\`	(And: EmacsMode, EmacsInsertMode)	Delete all spaces and tabs around point
:kbd:`<Escape> _`	(And: EmacsMode, EmacsInsertMode)	Like `yank_nth_arg`, but if no argument has been given, yank the last word of each line
:kbd:`<Escape> c`	(And: EmacsMode, EmacsInsertMode)	Capitalize the current (or following) word
:kbd:`<Escape> d`	(And: EmacsMode, EmacsInsertMode)	Kill from point to the end of the current word, or if between words, to the end of the next word
:kbd:`<Escape> l`	(And: EmacsMode, EmacsInsertMode)	Lowercase the current (or following) word
:kbd:`<Escape> t`	(And: EmacsMode, EmacsInsertMode)	Swap the last two words before the cursor
:kbd:`<Escape> u`	(And: EmacsMode, EmacsInsertMode)	Uppercase the current (or following) word
:kbd:`<Escape> y`	(And: EmacsMode, EmacsInsertMode)	Rotate the kill ring, and yank the new top
:kbd:`<Escape> <C-J>`	(And: EmacsMode, EmacsInsertMode, Condition)	Accept the line regardless of where the cursor is
:kbd:`<C-C>`	(And: EmacsMode, HasFocus)	Abort an incremental search and restore the original line
:kbd:`<C-G>`	(And: EmacsMode, HasFocus)	Abort an incremental search and restore the original line
:kbd:`<C-J>`	(And: EmacsMode, HasFocus)	When enter pressed in isearch, quit isearch mode
:kbd:`<C-C> <`	(And: EmacsMode, HasSelection)	Unindent selected text
:kbd:`<C-C> >`	(And: EmacsMode, HasSelection)	Indent selected text
:kbd:`<C-G>`	(And: EmacsMode, HasSelection)	Cancel selection
:kbd:`<C-W>`	(And: EmacsMode, HasSelection)	Cut selected text
:kbd:`<C-X> r k`	(And: EmacsMode, HasSelection)	Cut selected text
:kbd:`<Escape> w`	(And: EmacsMode, HasSelection)	Copy selected text
:kbd:`<C-R>`	(And: ViMode, (Not: HasFocus))	Vi-style backward search
:kbd:`<C-S>`	(And: ViMode, (Not: HasFocus))	Vi-style forward search
:kbd:`<C-K>`	(And: ViMode, (Or: ViInsertMode, ViReplaceMode))	Go into digraph mode
:kbd:`z +`	(And: ViMode, (Or: ViNavigationMode, ViSelectionMode))	Scrolls the window to makes the current line the first line in the visible region
:kbd:`z -`	(And: ViMode, (Or: ViNavigationMode, ViSelectionMode))	Scrolls the window to makes the current line the last line in the visible region
:kbd:`z <C-J>`	(And: ViMode, (Or: ViNavigationMode, ViSelectionMode))	Scrolls the window to makes the current line the first line in the visible region
:kbd:`z b`	(And: ViMode, (Or: ViNavigationMode, ViSelectionMode))	Scrolls the window to makes the current line the last line in the visible region
:kbd:`z t`	(And: ViMode, (Or: ViNavigationMode, ViSelectionMode))	Scrolls the window to makes the current line the first line in the visible region
:kbd:`z z`	(And: ViMode, (Or: ViNavigationMode, ViSelectionMode))	Center Window vertically around cursor
:kbd:`/`	(And: ViMode, (Or: ViNavigationMode, ViSelectionMode), (Not: Condition))	Vi-style forward search
:kbd:`?`	(And: ViMode, (Or: ViNavigationMode, ViSelectionMode), (Not: Condition))	Vi-style backward search
:kbd:`/`	(And: ViMode, (Or: ViNavigationMode, ViSelectionMode), Condition)	Vi-style backward search
:kbd:`?`	(And: ViMode, (Or: ViNavigationMode, ViSelectionMode), Condition)	Vi-style forward search
:kbd:`0`	(And: ViMode, (Or: ViNavigationMode, ViSelectionMode, ViWaitingForTextObjectMode), HasArg)	Zero when an argument was already give
:kbd:`I`	(And: ViMode, Condition, (Not: IsReadOnly))	Insert in block selection mode
:kbd:`G`	(And: ViMode, HasArg)	If an argument is given, move to this line in the history
:kbd:`<C-J>`	(And: ViMode, HasFocus)	Apply the search
:kbd:`<Any>`	(And: ViMode, ViDigraphMode, Condition)	Insert digraph
:kbd:`<C-E>`	(And: ViMode, ViInsertMode)	Cancel completion
:kbd:`<C-P>`	(And: ViMode, ViInsertMode)	Control-P: To previous completion
:kbd:`<C-V>`	(And: ViMode, ViInsertMode)	Add the next character typed to the line verbatim
:kbd:`<C-X> <C-F>`	(And: ViMode, ViInsertMode)	Complete file names
:kbd:`<C-X> <C-L>`	(And: ViMode, ViInsertMode)	Pressing the ControlX - ControlL sequence in Vi mode does line completion based on the other lines in the document and the history
:kbd:`<C-Y>`	(And: ViMode, ViInsertMode)	Accept current completion
:kbd:`<Any>`	(And: ViMode, ViInsertMultipleMode)	Insert data at multiple cursor positions at once
:kbd:`<Backspace>`	(And: ViMode, ViInsertMultipleMode)	Backspace, using multiple cursors
:kbd:`<Delete>`	(And: ViMode, ViInsertMultipleMode)	Delete, using multiple cursors
:kbd:`" <Any> P`	(And: ViMode, ViNavigationMode)	Paste (before) from named register
:kbd:`" <Any> p`	(And: ViMode, ViNavigationMode)	Paste from named register
:kbd:`#`	(And: ViMode, ViNavigationMode)	Go to previous occurence of this word
:kbd:`*`	(And: ViMode, ViNavigationMode)	Go to next occurence of this word
:kbd:`+`	(And: ViMode, ViNavigationMode)	Move to first non whitespace of next line
:kbd:`-`	(And: ViMode, ViNavigationMode)	Move to first non whitespace of previous line
:kbd:`< <`	(And: ViMode, ViNavigationMode)	Unindent lines
:kbd:`<Backspace>`	(And: ViMode, ViNavigationMode)	In navigation-mode, move cursor
:kbd:`<C-H>`	(And: ViMode, ViNavigationMode)	In navigation-mode, move cursor
:kbd:`<C-J>`	(And: ViMode, ViNavigationMode)	In navigation mode, pressing enter will always return the input
:kbd:`<C-N>`	(And: ViMode, ViNavigationMode)	Arrow down and Control-N in navigation mode
:kbd:`<C-P>`	(And: ViMode, ViNavigationMode)	Arrow up and ControlP in navigation mode go up
:kbd:`<C-V>`	(And: ViMode, ViNavigationMode)	Enter block selection mode
:kbd:`<Down>`	(And: ViMode, ViNavigationMode)	Arrow down and Control-N in navigation mode
:kbd:`<Insert>`	(And: ViMode, ViNavigationMode)	Presing the Insert key
:kbd:`<Up>`	(And: ViMode, ViNavigationMode)	Arrow up and ControlP in navigation mode go up
:kbd:`> >`	(And: ViMode, ViNavigationMode)	Indent lines
:kbd:`N`	(And: ViMode, ViNavigationMode)	Search previous in navigation mode
:kbd:`P`	(And: ViMode, ViNavigationMode)	Paste before
:kbd:`R`	(And: ViMode, ViNavigationMode)	Go to 'replace'-mode
:kbd:`V`	(And: ViMode, ViNavigationMode)	Start lines selection
:kbd:`Y`	(And: ViMode, ViNavigationMode)	Yank the whole line
:kbd:`d d`	(And: ViMode, ViNavigationMode)	Delete line
:kbd:`j`	(And: ViMode, ViNavigationMode)	Go down, but if we enter a new history entry, go to the start of the line
:kbd:`k`	(And: ViMode, ViNavigationMode)	Go up, but if we enter a new history entry, move to the start of the line
:kbd:`n`	(And: ViMode, ViNavigationMode)	Search next in navigation mode
:kbd:`p`	(And: ViMode, ViNavigationMode)	Paste after
:kbd:`r <Any>`	(And: ViMode, ViNavigationMode)	Replace single character under cursor
:kbd:`v`	(And: ViMode, ViNavigationMode)	Enter character selection mode
:kbd:`x`	(And: ViMode, ViNavigationMode)	Delete character
:kbd:`y y`	(And: ViMode, ViNavigationMode)	Yank the whole line
:kbd:`~`	(And: ViMode, ViNavigationMode)	Reverse case of current character and move cursor forward
:kbd:`C`	(And: ViMode, ViNavigationMode, (Not: IsReadOnly))	# Change to end of line
:kbd:`J`	(And: ViMode, ViNavigationMode, (Not: IsReadOnly))	Join lines
:kbd:`O`	(And: ViMode, ViNavigationMode, (Not: IsReadOnly))	Open line above and enter insertion mode
:kbd:`S`	(And: ViMode, ViNavigationMode, (Not: IsReadOnly))	Change current line
:kbd:`c c`	(And: ViMode, ViNavigationMode, (Not: IsReadOnly))	Change current line
:kbd:`g J`	(And: ViMode, ViNavigationMode, (Not: IsReadOnly))	Join lines without space
:kbd:`g U U`	(And: ViMode, ViNavigationMode, (Not: IsReadOnly))	Uppercase current line
:kbd:`g u u`	(And: ViMode, ViNavigationMode, (Not: IsReadOnly))	Lowercase current line
:kbd:`g ~ ~`	(And: ViMode, ViNavigationMode, (Not: IsReadOnly))	Swap case of the current line
:kbd:`o`	(And: ViMode, ViNavigationMode, (Not: IsReadOnly))	Open line below and enter insertion mode
:kbd:`s`	(And: ViMode, ViNavigationMode, (Not: IsReadOnly))	Substitute with new text (Delete character(s) and go to insert mode
:kbd:`<Any>`	(And: ViMode, ViReplaceMode)	Insert data at cursor position
:kbd:`<C-V>`	(And: ViMode, ViSelectionMode)	Exit block selection mode, or go from non block selection mode to block selection mode
:kbd:`V`	(And: ViMode, ViSelectionMode)	Exit line selection mode, or go from non line selection mode to line selection mode
:kbd:`a W`	(And: ViMode, ViSelectionMode)	Switch from visual linewise mode to visual characterwise mode
:kbd:`a w`	(And: ViMode, ViSelectionMode)	Switch from visual linewise mode to visual characterwise mode
:kbd:`j`	(And: ViMode, ViSelectionMode)	Arrow down in selection mode
:kbd:`k`	(And: ViMode, ViSelectionMode)	Arrow up in selection mode
:kbd:`v`	(And: ViMode, ViSelectionMode)	Exit character selection mode, or go from non-character-selection mode to character selection mode
:kbd:`x`	(And: ViMode, ViSelectionMode)	Cut selection
:kbd:`J`	(And: ViMode, ViSelectionMode, (Not: IsReadOnly))	Join selected lines
:kbd:`g J`	(And: ViMode, ViSelectionMode, (Not: IsReadOnly))	Join selected lines without space
:kbd:`<Any>`	(Or: ViInsertMode, EmacsInsertMode)	Insert yourself
:kbd:`<BackTab>`	(Or: ViInsertMode, EmacsInsertMode)	Move backward through the list of possible completions
:kbd:`<Backspace>`	(Or: ViInsertMode, EmacsInsertMode)	Delete the character behind the cursor
:kbd:`<C-H>`	(Or: ViInsertMode, EmacsInsertMode)	Delete the character behind the cursor
:kbd:`<C-I>`	(Or: ViInsertMode, EmacsInsertMode)	Generate completions, or go to the next completion
:kbd:`<C-K>`	(Or: ViInsertMode, EmacsInsertMode)	Kill the text from the cursor to the end of the line
:kbd:`<C-T>`	(Or: ViInsertMode, EmacsInsertMode)	Emulate Emacs transpose-char behavior: at the beginning of the buffer, do nothing
:kbd:`<C-U>`	(Or: ViInsertMode, EmacsInsertMode)	Kill backward from the cursor to the beginning of the current line
:kbd:`<C-W>`	(Or: ViInsertMode, EmacsInsertMode)	Kill the word behind point, using whitespace as a word boundary
:kbd:`<Delete>`	(Or: ViInsertMode, EmacsInsertMode)	Delete character before the cursor
:kbd:`<ShiftDelete>`	(Or: ViInsertMode, EmacsInsertMode)	Delete character before the cursor
