CHANGES
=======

* add deps for pep8
* temporary fix
* fix unittest
* remove “,” from tail of each scripts entry
* add setup relevant files
* fix documents
* fix documents again
* modify documents
* fix documents
* add doc env
* remove comments
* fix flake8
* fix test totally
* fix log\_common\_test
* clear all flake8 problems
* flake8 check
* move env settings inside of unittest scope
* flake8 fix
* fix flake8 except py3 compatibility
* adapt to flake8
* fix H404/405
* flake8
* passed flake8 check
* fix python3 incompatible parts
* pep8
* pep8
* pep8
* pep8
* pep8
* py35nize
* pep8
* pep8
* py35nize
* pep8
* pep8
* pep8
* pep8 done
* adapt to pep8
* add result for unittest
* fix log uploader test
* fix log uploader test
* add comment
* fix db\_stats for timestamp=None
* add swift as required packages for slogging
* add swift as required packages for slogging
* commit for initial setup
* 1.2.1 release
* Update tox.ini for swift after Havana
* Fix parsing request path with slash delimiters
* filter non-v1 protocols on access log parsing
* updated authors and changelog
* a little more clear on the speed test
* pass extra args to nosetests
* I don't know what that test was even doing
* test\_container\_stat\_get\_metadata tests something now
* set container policy
* removed the part where it relies on the db schema
* fixed some time zne plumbing
* defined DummyApplication response.app\_iter
* updated how to fetch metdata on container
* added storage policy index to account\_db.put\_container calls
* Output usage data in your own timezone
* Usage info in JSON format
* a few fixes to tests -- a lot more to be done
* changed sample account
* Output usage data in your own timezone
* Usage info in JSON format
* Adapt to Swift 1.13.1
* Adding missing import
* fix unit tests
* ignore proxy logs with any swift.source
* Minor README update, require python-stdeb to build the debian package
* added try/accept in access log delivery
* Changed the dict to a set, thus removing the need for the sentinal value. Also included the speed difference test, but it's in a seperate folder and not part of the normal test-run (for expediancy's sake)
* Changed the dict to a set, thus removing the need for the sentinal value. Also included the speed difference test, but it's in a seperate folder and not part of the normal test-run (for expediancy's sake)
* vastly improvee the speed of the access\_processor's main process method by returning dict's instead of lists from IPTools. This turns a very nasty O(n)\*3 into O(1)\*3 .. much nicer. All tests pass
* dummy out values altogether
* making the data line more python length friendly
* fix for '-' in datafiles causing explosions, mostly due to the fact that IpTools tries to check if there is a range configured and '-' isn't any ip/cidr
* updated AUTHORS to reflect recent updates
* updated to use Application instead of BaseApplication
* raise not return.. duh.. stupid lack of coffee
* fixing the tests, so in the absence of iptools, no explosions. Also exporting the variable CIDR\_support incase anywhere else needs to know about iptools or not
* enable fallback to a non-CIDR version if iptools is not installed
* some small pep8 compliance changes
* duh.. well.. that was stupid
* make sure tox.ini doesn't go over 80chars
* useless files go away please
* Some pep8 formatting and tox changes
* Tox-ifying the project so that it runs similiar to other swift projects
* Enabling the use of CIDR notation in the access config logs. This will apply to lb\_private\_ips, service\_ips and service\_log\_sources
* updated AUTHORS file with Scott Simpson
* releasing 1.1.8
* fixed imports
* log\_common memcache passthrough to internal\_proxy
* removed MemcacheStub in InternalProxy to allow memcache usage based on config
* removed etag check. that doesn't work
* added content\_type config for uploaded logs
* added original filename to uploaded log
* updated 1.1.7 changelog
* version bump to 1.1.7
* fixing test to work without swift.conf
* fixed tests
* fixed config parsing for log-stats-collector
* version bump to 1.1.6
* updated changelog for 1.1.6
* added stdeb.cfg for packaging and updated README
* access log delivery now uses the common utilities in log\_common
* silly conf read fix
* fixed tests
* split log common tests out
* explicit queue join\_thread calls
* updated tests
* moved FileBuffer to its own file
* added common functionality from tools that use log\_common
* changed to bare exception
* refactored child worker error handling to fix hangs
* put unit test back
* add changes for swift.source
* updated changelog
* version number bump
* removed cancel\_join\_thread call
* added multiprocessing queue management
* Added logging and exception catching
* bumped version for release
* added test for filtering IPs
* fixed typo
* updated sample access delivery logs
* added "hidden\_ips" to config. The IPs will be masked in delivered logs
* changed error catch to Exception
* added check for IOError
* added test for error checking on log uploader
* added error checks to log uploader
* updated example config file to reflect separation from the swift codebase
* updated docs to reflect packaging change
* bumped version for continued dev work
* updated version
* removed lock\_file since it's now included in swift.common.utils
* fixed sleep references
* bumped version to 1.1.2
* fixed error in checking for metadata key
* test that empty config variable works for proxy server conf location
* internal proxy now allows empty proxy server conf location
* updated the way log common finds the proxy config file
* fixed issue #10 to cast metadata key to lower before comparing it
* updated change log and version string
* fixed float/int error
* only generate a keylist when necessary, not every time
* made account stats log processing more robust and added tests
* access log delivery feature
* now deep-copies headers when making a copy of a request object
* fixes #2 adding comments to get\_data
* fixes #2 Catching sqlite exceptions from get\_data

1.0
---

* unit tests fixed
* updated unit tests
* updated docs to work with sphinx
* Updates to finalize the separation from swift
* fixed bin file reference to setup.py
* added bin files to setup.py
* updated setup.py
* updated slogging/\_\_init\_\_.py to have the version
* fixed import and some pep8 errors
* updated .unittests
* initial move of docs from swift project
* initial code copy
* initial import
