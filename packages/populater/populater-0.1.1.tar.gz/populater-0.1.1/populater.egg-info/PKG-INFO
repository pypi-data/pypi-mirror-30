Metadata-Version: 1.1
Name: populater
Version: 0.1.1
Summary: Cross platform string syntax for reliably extracting object data
Home-page: https://github.com/webheroesinc/populater
Author: Matthew Brisebois
Author-email: matthew@webheroes.ca
License: Dual License; GPLv3 and Proprietary
Description: 
        Cross platform string syntax for reliably extracting object data
        
        ===============
         Usage examples
        ===============
        
        ::
        
              import Populater
            
              Person = {
                  "age": 17,
                  "name": {
                      "first": "Marty",
                      "last": "Mcfly",
                      "full": "Marty Mcfly"
                  }
              }
              ctx				=  Populater( Person )
            
              assert ctx('{{ age }}')			== '17'
              assert ctx('< age')			== 17
              assert ctx('= {{ age }}')			== 17
              assert ctx("< name.first")		== "Marty"
              assert ctx("= {{ age }} > 18")		is True
              assert ctx("{{ name.none }}")		== ""
              assert ctx("= {{ name.none }}")		is None
              assert ctx(":= {{ name.full }}")		== "= Marty Mcfly"
              assert ctx("= '= {{ name.full }}'")	== "= Marty Mcfly"
              assert ctx(":: {{ name.full }}")		== ": Marty Mcfly"
              assert ctx("= self['name']['full']")	== "Marty Mcfly"
        
            
Platform: UNKNOWN
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3.5
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
