Metadata-Version: 1.1
Name: publib
Version: 0.1.13
Summary: Produce publication-level quality images on top of Matplotlib
Home-page: https://github.com/erwanp/publib
Author: Erwan Pannier
Author-email: erwan.pannier@gmail.com
License: CeCILL-2.1
Description-Content-Type: UNKNOWN
Description: |PyPI version| |Tests| |Code coverage|
        
        Publib
        ======
        
        Description
        -----------
        
        Produce publication-level quality images on top of Matplotlib, with a
        simple call to a couple functions at the start and end of your script.
        
        `Project GitHub page <https://github.com/erwanp/publib>`__
        
        For similar librairies, see
        `seaborn <http://stanford.edu/~mwaskom/software/seaborn/>`__, which also
        add neat high-end API to Matplotlib function calls, and the Matplotlib
        default `style
        feature <http://matplotlib.org/users/style_sheets.html>`__
        
        Install
        -------
        
        ::
        
            pip install publib
        
        Use
        ---
        
        At the beginning of the script, call:
        
        .. code:: python
        
            set_style()
        
        After each new axe is plotted, call:
        
        .. code:: python
        
            fix_style()
        
        Note that importing publib will already load the basic style.
        
        A few more styles (‘poster’, ‘article’, etc.) can be selected with the
        function ``set_style()``
        
        Because some matplotlib parameters cannot be changed before the lines
        are plotted, they are called through the function ``fix_style()`` which:
        
        -  changes the minor ticks
        
        -  remove the spines
        
        -  turn the legend draggable by default
        
        Examples
        --------
        
        .. code:: python
        
            import numpy as np
            import matplotlib.pyplot as plt
            import matplotlib as mpl
        
        A default Matplotlib plot:
        
        .. code:: python
        
            mpl.rcdefaults()
        
            x = np.linspace(0,5,250)
            y = np.cos(x)**2+np.random.normal(scale=0.5,size=len(x))
            yav = np.cos(x)**2
            plt.figure()
            ax = plt.subplot()
            ax.plot(x,y,'o',label='normal distribution')
            ax.plot(x,yav,zorder=-1,label='average')
            plt.xlabel(r'$x$')
            plt.ylabel(r'$\cos^2 x$+noise')
            plt.title('matplotlib')
            plt.legend(loc='upper left')
            plt.ylim((-1.5,3.5))
            plt.show()
            plt.savefig('mpl_default.png')
        
        .. figure:: https://github.com/erwanp/publib/blob/master/docs/mpl_default.png
           :alt: mpl_defaults.png
        
           mpl_defaults.png
        
        And now the same code with the two new lines calling the publib
        functions
        
        .. code:: python
        
            from publib import set_style, fix_style
            set_style('article')        # before the first plot
        
            x = np.linspace(0,5,250)
            y = np.cos(x)**2+np.random.normal(scale=0.5,size=len(x))
            yav = np.cos(x)**2
            plt.figure()
            ax = plt.subplot()
            ax.plot(x,y,'o',label='normal distribution')
            ax.plot(x,yav,zorder=-1,label='average')
            plt.xlabel(r'$x$')
            plt.ylabel(r'$\cos^2 x$+noise')
            plt.title('article')
            plt.legend(loc='upper left')
            plt.ylim((-1.5,3.5))
        
            fix_style('article')  # after the axe has been created
        
            plt.show()
            plt.savefig('publib_article.png')
        
        .. figure:: https://github.com/erwanp/publib/blob/master/docs/publib_article.png
           :alt: publib_article.png
        
           publib_article.png
        
        Run the \_test() routine in publib.py for more examples.
        
        Changes
        -------
        
        -  0.1.9: added talk and OriginPro style
        
        -  0.1.8 : fixed deprecation error messages
        
        -  0.1.7 : default fonts to Times in article
        
        -  0.1.6 : improve Readme
        
        -  0.1.5 : changed those buff_style functions in fix_style
        
        *Erwan Pannier - EM2C Laboratory, CentraleSupélec / CNRS UPR 288*
        
        .. |PyPI version| image:: https://badge.fury.io/py/publib.svg
           :target: https://badge.fury.io/py/publib
        .. |Tests| image:: https://img.shields.io/travis/erwanp/publib.svg
           :target: https://travis-ci.org/erwanp/publib
        .. |Code coverage| image:: https://codecov.io/gh/erwanp/publib/branch/master/graph/badge.svg
           :target: https://codecov.io/gh/erwanp/publib
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: CEA CNRS Inria Logiciel Libre License, version 2.1 (CeCILL-2.1)
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Text Processing
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Operating System :: OS Independent
