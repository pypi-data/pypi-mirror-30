import asyncio
from typing import Match

import aiotg
import daiquiri

from Cipher.conns.tg.config import TGConnectionConfig
from Cipher.conns.tg.models import TGChannel, TGUser, TGTarget
from Cipher.core import CipherCore
from Cipher.core.connection import Connection


class TGConnection(Connection):
    def __init__(self, core: CipherCore, conn_id: str, loop: asyncio.AbstractEventLoop) -> None: ...
    client: aiotg.Bot
    logger: daiquiri.KeywordArgumentAdapter
    self_user: TGUser

    async def _connect(self) -> None: ...
    async def _disconnect(self) -> None: ...
    async def _send_message(self, target_obj: TGTarget, message: str, source: str='') -> None: ...
    def get_channel(self, name: str) -> TGChannel: ...
    def get_user(self, name: str) -> TGUser: ...
    def get_message_maxlen(self, target: TGTarget) -> int: ...
    def get_message_maxlines(self, target: TGTarget) -> int: ...
    async def client_loop(self) -> None: ...
    async def on_message(self, chat: aiotg.Chat, match: Match) -> None: ...

    config: TGConnectionConfig
    c: TGConnectionConfig
