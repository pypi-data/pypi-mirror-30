from Cipher.conns.irc.connection import IRCConnection
from Cipher.conns.irc.models import IRCUser, IRCChannel
from Cipher.core.event import ConnectingEvent, ConnectedEvent, DisconnectingEvent, DisconnectedEvent, \
    UnexpectedDisconnectEvent, MessageChannelEvent, ChannelSendMessageEvent, AltMessageChannelEvent, JoinChannelEvent, \
    LeaveChannelEvent, MessageUserEvent, AltMessageUserEvent, ChannelEvent, UserChannelEvent, UserEvent, \
    SendMessageEvent, Event, UserSendMessageEvent


class IRCEvent(Event):
    def __init__(self, conn: IRCConnection) -> None: ...
    conn: IRCConnection

class IRCConnectingEvent(IRCEvent, ConnectingEvent): ...
class IRCConnectedEvent(IRCEvent, ConnectedEvent): ...
class IRCDisconnectingEvent(IRCEvent, DisconnectingEvent): ...
class IRCDisconnectedEvent(IRCEvent, DisconnectedEvent): ...

class IRCUnexpectedDisconnectEvent(IRCDisconnectedEvent, UnexpectedDisconnectEvent):
    def __init__(self, conn: IRCConnection, message: str='') -> None: ...
    message: str

class IRCChannelEvent(IRCEvent, ChannelEvent):
    def __init__(self, chan: IRCChannel, conn: IRCConnection) -> None: ...
    chan: IRCChannel

class IRCUserChannelEvent(IRCChannelEvent, UserChannelEvent):
    def __init__(self, chan: IRCChannel, user: IRCUser, conn: IRCConnection) -> None: ...
    user: IRCUser

class IRCMessageChannelEvent(IRCUserChannelEvent, MessageChannelEvent):
    def __init__(self, message: str, chan: IRCChannel, user: IRCUser, conn: IRCConnection) -> None: ...

class IRCAltMessageChannelEvent(IRCUserChannelEvent, AltMessageChannelEvent):
    def __init__(self, message: str, chan: IRCChannel, user: IRCUser, conn: IRCConnection) -> None: ...

class IRCActionChannelEvent(IRCAltMessageChannelEvent): ...
class IRCNoticeChannelEvent(IRCMessageChannelEvent): ...
class IRCJoinChannelEvent(IRCUserChannelEvent, JoinChannelEvent): ...
class IRCLeaveChannelEvent(IRCUserChannelEvent, LeaveChannelEvent): ...

class IRCPartChannelEvent(IRCLeaveChannelEvent):
    def __init__(self, message: str, chan: IRCChannel, user: IRCUser, conn: IRCConnection) -> None: ...
    message: str

class IRCUserEvent(IRCEvent, UserEvent):
    def __init__(self, user: IRCUser, conn: IRCConnection) -> None: ...
    user: IRCUser

class IRCMessageUserEvent(IRCUserEvent, MessageUserEvent):
    def __init__(self, message: str, user: IRCUser, conn: IRCConnection) -> None: ...

class IRCAltMessageUserEvent(IRCUserEvent, AltMessageUserEvent):
    def __init__(self, message: str, user: IRCUser, conn: IRCConnection) -> None: ...

class IRCActionUserEvent(IRCAltMessageUserEvent): ...
class IRCNoticeUserEvent(IRCMessageUserEvent): ...

class IRCSendMessageEvent(IRCEvent, SendMessageEvent):
    def __init__(self, message: str, conn: IRCConnection, source: str) -> None: ...
    message: str
    source: str

class IRCChannelSendMessageEvent(IRCSendMessageEvent, ChannelSendMessageEvent):
    def __init__(self, message: str, chan: IRCChannel, user: IRCUser, conn: IRCConnection, source: str) -> None: ...
    chan: IRCChannel
    user: IRCUser

class IRCUserSendMessageEvent(IRCSendMessageEvent, UserSendMessageEvent):
    def __init__(self, message: str, target_user: IRCUser, user: IRCUser, conn: IRCConnection, source: str) -> None: ...
    target_user: IRCUser
    user: IRCUser
