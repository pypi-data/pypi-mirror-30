import asyncio
from typing import Union, Dict, List

import daiquiri
import discord

from Cipher.conns.discord.config import DiscordBaseConnectionConfig, DiscordConnectionConfig
from Cipher.conns.discord.models import DiscordUser, DiscordChannel, DiscordTarget
from Cipher.core import CipherCore
from Cipher.core.connection import Connection


class DiscordBaseConnection(Connection):
    def __init__(self, core: CipherCore, conn_id: str, loop: asyncio.AbstractEventLoop) -> None: ...
    client: discord.Client
    servers: Dict[str, DiscordConnection]
    logger: daiquiri.KeywordArgumentAdapter
    self_user: DiscordUser

    def register_server(self, server: DiscordConnection) -> None: ...
    async def _connect(self) -> None: ...
    async def _disconnect(self) -> None: ...
    async def _send_message(self, target_obj: DiscordTarget, message: str, source: str = '') -> None: ...
    async def on_ready(self) -> None: ...
    async def on_message(self, message: discord.Message) -> None: ...
    def get_channel(self, name: str) -> DiscordChannel: ...
    def get_user(self, name: str) -> DiscordUser: ...
    def get_message_maxlen(self, target: DiscordTarget) -> int: ...
    def get_message_maxlines(self, target: DiscordTarget) -> int: ...

    config: DiscordBaseConnectionConfig
    c: DiscordBaseConnectionConfig

class DiscordConnection(Connection):
    def __init__(self, core: CipherCore, conn_id: str, loop: asyncio.AbstractEventLoop) -> None: ...
    base: DiscordBaseConnection
    server_id: int
    channels: List[DiscordChannel]
    self_user: DiscordUser
    _connected: bool

    async def _connect(self) -> None: ...
    async def _disconnect(self) -> None: ...
    async def _send_message(self, target_obj: Union[DiscordUser, DiscordChannel], message: str, source: str = '') -> None: ...
    def on_ready(self, self_user: DiscordUser): ...
    def get_channel(self, name: str) -> DiscordChannel: ...
    def get_user(self, name: str) -> DiscordUser: ...
    def get_message_maxlen(self, target: DiscordTarget) -> int: ...
    def get_message_maxlines(self, target: DiscordTarget) -> int: ...

    config: DiscordConnectionConfig
    c: DiscordConnectionConfig
    connected: bool
