# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: vaksana.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import intent_pb2 as intent__pb2
import ssl_pb2 as ssl__pb2
import stub_pb2 as stub__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='vaksana.proto',
  package='vaksana',
  syntax='proto3',
  serialized_pb=_b('\n\rvaksana.proto\x12\x07vaksana\x1a\x0cintent.proto\x1a\tssl.proto\x1a\nstub.proto\"\x06\n\x04Void\"\x18\n\x06\x43onfig\x12\x0e\n\x06logurl\x18\x01 \x01(\t\"#\n\x07\x45rrCode\x12\x0b\n\x03\x65rr\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\"\x16\n\x05Token\x12\r\n\x05token\x18\x01 \x01(\t\"%\n\x03Key\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x11\n\tsignature\x18\x02 \x01(\t\".\n\x0e\x43ontactDetails\x12\r\n\x05\x65mail\x18\x01 \x01(\t\x12\r\n\x05phone\x18\x02 \x01(\t\"c\n\nClientInfo\x12\x30\n\x0f\x63ontact_details\x18\x01 \x01(\x0b\x32\x17.vaksana.ContactDetails\x12\x0e\n\x06\x64omain\x18\x02 \x01(\t\x12\x13\n\x0b\x66orce_clean\x18\x03 \x01(\x08\"6\n\x06SToken\x12\r\n\x05token\x18\x01 \x01(\t\x12\x1d\n\x03\x65rr\x18\x02 \x01(\x0b\x32\x10.vaksana.ErrCode\"S\n\x04SKey\x12\x19\n\x03key\x18\x01 \x01(\x0b\x32\x0c.vaksana.Key\x12\x11\n\tencrypted\x18\x02 \x01(\x08\x12\x1d\n\x03\x65rr\x18\x03 \x01(\x0b\x32\x10.vaksana.ErrCode\"\\\n\x07\x43Intent\x12\x1d\n\x05token\x18\x01 \x01(\x0b\x32\x0e.vaksana.Token\x12\x1f\n\x06intent\x18\x02 \x01(\x0b\x32\x0f.vaksana.Intent\x12\x11\n\tencrypted\x18\x03 \x01(\x08\"\xa0\x01\n\tCProducer\x12\x1d\n\x05token\x18\x01 \x01(\x0b\x32\x0e.vaksana.Token\x12\x1f\n\x06intent\x18\x02 \x01(\x0b\x32\x0f.vaksana.Intent\x12\x1d\n\x05infra\x18\x03 \x01(\x0b\x32\x0e.vaksana.Infra\x12!\n\x07service\x18\x04 \x01(\x0b\x32\x10.vaksana.Service\x12\x11\n\tencrypted\x18\x05 \x01(\x08\"k\n\x0c\x43StubDetails\x12\x1d\n\x05token\x18\x01 \x01(\x0b\x32\x0e.vaksana.Token\x12)\n\x0bstubdetails\x18\x02 \x01(\x0b\x32\x14.vaksana.StubDetails\x12\x11\n\tencrypted\x18\x03 \x01(\x08\"h\n\x0b\x43\x44ockerHost\x12\x1d\n\x05token\x18\x01 \x01(\x0b\x32\x0e.vaksana.Token\x12\'\n\ndockerhost\x18\x02 \x01(\x0b\x32\x13.vaksana.DockerHost\x12\x11\n\tencrypted\x18\x03 \x01(\x08\"\\\n\x07\x43Volume\x12\x1d\n\x05token\x18\x01 \x01(\x0b\x32\x0e.vaksana.Token\x12\x1f\n\x06volume\x18\x02 \x01(\x0b\x32\x0f.vaksana.Volume\x12\x11\n\tencrypted\x18\x03 \x01(\x08\"\x86\x01\n\x04SUrl\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x12\n\nservice_id\x18\x02 \x01(\t\x12%\n\rservice_token\x18\x03 \x01(\x0b\x32\x0e.vaksana.Token\x12\x17\n\x0fservice_aes_key\x18\x04 \x01(\t\x12\x1d\n\x03\x65rr\x18\x05 \x01(\x0b\x32\x10.vaksana.ErrCode\"E\n\x04\x43Url\x12\x1d\n\x05token\x18\x01 \x01(\x0b\x32\x0e.vaksana.Token\x12\x0b\n\x03url\x18\x02 \x01(\t\x12\x11\n\tencrypted\x18\x03 \x01(\x08\"`\n\x08\x43SSLInfo\x12\x30\n\x0f\x63ontact_details\x18\x01 \x01(\x0b\x32\x17.vaksana.ContactDetails\x12\"\n\x08ssl_info\x18\x02 \x01(\x0b\x32\x10.vaksana.SSLInfo\"R\n\x0bSSSLKeyPair\x12$\n\x07keypair\x18\x01 \x01(\x0b\x32\x13.vaksana.SSLKeyPair\x12\x1d\n\x03\x65rr\x18\x02 \x01(\x0b\x32\x10.vaksana.ErrCode\"(\n\x06Server\x12\x10\n\x08hostname\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\"\x82\x01\n\x0b\x43redentials\x12%\n\rservice_token\x18\x01 \x01(\x0b\x32\x0e.vaksana.Token\x12\x17\n\x0fservice_aes_key\x18\x02 \x01(\t\x12\x12\n\nservice_id\x18\x03 \x01(\t\x12\x1f\n\x06server\x18\x04 \x01(\x0b\x32\x0f.vaksana.Server\"[\n\rCServiceStats\x12\x15\n\rservice_token\x18\x01 \x01(\t\x12\r\n\x05token\x18\x02 \x01(\t\x12$\n\x05stats\x18\x03 \x01(\x0b\x32\x15.vaksana.ServiceStats2\xd7\x06\n\x06Market\x12-\n\tGetConfig\x12\r.vaksana.Void\x1a\x0f.vaksana.Config\"\x00\x12\x38\n\x0cGetPublicKey\x12\x17.vaksana.ContactDetails\x1a\r.vaksana.SKey\"\x00\x12>\n\x12GenerateRSAKeyPair\x12\x17.vaksana.ContactDetails\x1a\r.vaksana.SKey\"\x00\x12;\n\x0fGetClientPubkey\x12\x17.vaksana.ContactDetails\x1a\r.vaksana.SKey\"\x00\x12:\n\x0eGenerateAESKey\x12\x17.vaksana.ContactDetails\x1a\r.vaksana.SKey\"\x00\x12<\n\x0fGenerateSSLPair\x12\x11.vaksana.CSSLInfo\x1a\x14.vaksana.SSSLKeyPair\"\x00\x12,\n\tKeepAlive\x12\x0e.vaksana.Token\x1a\r.vaksana.Void\"\x00\x12\x38\n\x0eRegisterDomain\x12\x13.vaksana.ClientInfo\x1a\x0f.vaksana.SToken\"\x00\x12\x34\n\x0c\x44\x65\x66ineIntent\x12\x10.vaksana.CIntent\x1a\x10.vaksana.ErrCode\"\x00\x12?\n\x15RegisterIntentHandler\x12\x12.vaksana.CProducer\x1a\x10.vaksana.ErrCode\"\x00\x12\x36\n\x0eRegisterVolume\x12\x10.vaksana.CVolume\x1a\x10.vaksana.ErrCode\"\x00\x12\x38\n\x0cRegisterHost\x12\x14.vaksana.CDockerHost\x1a\x10.vaksana.ErrCode\"\x00\x12\x34\n\nCreateStub\x12\x15.vaksana.CStubDetails\x1a\r.vaksana.SUrl\"\x00\x12\x37\n\tSaveStats\x12\x16.vaksana.CServiceStats\x1a\x10.vaksana.ErrCode\"\x00\x12-\n\x0b\x44\x65stroyStub\x12\r.vaksana.CUrl\x1a\r.vaksana.Void\"\x00\x42\x06\xa2\x02\x03VAKb\x06proto3')
  ,
  dependencies=[intent__pb2.DESCRIPTOR,ssl__pb2.DESCRIPTOR,stub__pb2.DESCRIPTOR,])




_VOID = _descriptor.Descriptor(
  name='Void',
  full_name='vaksana.Void',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=63,
  serialized_end=69,
)


_CONFIG = _descriptor.Descriptor(
  name='Config',
  full_name='vaksana.Config',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='logurl', full_name='vaksana.Config.logurl', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=71,
  serialized_end=95,
)


_ERRCODE = _descriptor.Descriptor(
  name='ErrCode',
  full_name='vaksana.ErrCode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='err', full_name='vaksana.ErrCode.err', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='msg', full_name='vaksana.ErrCode.msg', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=97,
  serialized_end=132,
)


_TOKEN = _descriptor.Descriptor(
  name='Token',
  full_name='vaksana.Token',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='vaksana.Token.token', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=134,
  serialized_end=156,
)


_KEY = _descriptor.Descriptor(
  name='Key',
  full_name='vaksana.Key',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='vaksana.Key.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='signature', full_name='vaksana.Key.signature', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=158,
  serialized_end=195,
)


_CONTACTDETAILS = _descriptor.Descriptor(
  name='ContactDetails',
  full_name='vaksana.ContactDetails',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='email', full_name='vaksana.ContactDetails.email', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='phone', full_name='vaksana.ContactDetails.phone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=197,
  serialized_end=243,
)


_CLIENTINFO = _descriptor.Descriptor(
  name='ClientInfo',
  full_name='vaksana.ClientInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='contact_details', full_name='vaksana.ClientInfo.contact_details', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='domain', full_name='vaksana.ClientInfo.domain', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='force_clean', full_name='vaksana.ClientInfo.force_clean', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=245,
  serialized_end=344,
)


_STOKEN = _descriptor.Descriptor(
  name='SToken',
  full_name='vaksana.SToken',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='vaksana.SToken.token', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='err', full_name='vaksana.SToken.err', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=346,
  serialized_end=400,
)


_SKEY = _descriptor.Descriptor(
  name='SKey',
  full_name='vaksana.SKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='vaksana.SKey.key', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='encrypted', full_name='vaksana.SKey.encrypted', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='err', full_name='vaksana.SKey.err', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=402,
  serialized_end=485,
)


_CINTENT = _descriptor.Descriptor(
  name='CIntent',
  full_name='vaksana.CIntent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='vaksana.CIntent.token', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='intent', full_name='vaksana.CIntent.intent', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='encrypted', full_name='vaksana.CIntent.encrypted', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=487,
  serialized_end=579,
)


_CPRODUCER = _descriptor.Descriptor(
  name='CProducer',
  full_name='vaksana.CProducer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='vaksana.CProducer.token', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='intent', full_name='vaksana.CProducer.intent', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='infra', full_name='vaksana.CProducer.infra', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='service', full_name='vaksana.CProducer.service', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='encrypted', full_name='vaksana.CProducer.encrypted', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=582,
  serialized_end=742,
)


_CSTUBDETAILS = _descriptor.Descriptor(
  name='CStubDetails',
  full_name='vaksana.CStubDetails',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='vaksana.CStubDetails.token', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stubdetails', full_name='vaksana.CStubDetails.stubdetails', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='encrypted', full_name='vaksana.CStubDetails.encrypted', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=744,
  serialized_end=851,
)


_CDOCKERHOST = _descriptor.Descriptor(
  name='CDockerHost',
  full_name='vaksana.CDockerHost',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='vaksana.CDockerHost.token', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dockerhost', full_name='vaksana.CDockerHost.dockerhost', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='encrypted', full_name='vaksana.CDockerHost.encrypted', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=853,
  serialized_end=957,
)


_CVOLUME = _descriptor.Descriptor(
  name='CVolume',
  full_name='vaksana.CVolume',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='vaksana.CVolume.token', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='volume', full_name='vaksana.CVolume.volume', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='encrypted', full_name='vaksana.CVolume.encrypted', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=959,
  serialized_end=1051,
)


_SURL = _descriptor.Descriptor(
  name='SUrl',
  full_name='vaksana.SUrl',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='url', full_name='vaksana.SUrl.url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='service_id', full_name='vaksana.SUrl.service_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='service_token', full_name='vaksana.SUrl.service_token', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='service_aes_key', full_name='vaksana.SUrl.service_aes_key', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='err', full_name='vaksana.SUrl.err', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1054,
  serialized_end=1188,
)


_CURL = _descriptor.Descriptor(
  name='CUrl',
  full_name='vaksana.CUrl',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='vaksana.CUrl.token', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='url', full_name='vaksana.CUrl.url', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='encrypted', full_name='vaksana.CUrl.encrypted', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1190,
  serialized_end=1259,
)


_CSSLINFO = _descriptor.Descriptor(
  name='CSSLInfo',
  full_name='vaksana.CSSLInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='contact_details', full_name='vaksana.CSSLInfo.contact_details', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ssl_info', full_name='vaksana.CSSLInfo.ssl_info', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1261,
  serialized_end=1357,
)


_SSSLKEYPAIR = _descriptor.Descriptor(
  name='SSSLKeyPair',
  full_name='vaksana.SSSLKeyPair',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='keypair', full_name='vaksana.SSSLKeyPair.keypair', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='err', full_name='vaksana.SSSLKeyPair.err', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1359,
  serialized_end=1441,
)


_SERVER = _descriptor.Descriptor(
  name='Server',
  full_name='vaksana.Server',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hostname', full_name='vaksana.Server.hostname', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='port', full_name='vaksana.Server.port', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1443,
  serialized_end=1483,
)


_CREDENTIALS = _descriptor.Descriptor(
  name='Credentials',
  full_name='vaksana.Credentials',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='service_token', full_name='vaksana.Credentials.service_token', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='service_aes_key', full_name='vaksana.Credentials.service_aes_key', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='service_id', full_name='vaksana.Credentials.service_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='server', full_name='vaksana.Credentials.server', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1486,
  serialized_end=1616,
)


_CSERVICESTATS = _descriptor.Descriptor(
  name='CServiceStats',
  full_name='vaksana.CServiceStats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='service_token', full_name='vaksana.CServiceStats.service_token', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='token', full_name='vaksana.CServiceStats.token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stats', full_name='vaksana.CServiceStats.stats', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1618,
  serialized_end=1709,
)

_CLIENTINFO.fields_by_name['contact_details'].message_type = _CONTACTDETAILS
_STOKEN.fields_by_name['err'].message_type = _ERRCODE
_SKEY.fields_by_name['key'].message_type = _KEY
_SKEY.fields_by_name['err'].message_type = _ERRCODE
_CINTENT.fields_by_name['token'].message_type = _TOKEN
_CINTENT.fields_by_name['intent'].message_type = intent__pb2._INTENT
_CPRODUCER.fields_by_name['token'].message_type = _TOKEN
_CPRODUCER.fields_by_name['intent'].message_type = intent__pb2._INTENT
_CPRODUCER.fields_by_name['infra'].message_type = intent__pb2._INFRA
_CPRODUCER.fields_by_name['service'].message_type = intent__pb2._SERVICE
_CSTUBDETAILS.fields_by_name['token'].message_type = _TOKEN
_CSTUBDETAILS.fields_by_name['stubdetails'].message_type = stub__pb2._STUBDETAILS
_CDOCKERHOST.fields_by_name['token'].message_type = _TOKEN
_CDOCKERHOST.fields_by_name['dockerhost'].message_type = stub__pb2._DOCKERHOST
_CVOLUME.fields_by_name['token'].message_type = _TOKEN
_CVOLUME.fields_by_name['volume'].message_type = stub__pb2._VOLUME
_SURL.fields_by_name['service_token'].message_type = _TOKEN
_SURL.fields_by_name['err'].message_type = _ERRCODE
_CURL.fields_by_name['token'].message_type = _TOKEN
_CSSLINFO.fields_by_name['contact_details'].message_type = _CONTACTDETAILS
_CSSLINFO.fields_by_name['ssl_info'].message_type = ssl__pb2._SSLINFO
_SSSLKEYPAIR.fields_by_name['keypair'].message_type = ssl__pb2._SSLKEYPAIR
_SSSLKEYPAIR.fields_by_name['err'].message_type = _ERRCODE
_CREDENTIALS.fields_by_name['service_token'].message_type = _TOKEN
_CREDENTIALS.fields_by_name['server'].message_type = _SERVER
_CSERVICESTATS.fields_by_name['stats'].message_type = intent__pb2._SERVICESTATS
DESCRIPTOR.message_types_by_name['Void'] = _VOID
DESCRIPTOR.message_types_by_name['Config'] = _CONFIG
DESCRIPTOR.message_types_by_name['ErrCode'] = _ERRCODE
DESCRIPTOR.message_types_by_name['Token'] = _TOKEN
DESCRIPTOR.message_types_by_name['Key'] = _KEY
DESCRIPTOR.message_types_by_name['ContactDetails'] = _CONTACTDETAILS
DESCRIPTOR.message_types_by_name['ClientInfo'] = _CLIENTINFO
DESCRIPTOR.message_types_by_name['SToken'] = _STOKEN
DESCRIPTOR.message_types_by_name['SKey'] = _SKEY
DESCRIPTOR.message_types_by_name['CIntent'] = _CINTENT
DESCRIPTOR.message_types_by_name['CProducer'] = _CPRODUCER
DESCRIPTOR.message_types_by_name['CStubDetails'] = _CSTUBDETAILS
DESCRIPTOR.message_types_by_name['CDockerHost'] = _CDOCKERHOST
DESCRIPTOR.message_types_by_name['CVolume'] = _CVOLUME
DESCRIPTOR.message_types_by_name['SUrl'] = _SURL
DESCRIPTOR.message_types_by_name['CUrl'] = _CURL
DESCRIPTOR.message_types_by_name['CSSLInfo'] = _CSSLINFO
DESCRIPTOR.message_types_by_name['SSSLKeyPair'] = _SSSLKEYPAIR
DESCRIPTOR.message_types_by_name['Server'] = _SERVER
DESCRIPTOR.message_types_by_name['Credentials'] = _CREDENTIALS
DESCRIPTOR.message_types_by_name['CServiceStats'] = _CSERVICESTATS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Void = _reflection.GeneratedProtocolMessageType('Void', (_message.Message,), dict(
  DESCRIPTOR = _VOID,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.Void)
  ))
_sym_db.RegisterMessage(Void)

Config = _reflection.GeneratedProtocolMessageType('Config', (_message.Message,), dict(
  DESCRIPTOR = _CONFIG,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.Config)
  ))
_sym_db.RegisterMessage(Config)

ErrCode = _reflection.GeneratedProtocolMessageType('ErrCode', (_message.Message,), dict(
  DESCRIPTOR = _ERRCODE,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.ErrCode)
  ))
_sym_db.RegisterMessage(ErrCode)

Token = _reflection.GeneratedProtocolMessageType('Token', (_message.Message,), dict(
  DESCRIPTOR = _TOKEN,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.Token)
  ))
_sym_db.RegisterMessage(Token)

Key = _reflection.GeneratedProtocolMessageType('Key', (_message.Message,), dict(
  DESCRIPTOR = _KEY,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.Key)
  ))
_sym_db.RegisterMessage(Key)

ContactDetails = _reflection.GeneratedProtocolMessageType('ContactDetails', (_message.Message,), dict(
  DESCRIPTOR = _CONTACTDETAILS,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.ContactDetails)
  ))
_sym_db.RegisterMessage(ContactDetails)

ClientInfo = _reflection.GeneratedProtocolMessageType('ClientInfo', (_message.Message,), dict(
  DESCRIPTOR = _CLIENTINFO,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.ClientInfo)
  ))
_sym_db.RegisterMessage(ClientInfo)

SToken = _reflection.GeneratedProtocolMessageType('SToken', (_message.Message,), dict(
  DESCRIPTOR = _STOKEN,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.SToken)
  ))
_sym_db.RegisterMessage(SToken)

SKey = _reflection.GeneratedProtocolMessageType('SKey', (_message.Message,), dict(
  DESCRIPTOR = _SKEY,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.SKey)
  ))
_sym_db.RegisterMessage(SKey)

CIntent = _reflection.GeneratedProtocolMessageType('CIntent', (_message.Message,), dict(
  DESCRIPTOR = _CINTENT,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.CIntent)
  ))
_sym_db.RegisterMessage(CIntent)

CProducer = _reflection.GeneratedProtocolMessageType('CProducer', (_message.Message,), dict(
  DESCRIPTOR = _CPRODUCER,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.CProducer)
  ))
_sym_db.RegisterMessage(CProducer)

CStubDetails = _reflection.GeneratedProtocolMessageType('CStubDetails', (_message.Message,), dict(
  DESCRIPTOR = _CSTUBDETAILS,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.CStubDetails)
  ))
_sym_db.RegisterMessage(CStubDetails)

CDockerHost = _reflection.GeneratedProtocolMessageType('CDockerHost', (_message.Message,), dict(
  DESCRIPTOR = _CDOCKERHOST,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.CDockerHost)
  ))
_sym_db.RegisterMessage(CDockerHost)

CVolume = _reflection.GeneratedProtocolMessageType('CVolume', (_message.Message,), dict(
  DESCRIPTOR = _CVOLUME,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.CVolume)
  ))
_sym_db.RegisterMessage(CVolume)

SUrl = _reflection.GeneratedProtocolMessageType('SUrl', (_message.Message,), dict(
  DESCRIPTOR = _SURL,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.SUrl)
  ))
_sym_db.RegisterMessage(SUrl)

CUrl = _reflection.GeneratedProtocolMessageType('CUrl', (_message.Message,), dict(
  DESCRIPTOR = _CURL,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.CUrl)
  ))
_sym_db.RegisterMessage(CUrl)

CSSLInfo = _reflection.GeneratedProtocolMessageType('CSSLInfo', (_message.Message,), dict(
  DESCRIPTOR = _CSSLINFO,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.CSSLInfo)
  ))
_sym_db.RegisterMessage(CSSLInfo)

SSSLKeyPair = _reflection.GeneratedProtocolMessageType('SSSLKeyPair', (_message.Message,), dict(
  DESCRIPTOR = _SSSLKEYPAIR,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.SSSLKeyPair)
  ))
_sym_db.RegisterMessage(SSSLKeyPair)

Server = _reflection.GeneratedProtocolMessageType('Server', (_message.Message,), dict(
  DESCRIPTOR = _SERVER,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.Server)
  ))
_sym_db.RegisterMessage(Server)

Credentials = _reflection.GeneratedProtocolMessageType('Credentials', (_message.Message,), dict(
  DESCRIPTOR = _CREDENTIALS,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.Credentials)
  ))
_sym_db.RegisterMessage(Credentials)

CServiceStats = _reflection.GeneratedProtocolMessageType('CServiceStats', (_message.Message,), dict(
  DESCRIPTOR = _CSERVICESTATS,
  __module__ = 'vaksana_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.CServiceStats)
  ))
_sym_db.RegisterMessage(CServiceStats)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\242\002\003VAK'))

_MARKET = _descriptor.ServiceDescriptor(
  name='Market',
  full_name='vaksana.Market',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=1712,
  serialized_end=2567,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetConfig',
    full_name='vaksana.Market.GetConfig',
    index=0,
    containing_service=None,
    input_type=_VOID,
    output_type=_CONFIG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetPublicKey',
    full_name='vaksana.Market.GetPublicKey',
    index=1,
    containing_service=None,
    input_type=_CONTACTDETAILS,
    output_type=_SKEY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GenerateRSAKeyPair',
    full_name='vaksana.Market.GenerateRSAKeyPair',
    index=2,
    containing_service=None,
    input_type=_CONTACTDETAILS,
    output_type=_SKEY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetClientPubkey',
    full_name='vaksana.Market.GetClientPubkey',
    index=3,
    containing_service=None,
    input_type=_CONTACTDETAILS,
    output_type=_SKEY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GenerateAESKey',
    full_name='vaksana.Market.GenerateAESKey',
    index=4,
    containing_service=None,
    input_type=_CONTACTDETAILS,
    output_type=_SKEY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GenerateSSLPair',
    full_name='vaksana.Market.GenerateSSLPair',
    index=5,
    containing_service=None,
    input_type=_CSSLINFO,
    output_type=_SSSLKEYPAIR,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='KeepAlive',
    full_name='vaksana.Market.KeepAlive',
    index=6,
    containing_service=None,
    input_type=_TOKEN,
    output_type=_VOID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RegisterDomain',
    full_name='vaksana.Market.RegisterDomain',
    index=7,
    containing_service=None,
    input_type=_CLIENTINFO,
    output_type=_STOKEN,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DefineIntent',
    full_name='vaksana.Market.DefineIntent',
    index=8,
    containing_service=None,
    input_type=_CINTENT,
    output_type=_ERRCODE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RegisterIntentHandler',
    full_name='vaksana.Market.RegisterIntentHandler',
    index=9,
    containing_service=None,
    input_type=_CPRODUCER,
    output_type=_ERRCODE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RegisterVolume',
    full_name='vaksana.Market.RegisterVolume',
    index=10,
    containing_service=None,
    input_type=_CVOLUME,
    output_type=_ERRCODE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RegisterHost',
    full_name='vaksana.Market.RegisterHost',
    index=11,
    containing_service=None,
    input_type=_CDOCKERHOST,
    output_type=_ERRCODE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CreateStub',
    full_name='vaksana.Market.CreateStub',
    index=12,
    containing_service=None,
    input_type=_CSTUBDETAILS,
    output_type=_SURL,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SaveStats',
    full_name='vaksana.Market.SaveStats',
    index=13,
    containing_service=None,
    input_type=_CSERVICESTATS,
    output_type=_ERRCODE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DestroyStub',
    full_name='vaksana.Market.DestroyStub',
    index=14,
    containing_service=None,
    input_type=_CURL,
    output_type=_VOID,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_MARKET)

DESCRIPTOR.services_by_name['Market'] = _MARKET

# @@protoc_insertion_point(module_scope)
