# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: intent.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='intent.proto',
  package='vaksana',
  syntax='proto3',
  serialized_pb=_b('\n\x0cintent.proto\x12\x07vaksana\"\x14\n\x04\x44\x61ta\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x19\n\tTestSuite\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x1b\n\x0bPerformance\x12\x0c\n\x04name\x18\x01 \x01(\t\"r\n\x05Proto\x12$\n\x05proto\x18\x01 \x01(\x0b\x32\x13.vaksana.Proto.FileH\x00\x12\r\n\x03url\x18\x02 \x01(\tH\x00\x1a)\n\x04\x46ile\x12\x10\n\x08\x66ilename\x18\x01 \x01(\t\x12\x0f\n\x07\x63ontent\x18\x02 \x01(\tB\t\n\x07\x63ontent\"r\n\x05Infra\x12(\n\x08location\x18\x01 \x01(\x0e\x32\x16.vaksana.Infra.Execute\"?\n\x07\x45xecute\x12\x0c\n\x08\x41NYWHERE\x10\x00\x12\x07\n\x03\x41WS\x10\x01\x12\t\n\x05\x41ZURE\x10\x02\x12\x07\n\x03GCP\x10\x03\x12\t\n\x05LOCAL\x10\x04\"F\n\x06Intent\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07version\x18\x02 \x01(\t\x12\x1d\n\x05proto\x18\x03 \x01(\x0b\x32\x0e.vaksana.Proto\"\xa7\x01\n\x07Service\x12/\n\tcontainer\x18\x01 \x01(\x0b\x32\x1a.vaksana.Service.ContainerH\x00\x12-\n\x08\x66unction\x18\x02 \x01(\x0b\x32\x19.vaksana.Service.FunctionH\x00\x1a\x18\n\tContainer\x12\x0b\n\x03url\x18\x01 \x01(\t\x1a\x17\n\x08\x46unction\x12\x0b\n\x03url\x18\x01 \x01(\tB\t\n\x07\x64\x65tailsB\x06\xa2\x02\x03VAKb\x06proto3')
)



_INFRA_EXECUTE = _descriptor.EnumDescriptor(
  name='Execute',
  full_name='vaksana.Infra.Execute',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ANYWHERE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AWS', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AZURE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GCP', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOCAL', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=270,
  serialized_end=333,
)
_sym_db.RegisterEnumDescriptor(_INFRA_EXECUTE)


_DATA = _descriptor.Descriptor(
  name='Data',
  full_name='vaksana.Data',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='vaksana.Data.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25,
  serialized_end=45,
)


_TESTSUITE = _descriptor.Descriptor(
  name='TestSuite',
  full_name='vaksana.TestSuite',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='vaksana.TestSuite.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=47,
  serialized_end=72,
)


_PERFORMANCE = _descriptor.Descriptor(
  name='Performance',
  full_name='vaksana.Performance',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='vaksana.Performance.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=74,
  serialized_end=101,
)


_PROTO_FILE = _descriptor.Descriptor(
  name='File',
  full_name='vaksana.Proto.File',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filename', full_name='vaksana.Proto.File.filename', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='content', full_name='vaksana.Proto.File.content', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=165,
  serialized_end=206,
)

_PROTO = _descriptor.Descriptor(
  name='Proto',
  full_name='vaksana.Proto',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='proto', full_name='vaksana.Proto.proto', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='url', full_name='vaksana.Proto.url', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_PROTO_FILE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='content', full_name='vaksana.Proto.content',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=103,
  serialized_end=217,
)


_INFRA = _descriptor.Descriptor(
  name='Infra',
  full_name='vaksana.Infra',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='location', full_name='vaksana.Infra.location', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _INFRA_EXECUTE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=219,
  serialized_end=333,
)


_INTENT = _descriptor.Descriptor(
  name='Intent',
  full_name='vaksana.Intent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='vaksana.Intent.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='version', full_name='vaksana.Intent.version', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='proto', full_name='vaksana.Intent.proto', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=335,
  serialized_end=405,
)


_SERVICE_CONTAINER = _descriptor.Descriptor(
  name='Container',
  full_name='vaksana.Service.Container',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='url', full_name='vaksana.Service.Container.url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=515,
  serialized_end=539,
)

_SERVICE_FUNCTION = _descriptor.Descriptor(
  name='Function',
  full_name='vaksana.Service.Function',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='url', full_name='vaksana.Service.Function.url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=541,
  serialized_end=564,
)

_SERVICE = _descriptor.Descriptor(
  name='Service',
  full_name='vaksana.Service',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='container', full_name='vaksana.Service.container', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='function', full_name='vaksana.Service.function', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_SERVICE_CONTAINER, _SERVICE_FUNCTION, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='details', full_name='vaksana.Service.details',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=408,
  serialized_end=575,
)

_PROTO_FILE.containing_type = _PROTO
_PROTO.fields_by_name['proto'].message_type = _PROTO_FILE
_PROTO.oneofs_by_name['content'].fields.append(
  _PROTO.fields_by_name['proto'])
_PROTO.fields_by_name['proto'].containing_oneof = _PROTO.oneofs_by_name['content']
_PROTO.oneofs_by_name['content'].fields.append(
  _PROTO.fields_by_name['url'])
_PROTO.fields_by_name['url'].containing_oneof = _PROTO.oneofs_by_name['content']
_INFRA.fields_by_name['location'].enum_type = _INFRA_EXECUTE
_INFRA_EXECUTE.containing_type = _INFRA
_INTENT.fields_by_name['proto'].message_type = _PROTO
_SERVICE_CONTAINER.containing_type = _SERVICE
_SERVICE_FUNCTION.containing_type = _SERVICE
_SERVICE.fields_by_name['container'].message_type = _SERVICE_CONTAINER
_SERVICE.fields_by_name['function'].message_type = _SERVICE_FUNCTION
_SERVICE.oneofs_by_name['details'].fields.append(
  _SERVICE.fields_by_name['container'])
_SERVICE.fields_by_name['container'].containing_oneof = _SERVICE.oneofs_by_name['details']
_SERVICE.oneofs_by_name['details'].fields.append(
  _SERVICE.fields_by_name['function'])
_SERVICE.fields_by_name['function'].containing_oneof = _SERVICE.oneofs_by_name['details']
DESCRIPTOR.message_types_by_name['Data'] = _DATA
DESCRIPTOR.message_types_by_name['TestSuite'] = _TESTSUITE
DESCRIPTOR.message_types_by_name['Performance'] = _PERFORMANCE
DESCRIPTOR.message_types_by_name['Proto'] = _PROTO
DESCRIPTOR.message_types_by_name['Infra'] = _INFRA
DESCRIPTOR.message_types_by_name['Intent'] = _INTENT
DESCRIPTOR.message_types_by_name['Service'] = _SERVICE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Data = _reflection.GeneratedProtocolMessageType('Data', (_message.Message,), dict(
  DESCRIPTOR = _DATA,
  __module__ = 'intent_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.Data)
  ))
_sym_db.RegisterMessage(Data)

TestSuite = _reflection.GeneratedProtocolMessageType('TestSuite', (_message.Message,), dict(
  DESCRIPTOR = _TESTSUITE,
  __module__ = 'intent_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.TestSuite)
  ))
_sym_db.RegisterMessage(TestSuite)

Performance = _reflection.GeneratedProtocolMessageType('Performance', (_message.Message,), dict(
  DESCRIPTOR = _PERFORMANCE,
  __module__ = 'intent_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.Performance)
  ))
_sym_db.RegisterMessage(Performance)

Proto = _reflection.GeneratedProtocolMessageType('Proto', (_message.Message,), dict(

  File = _reflection.GeneratedProtocolMessageType('File', (_message.Message,), dict(
    DESCRIPTOR = _PROTO_FILE,
    __module__ = 'intent_pb2'
    # @@protoc_insertion_point(class_scope:vaksana.Proto.File)
    ))
  ,
  DESCRIPTOR = _PROTO,
  __module__ = 'intent_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.Proto)
  ))
_sym_db.RegisterMessage(Proto)
_sym_db.RegisterMessage(Proto.File)

Infra = _reflection.GeneratedProtocolMessageType('Infra', (_message.Message,), dict(
  DESCRIPTOR = _INFRA,
  __module__ = 'intent_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.Infra)
  ))
_sym_db.RegisterMessage(Infra)

Intent = _reflection.GeneratedProtocolMessageType('Intent', (_message.Message,), dict(
  DESCRIPTOR = _INTENT,
  __module__ = 'intent_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.Intent)
  ))
_sym_db.RegisterMessage(Intent)

Service = _reflection.GeneratedProtocolMessageType('Service', (_message.Message,), dict(

  Container = _reflection.GeneratedProtocolMessageType('Container', (_message.Message,), dict(
    DESCRIPTOR = _SERVICE_CONTAINER,
    __module__ = 'intent_pb2'
    # @@protoc_insertion_point(class_scope:vaksana.Service.Container)
    ))
  ,

  Function = _reflection.GeneratedProtocolMessageType('Function', (_message.Message,), dict(
    DESCRIPTOR = _SERVICE_FUNCTION,
    __module__ = 'intent_pb2'
    # @@protoc_insertion_point(class_scope:vaksana.Service.Function)
    ))
  ,
  DESCRIPTOR = _SERVICE,
  __module__ = 'intent_pb2'
  # @@protoc_insertion_point(class_scope:vaksana.Service)
  ))
_sym_db.RegisterMessage(Service)
_sym_db.RegisterMessage(Service.Container)
_sym_db.RegisterMessage(Service.Function)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\242\002\003VAK'))
# @@protoc_insertion_point(module_scope)
