Metadata-Version: 1.1
Name: guillotina
Version: 2.5.2
Summary: asyncio REST API Resource database
Home-page: https://github.com/plone/guillotina
Author: Ramon & Asko & Nathan
Author-email: ramon@plone.org
License: BSD
Description: Introduction
        ============
        
        .. image:: https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat
           :target: http://guillotina.readthedocs.io/en/latest/
        
        .. image:: https://travis-ci.org/plone/guillotina.svg?branch=master
           :target: https://travis-ci.org/plone/guillotina
        
        .. image:: https://coveralls.io/repos/github/plone/guillotina/badge.svg?branch=master
           :target: https://coveralls.io/github/plone/guillotina?branch=master
           :alt: Test Coverage
        
        .. image:: https://img.shields.io/pypi/pyversions/guillotina.svg
           :target: https://pypi.python.org/pypi/guillotina/
           :alt: Python Versions
        
        .. image:: https://img.shields.io/pypi/v/guillotina.svg
           :target: https://pypi.python.org/pypi/guillotina
        
        .. image:: https://img.shields.io/pypi/l/guillotina.svg
           :target: https://pypi.python.org/pypi/guillotina/
           :alt: License
        
        .. image:: https://badges.gitter.im/plone/guillotina.png
           :target: https://gitter.im/plone/guillotina
           :alt: Chat
        
        Please `read the detailed docs <http://guillotina.readthedocs.io/en/latest/>`_
        
        
        This is the working project of the next generation Guillotina server based on asyncio.
        
        
        Dependencies
        ------------
        
        * python >= 3.6
        * postgresql >= 9.6
        
        
        Quickstart
        ----------
        
        We use pip::
        
          pip install guillotina
        
        
        Run postgresql
        --------------
        
        If you don't have a postgresql server to play with, you can run one easily
        with docker.
        
        Download and start the docker container by running::
        
          make run-postgres
        
        
        
        Run the server
        --------------
        
        To run the server::
        
            g
        
        
        Then...
        
            curl http://localhost:8080
        
        
        Or, better yet, use postman to start playing with API.
        
        
        Getting started with development
        --------------------------------
        
        Using pip::
        
          ./bin/pip install requirements.txt
          ./bin/pip install -e .[test]
        
        
        Run tests
        ---------
        
        We're using pytest::
        
            ./bin/pytest guillotina
        
        and for test coverage::
        
            ./bin/pytest --cov=guillotina guillotina/
        
        With file watcher...
        
            ./bin/ptw guillotina --runner=./bin/py.test
        
        
        To run tests with cockroach db::
        
           USE_COCKROACH=true ./bin/pytest guillotina
        
        Default
        -------
        
        Default root access can be done with AUTHORIZATION header : Basic root:root
        
        
        Docker
        ------
        
        You can also run Guillotina with Docker!
        
        
        First, run postgresql::
        
            docker run --rm \
                -e POSTGRES_DB=guillotina \
                -e POSTGRES_USER=guillotina \
                -p 127.0.0.1:5432:5432 \
                --name postgres \
                postgres:9.6
        
        Then, run guillotina::
        
            docker run --rm -it \
                --link=postgres -p 127.0.0.1:8080:8080 \
                guillotina/guillotina:latest \
                g -c '{"databases": [{"db": {"storage": "postgresql", "dsn": "postgres://guillotina:@postgres/guillotina"}}], "root_user": {"password": "root"}}'
        
        
        This assumes you have a config.yaml in your current working directory
        
        
        Chat
        ----
        
        Join us to talk about Guillotina at https://gitter.im/plone/guillotina
        
        
        2.5.2 (2018-03-19)
        ------------------
        
        - Fix `@duplicate` endpoint when no destination is provided
          [vangheem]
        
        
        2.5.1 (2018-03-19)
        ------------------
        
        - Be able to not automatically serialize behaviors
          [vangheem]
        
        
        2.5.0 (2018-03-19)
        ------------------
        
        - normalize file manager api so we can have more simple integrations with s3/gcloud
          [vangheem]
        
        
        2.4.7 (2018-03-17)
        ------------------
        
        - Be able to safely PATCH with same payload from GET
          [vangheem]
        
        
        2.4.6 (2018-03-17)
        ------------------
        
        - Updated docs
          [vangheem]
        
        
        2.4.5 (2018-03-15)
        ------------------
        
        - `BucketListValue.iter_buckets` returns annotation object
          [vangheem]
        
        
        2.4.4 (2018-03-15)
        ------------------
        
        - fix `BucketListValue.iter_buckets` to correctly load uncached annotations
          from database
          [vangheem]
        
        
        2.4.3 (2018-03-14)
        ------------------
        
        - New `PatchField`
          [vangheem]
        
        - New `BucketListField`
          [vangheem]
        
        
        2.4.2 (2018-03-14)
        ------------------
        
        - Be able to provide `index_name` for index directive to rename index name
          to use for catalog data
          [vangheem]
        
        
        2.4.1 (2018-03-14)
        ------------------
        
        - Provide utils.clear_conn_statement_cache
          [vangheem]
        
        
        2.4.0 (2018-03-10)
        ------------------
        
        - Rename `guillotina.async` to `guillotina.async_util` to fix Python 3.7 compatibility
          [vangheem]
        
        
        2.3.35 (2018-03-09)
        -------------------
        
        - More error handling
          [vangheem]
        
        
        2.3.34 (2018-03-07)
        -------------------
        
        - Be able to provide custom responses for unhandled exceptions
          [vangheem]
        
        
        2.3.33 (2018-03-03)
        -------------------
        
        - Bump
        
        
        2.3.32 (2018-03-03)
        -------------------
        
        - Disable statement cache on guillotina
          [vangheem]
        
        
        2.3.31 (2018-03-02)
        -------------------
        
        - Normalize status codes to not use generate 400 all the time
          [vangheem]
        
        
        2.3.30 (2018-03-01)
        -------------------
        
        - Store record of previous file data on upload
          [vangheem]
        
        
        2.3.29 (2018-03-01)
        -------------------
        
        - bump
        
        
        2.3.28 (2018-03-01)
        -------------------
        
        - Send file upload finished event
          [vangheem]
        
        - Use lazy_apply when calling commit hooks
          [vangheem]
        
        ...
        
        You are seeing a truncated changelog.
        
        You can read the `changelog file <https://github.com/plone/guillotina/blob/master/CHANGELOG.rst>`_
        for a complete list.
        
        
Keywords: asyncio,REST,Framework,transactional
Platform: UNKNOWN
Classifier: License :: OSI Approved :: BSD License
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Software Development :: Libraries :: Python Modules
