
# bdd_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'exprleftCOLONleftEQUIVleftIMPLIESleftMINUSleftXORleftORleftANDleftEQUALSrightNOTrightUMINUSLPAREN RPAREN COMMA NOT AND OR XOR IMPLIES EQUIV EQUALS MINUS DIV AT COLON FORALL EXISTS RENAME NAME NUMBER FALSE ITE TRUEexpr : TRUE\n                | FALSE\n        expr : AT numbernumber : NUMBERnumber : MINUS NUMBER %prec UMINUSexpr : nameexpr : NOT exprexpr : expr AND expr\n                | expr OR expr\n                | expr XOR expr\n                | expr IMPLIES expr\n                | expr EQUIV expr\n                | expr EQUALS expr\n                | expr MINUS expr\n        expr : ITE LPAREN expr COMMA expr COMMA expr RPARENexpr : EXISTS names COLON expr\n                | FORALL names COLON expr\n        expr : RENAME subs COLON exprsubs : subs COMMA subsubs : subsub : name DIV namenames : names COMMA namenames : namename : NAMEexpr : LPAREN expr RPAREN'
    
_lr_action_items = {'MINUS':([1,2,7,8,10,12,20,22,23,24,38,39,40,41,42,43,44,45,46,47,49,50,52,55,57,58,],[-2,-24,-6,-1,21,26,-7,-3,-4,26,26,-5,-25,26,-14,-13,-8,-9,-10,26,26,26,26,26,26,-15,]),'FALSE':([0,9,11,19,25,26,27,28,29,30,31,33,34,36,54,56,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'EQUALS':([1,2,7,8,12,20,22,23,24,38,39,40,41,42,43,44,45,46,47,49,50,52,55,57,58,],[-2,-24,-6,-1,27,-7,-3,-4,27,27,-5,-25,27,27,-13,27,27,27,27,27,27,27,27,27,-15,]),'NAME':([0,3,4,5,9,11,19,25,26,27,28,29,30,31,32,33,34,35,36,37,54,56,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'EXISTS':([0,9,11,19,25,26,27,28,29,30,31,33,34,36,54,56,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'AND':([1,2,7,8,12,20,22,23,24,38,39,40,41,42,43,44,45,46,47,49,50,52,55,57,58,],[-2,-24,-6,-1,28,-7,-3,-4,28,28,-5,-25,28,28,-13,-8,28,28,28,28,28,28,28,28,-15,]),'FORALL':([0,9,11,19,25,26,27,28,29,30,31,33,34,36,54,56,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'DIV':([2,16,],[-24,35,]),'COMMA':([1,2,7,8,13,14,15,17,18,20,22,23,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,58,],[-2,-24,-6,-1,-23,32,32,-20,37,-7,-3,-4,54,-5,-25,-12,-14,-13,-8,-9,-10,-11,-22,-16,-17,-21,-18,-19,56,-15,]),'ITE':([0,9,11,19,25,26,27,28,29,30,31,33,34,36,54,56,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'COLON':([2,13,14,15,17,18,48,51,53,],[-24,-23,33,34,-20,36,-22,-21,-19,]),'EQUIV':([1,2,7,8,12,20,22,23,24,38,39,40,41,42,43,44,45,46,47,49,50,52,55,57,58,],[-2,-24,-6,-1,25,-7,-3,-4,25,25,-5,-25,-12,-14,-13,-8,-9,-10,-11,25,25,25,25,25,-15,]),'NUMBER':([10,21,],[23,39,]),'TRUE':([0,9,11,19,25,26,27,28,29,30,31,33,34,36,54,56,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'NOT':([0,9,11,19,25,26,27,28,29,30,31,33,34,36,54,56,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'OR':([1,2,7,8,12,20,22,23,24,38,39,40,41,42,43,44,45,46,47,49,50,52,55,57,58,],[-2,-24,-6,-1,29,-7,-3,-4,29,29,-5,-25,29,29,-13,-8,-9,29,29,29,29,29,29,29,-15,]),'AT':([0,9,11,19,25,26,27,28,29,30,31,33,34,36,54,56,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'LPAREN':([0,6,9,11,19,25,26,27,28,29,30,31,33,34,36,54,56,],[11,19,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'RENAME':([0,9,11,19,25,26,27,28,29,30,31,33,34,36,54,56,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'$end':([1,2,7,8,12,20,22,23,39,40,41,42,43,44,45,46,47,49,50,52,58,],[-2,-24,-6,-1,0,-7,-3,-4,-5,-25,-12,-14,-13,-8,-9,-10,-11,-16,-17,-18,-15,]),'IMPLIES':([1,2,7,8,12,20,22,23,24,38,39,40,41,42,43,44,45,46,47,49,50,52,55,57,58,],[-2,-24,-6,-1,31,-7,-3,-4,31,31,-5,-25,31,-14,-13,-8,-9,-10,-11,31,31,31,31,31,-15,]),'XOR':([1,2,7,8,12,20,22,23,24,38,39,40,41,42,43,44,45,46,47,49,50,52,55,57,58,],[-2,-24,-6,-1,30,-7,-3,-4,30,30,-5,-25,30,30,-13,-8,-9,-10,30,30,30,30,30,30,-15,]),'RPAREN':([1,2,7,8,20,22,23,24,39,40,41,42,43,44,45,46,47,49,50,52,57,58,],[-2,-24,-6,-1,-7,-3,-4,40,-5,-25,-12,-14,-13,-8,-9,-10,-11,-16,-17,-18,58,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'name':([0,3,4,5,9,11,19,25,26,27,28,29,30,31,32,33,34,35,36,37,54,56,],[7,13,13,16,7,7,7,7,7,7,7,7,7,7,48,7,7,51,7,16,7,7,]),'sub':([5,37,],[17,53,]),'expr':([0,9,11,19,25,26,27,28,29,30,31,33,34,36,54,56,],[12,20,24,38,41,42,43,44,45,46,47,49,50,52,55,57,]),'subs':([5,],[18,]),'number':([10,],[22,]),'names':([3,4,],[14,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> TRUE','expr',1,'p_bool','_parser.py',101),
  ('expr -> FALSE','expr',1,'p_bool','_parser.py',102),
  ('expr -> AT number','expr',2,'p_node','_parser.py',107),
  ('number -> NUMBER','number',1,'p_number','_parser.py',111),
  ('number -> MINUS NUMBER','number',2,'p_negative_number','_parser.py',115),
  ('expr -> name','expr',1,'p_var','_parser.py',120),
  ('expr -> NOT expr','expr',2,'p_unary','_parser.py',124),
  ('expr -> expr AND expr','expr',3,'p_binary','_parser.py',128),
  ('expr -> expr OR expr','expr',3,'p_binary','_parser.py',129),
  ('expr -> expr XOR expr','expr',3,'p_binary','_parser.py',130),
  ('expr -> expr IMPLIES expr','expr',3,'p_binary','_parser.py',131),
  ('expr -> expr EQUIV expr','expr',3,'p_binary','_parser.py',132),
  ('expr -> expr EQUALS expr','expr',3,'p_binary','_parser.py',133),
  ('expr -> expr MINUS expr','expr',3,'p_binary','_parser.py',134),
  ('expr -> ITE LPAREN expr COMMA expr COMMA expr RPAREN','expr',8,'p_ternary_conditional','_parser.py',139),
  ('expr -> EXISTS names COLON expr','expr',4,'p_quantifier','_parser.py',143),
  ('expr -> FORALL names COLON expr','expr',4,'p_quantifier','_parser.py',144),
  ('expr -> RENAME subs COLON expr','expr',4,'p_rename','_parser.py',149),
  ('subs -> subs COMMA sub','subs',3,'p_substitutions_iter','_parser.py',153),
  ('subs -> sub','subs',1,'p_substitutions_end','_parser.py',159),
  ('sub -> name DIV name','sub',3,'p_substitution','_parser.py',163),
  ('names -> names COMMA name','names',3,'p_names_iter','_parser.py',169),
  ('names -> name','names',1,'p_names_end','_parser.py',175),
  ('name -> NAME','name',1,'p_name','_parser.py',179),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_paren','_parser.py',183),
]
