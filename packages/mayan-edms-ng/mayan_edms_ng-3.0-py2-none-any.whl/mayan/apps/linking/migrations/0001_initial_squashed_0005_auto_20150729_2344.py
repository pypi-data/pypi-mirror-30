# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-03-10 19:17
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('linking', '0001_initial'), ('linking', '0002_resolvedsmartlink'), ('linking', '0003_auto_20150708_0318'), ('linking', '0004_auto_20150708_0320'), ('linking', '0005_auto_20150729_2344')]

    dependencies = [
        ('documents', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='SmartLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=96, verbose_name='Title')),
                ('dynamic_title', models.CharField(blank=True, help_text='This expression will be evaluated against the current selected document.', max_length=96, verbose_name='Dynamic title')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('document_types', models.ManyToManyField(to=b'documents.DocumentType', verbose_name='Document types')),
            ],
            options={
                'verbose_name': 'Smart link',
                'verbose_name_plural': 'Smart links',
            },
        ),
        migrations.CreateModel(
            name='SmartLinkCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inclusion', models.CharField(choices=[('&', 'and'), ('|', 'or')], default='&', help_text='The inclusion is ignored for the first item.', max_length=16)),
                ('foreign_document_data', models.CharField(help_text='This represents the metadata of all other documents.', max_length=128, verbose_name='Foreign document attribute')),
                ('operator', models.CharField(choices=[('exact', 'is equal to'), ('iexact', 'is equal to (case insensitive)'), ('contains', 'contains'), ('icontains', 'contains (case insensitive)'), ('in', 'is in'), ('gt', 'is greater than'), ('gte', 'is greater than or equal to'), ('lt', 'is less than'), ('lte', 'is less than or equal to'), ('startswith', 'starts with'), ('istartswith', 'starts with (case insensitive)'), ('endswith', 'ends with'), ('iendswith', 'ends with (case insensitive)'), ('regex', 'is in regular expression'), ('iregex', 'is in regular expression (case insensitive)')], max_length=16)),
                ('expression', models.TextField(help_text="Enter a template to render. Use Django's default templating language (https://docs.djangoproject.com/en/1.7/ref/templates/builtins/). The {{ document }} context variable is available.", verbose_name='Expression')),
                ('negated', models.BooleanField(default=False, help_text='Inverts the logic of the operator.', verbose_name='Negated')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('smart_link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditions', to='linking.SmartLink', verbose_name='Smart link')),
            ],
            options={
                'verbose_name': 'Link condition',
                'verbose_name_plural': 'Link conditions',
            },
        ),
        migrations.CreateModel(
            name='ResolvedSmartLink',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('linking.smartlink',),
        ),
        migrations.RenameField(
            model_name='smartlink',
            old_name='dynamic_title',
            new_name='dynamic_label',
        ),
        migrations.RenameField(
            model_name='smartlink',
            old_name='title',
            new_name='label',
        ),
        migrations.AlterField(
            model_name='smartlink',
            name='dynamic_label',
            field=models.CharField(blank=True, help_text='This expression will be evaluated against the current selected document.', max_length=96, verbose_name='Dynamic label'),
        ),
        migrations.AlterField(
            model_name='smartlink',
            name='label',
            field=models.CharField(max_length=96, verbose_name='Label'),
        ),
        migrations.AlterField(
            model_name='smartlink',
            name='dynamic_label',
            field=models.CharField(blank=True, help_text="Enter a template to render. Use Django's default templating language (https://docs.djangoproject.com/en/1.7/ref/templates/builtins/). The {{ document }} context variable is available.", max_length=96, verbose_name='Dynamic label'),
        ),
    ]
