---

- name: DebOps pre_tasks hook
  include: "{{ lookup('task_src', 'auth/pre_main.yml') }}"

- name: Install auth-related packages
  apt:
    name: '{{ item }}'
    state: 'latest'
    install_recommends: 'no'
  with_items: '{{ auth_packages }}'

- name: Ensure common system groups exist
  group:
    name: '{{ item }}'
    system: 'yes'
    state: 'present'
  with_items: '{{ (auth_system_groups + auth_admin_groups) | unique }}'
  when: auth_system_groups

- name: Include system administrator accounts in admin groups
  user:
    name: '{{ item }}'
    state: 'present'
    groups: '{{ ([ auth_admin_groups ] if auth_admin_groups is string else auth_admin_groups) | join(",") }}'
    append: True
  with_flattened: '{{ auth_admin_users }}'
  when: auth_admin_users|d()

- name: Configure admin access in sudo
  template:
    src: '{{ lookup("template_src", "etc/sudoers.d/admins.j2") }}'
    dest: '/etc/sudoers.d/admins'
    owner: 'root'
    group: 'root'
    mode: '0440'
    validate: 'visudo -cf %s'
  when: auth_wheel_group is defined and auth_wheel_group

- name: Configure pam_cracklib
  template:
    src: 'usr/share/pam-configs/cracklib.j2'
    dest: '/usr/share/pam-configs/cracklib'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Update PAM common configuration' ]
  when: auth_cracklib|bool

- name: Configure PAM password history module
  include: pam_pwhistory.yml
  when: auth_pwhistory_remember is defined and auth_pwhistory_remember

- name: Check if /etc/ldap exists
  stat:
    path: '/etc/ldap'
  register: auth_register_etc_ldap

- include: etc_ldap_conf.yml
  when: ((auth_ldap_conf|bool) and
         ((auth_register_etc_ldap.stat.exists) or
          ('ldap' in auth_nsswitch)))

- include: nss_pam_ldap.yml
  when: (('ldap' in auth_nsswitch) and (auth_nslcd_conf|bool))

- name: DebOps post_tasks hook
  include: "{{ lookup('task_src', 'auth/post_main.yml') }}"
