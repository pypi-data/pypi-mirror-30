Metadata-Version: 1.0
Name: kubelib
Version: 0.3.0
Summary: Utility wrapper around Kubectl
Home-page: https://safaribooks.com
Author: Jason Kane
Author-email: jkane@safaribooksonline.com
License: Copyright (c) 2016, Safari
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.

* Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.

* Neither the name of kubelib nor the names of its
  contributors may be used to endorse or promote products derived from
  this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Description-Content-Type: UNKNOWN
Description: kubelib
        =======
        
        Python library to simplify kubernetes scripting.  Minimal test coverage.
        
        `Full Documentation Here <http://public.safarilab.com/kubelib/>`_
        
        TODO: The current plan is to rebuild this around <https://github.com/kubernetes-incubator/client-python>.
        
        Quickstart
        ----------
        
        Import Kubelib and config::
        
        	import kubelib
        	kube = kubelib.KubeConfig(context='dev-seb', namespace='myspace')
        
        List all namespaces::
        
        	for ns in kubelib.Namespace(kube).get_list():
        		print(ns.metadata.name)
        
        List all resource controllers::
        
            for ns in kubelib.ReplicationController(kube).get_list():
                print(ns.metadata.name)
        
        (you get the idea)
        
        Get a specific pod::
        
            pod = kubelib.Pod(kube).get(podname)
            print(pod.toJSON())
        
        
        Upgrading Kubernetes
        --------------------
        
        Upgrade kubernetes based on a directory of yaml files::
        
            import kubelib
            kube = kubelib.KubeConfig(context='dev-seb', namespace='myspace')
            kube.apply_path("./kubernetes", recursive=True)
        
        This will look at every yaml file and act based on the "Kind" field.  Deployments are replaced, replication controllers are deleted and re-created.  Other "Kind" resources are created if a resource with that "Kind" and "Name" is not already present.
        
        Command Line Utilities
        ----------------------
        
        This package provides a few command line utilities, the most helpful (to me) is `see_limits` which displays the resource limits for all pods and namespaces within a context.
        
        
        ------
        
        Initial package setup borrowed from `https://github.com/kennethreitz/samplemod`
        
        A reasonable approach to getting sphinx output into github pages from `https://daler.github.io/sphinxdoc-test/includeme.html`
        
Platform: UNKNOWN
