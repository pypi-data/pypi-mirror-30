Metadata-Version: 2.0
Name: faster-particles
Version: 0.1.1
Summary: Point Proposal Network for particles images and related tools.
Home-page: https://github.com/Temigo/faster-particles
Author: Laura Domine, Ji Won Park, Kazuhiro Terao
Author-email: temigo@gmx.com
License: LICENSE.md
Keywords: physics
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Console
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2.7
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Scientific/Engineering :: Image Recognition
Requires-Dist: matplotlib (>=1.5.3)
Requires-Dist: numpy (>=1.13.1)
Requires-Dist: scikit-learn (>=0.18.1)
Requires-Dist: scikit-image (>=0.12.3)
Requires-Dist: tensorflow (>=1.3.1)

# faster-particles

* Toydata generator
* LArCV data interface
* Pixel Proposal Network implementation using Tensorflow

## Installation
Dependencies:
* [larcv2](https://github.com/DeepLearnPhysics/larcv2) and its own dependencies (ROOT, etc)
in order to use LArCV data interface.

With Pip [to be released soon]:
```bash
pip install faster-particles
```

You can also clone the source:
```bash
git clone https://github.com/Temigo/faster-particles.git
cd faster-particles/bin
```

## Usage

The following assumes either you installed with pip or you are in `bin` folder.
To train PPN on 1000 steps:
```bash
ppn train -o output/dir/ -l log/dir/ -d display/dir -n ppn -m 1000
```

To run inference:
```bash
ppn demo weights_file.ckpt -d display/dir/
```

More options available through `ppn train -h` and `ppn demo -h` respectively.

## Authors
K.Terao, J.W. Park, L.Domine


