#!python

import argparse
import os
from namanager.main import entry

parser = argparse.ArgumentParser()
parser.add_argument("--version",
                    action='store_true',
                    help="print the Namanager version number and exit.")
parser.add_argument("-s", "--settings",
                    default=os.path.join(os.getcwd(), 'settings.json'),
                    help="Import settings.json.")
parser.add_argument("--required",
                    action='store_true',
                    help="If namanager fails it will exit 1.")
parser.add_argument("--with-readable",
                    action='store_false',
                    help="Default. Generate as dict (python) format.")
parser.add_argument("--with-xml",
                    action='store_true',
                    help="Generate as xml format.")
parser.add_argument("--with-json",
                    action='store_true',
                    help="Generate as json format.")
parser.add_argument("--pretty-dump",
                    action='store_true',
                    help="Only works with --with-xml or --with-json")

args = parser.parse_args()

if __name__ == '__main__':
    if args.version:
        import namanager
        print(namanager.__version__)
        exit(0)

    kwargs = {
        'required': args.required,
        'fmt': (
            'xml' if args.with_xml else
            'json' if args.with_json else
            'dict' if args.with_json else
            'dict'
        ),
        'pretty_dump': args.pretty_dump,
    }
    entry(args.settings, **kwargs)
