[tox]
envlist = py27,
          py36,
          coverage,
          fix-lint,
          docs
minversion = 2.9.0
skip_missing_interpreters = true

[testenv]
description = run the unit tests with pytest under {basepython}
setenv = COVERAGE_FILE={toxworkdir}/.coverage.{envname}
passenv = http_proxy https_proxy no_proxy SSL_CERT_FILE TOXENV CI TRAVIS TRAVIS_* APPVEYOR APPVEYOR_* CODECOV_*
extras = testing
deps = setuptools >= 38.2.3
       setuptools_scm >= 1.15.6, <2
       wheel >= 0.30.0
commands = coverage run --rcfile="{toxinidir}/tox.ini" --source="{envsitepackagesdir}/pytest_print" -m pytest tests {posargs}
           coverage report --rcfile="{toxinidir}/tox.ini"

[testenv:coverage]
changedir = {toxinidir}/src
setenv = COVERAGE_FILE={toxworkdir}/.coverage
deps = {[testenv]deps}
       coverage >= 4.5.1
skip_install = True
description = combine coverage data and create reports
commands = coverage erase
           coverage combine --rcfile="{toxinidir}/tox.ini"
           coverage report --rcfile="{toxinidir}/tox.ini"
           coverage xml

[testenv:fix-lint]
basepython = python3.6
passenv = {[testenv]passenv} HOMEPATH PROGRAMDATA
extras = lint
description = run static analysis and style check using flake8
commands = python -m flake8 --show-source tox setup.py {posargs}
           python -m flake8 --show-source doc tests {posargs}
           pre-commit run --all-files --show-diff-on-failure
           python -c 'print("hint: run {envdir}/bin/pre-commit install to add checks as pre-commit hook")'

[testenv:docs]
description = invoke sphinx-build to build the HTML docs, check that URIs are valid
basepython = python3.6
extras = docs
commands = sphinx-build -d "{toxworkdir}/docs_doctree" doc "{toxworkdir}/docs_out" --color -W -bhtml
           sphinx-build -d "{toxworkdir}/docs_doctree" doc "{toxworkdir}/docs_out" --color -W -blinkcheck

[testenv:codecov]
description = [only run on CI]: upload coverage data to codecov (depends on coverage running first)
deps = codecov
skip_install = True
commands = codecov --file "{toxworkdir}/coverage.xml"

[testenv:dev]
description = generate a DEV environment
deps = pip >= 9.0.3
       tox >= 2.9.0, < 3
extras = testing, docs
usedevelop = True
basepython = python3.6
commands = python -m pip list --format=columns
           python -c 'import sys; print(sys.executable)'

[testenv:publish]
basepython = python3.6
deps = {[testenv]deps}
       twine >= 1.11.0
description = publish package to PyPi
commands = python setup.py sdist bdist_wheel
           twine upload dist/*

[coverage:report]
skip_covered = True
show_missing = True
precision = 2

[coverage:paths]
source = pytest_print
         */lib/python*/site-packages/pytest_print
         */Lib/site-packages/pytest_print
         */pypy*/site-packages/tox

[coverage:run]
branch = True
parallel = False
