Metadata-Version: 1.2
Name: frigus
Version: 4.0.1
Summary: Compute equilibrium and time-dependent popluation level densities
for multi-level species. The level populations can be used to compute
cooling function. Frigus allow for computing cooling functions
parameterized by gas density, kinetic temperature and radiation
temperatures.
Home-page: https://github.com/mherkazandjian/frigus
Author: Mher Kazandjian
Author-email: mherkazandjian@gmail.com
Maintainer: Mher Kazandjian
Maintainer-email: mherkazandjian@gmail.com
License: UNKNOWN
Download-URL: https://github.com/mherkazandjian/frigus/archive/master.zip
Description: [![Build Status](https://travis-ci.org/mherkazandjian/frigus.svg?branch=master)](https://travis-ci.org/mherkazandjian/frigus)
        
        FRIGUS
        ======
        
        Package for computing the equilibrium and time-dependent level populations of
        species. The level populations are used to compute the cooling function that
        are parametrized in terms of the gas density and the kinetic and radiation
        temperatures.
        
        Obtaining
        ---------
        
        https://github.com/mherkazandjian/frigus
        
        Installation
        ------------
        
        There are several way for installing frigus. For users the easiest way
        is to install ``Frigus`` through ``pip`` via:
        
            pip install frigus
        
        
        Tests
        -----
        
        The tests can be run by executing
        
           make test
        
        in the directory ``src/python``.
        
        Input data
        ----------
        
        The species data are located in the ``data`` directory. Each subdirectory
        correspends to a certain set of data. The sub-directories ``data/two_levels_1``
        and ``data/three_levels_1`` can be used as tempates to construct datasets for
        sophisticated species.
        
        
        
Keywords: physics,ism,radiative transfer,cooling,heating,collisional reaction rates
Platform: UNKNOWN
Classifier: Development Status :: 1 - Planning
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Documentation
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Installation/Setup
Classifier: Topic :: System :: Software Distribution
