
# =============================================================================
[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543


# =============================================================================
[app:main]
use = egg:PubliForge

# ------ Instance definition
uid = test
encryption = secretkey

# ------ Internationalization
languages = fr, es, en
#pyramid.default_locale_name = en
#translation_dirs =

# ------------------------------ Front

# ------ Temporary directory
temporary_dir = %(here)s/../../Cache~/Tmp

# ------ Beaker session
session.type = memory
session.key = PF_SESSION

# ------ SQLAlchemy
# ... PostgreSQL
sqlalchemy.url = postgresql://publiforge:sesame@localhost/PubliForge
sqlalchemy.pool_size = 1
sqlalchemy.max_overflow = 1
sqlalchemy.pool_timeout = 10

# ------ Authentication
auth.cookie = PF_AUTH
auth.remember = 5184000

# ------ Page refresh
refresh.short = 2
refresh.long = 4

# ------ Storages
storage.root = %(here)s/../../Storages~
storage.index = %(here)s/../../StoragesIndex~
storage.vcs = none, local, hg, hgsvn
storage.report_ttl = 120
storage.cache = 900

# ------ File openers
opener.develop = true
opener.roots = %(here)s/../../Openers~
opener.list = Publi*, Ini*
opener.cache = %(here)s/../../Cache~/Openers

# ------ Available agents
agent.refresh = 180
agent.synchronize = 1
agent.0.weight = 1
agent.0.password = sesame
agent.1.url = http://localhost:6544
agent.1.weight = 2
agent.1.password = sesame

# ------------------------------ Agent

# ------ Buildspaces
buildspace.root = %(here)s/../../Buildspaces~
buildspace.ttl = 86400

# ------ Processors
processor.roots = %(here)s/../../Processors~
processor.list = Publi*, PackFilling, Parallel, CharCount, DTBookValid,
                 CleanStorage

# ------ Builds
build.reset = false
build.develop = true
build.root = %(here)s/../../Builds~
build.ttl = 300
build.result_ttl = 900
build.concurrent = 3

# ------ Authorized fronts
front.synchronize = 2
front.0.uid = test
front.0.password = sesame


# =============================================================================
[Populate]
drop_tables = true

# ------ Administrator
admin.login = admin
admin.password = adminpwd
admin.name = Administrateur
admin.email = admin@prismallia.fr
admin.language = fr

# ------ Users
file.a01 = %(here)s/../../Configuration/Users/users.pfusr.xml
file.a02 = %(here)s/../../Configuration/Users/tests.pfusr.xml

# ------ Groups
file.b01 = %(here)s/../../Configuration/Groups/groups_fr.pfgrp.xml
file.b02 = %(here)s/../../Configuration/Groups/sa_gaze.pfgrp.xml

# ------ Storages
file.c01 = %(here)s/../../Configuration/Storages/none.pfstg.xml
file.c02 = %(here)s/../../Configuration/Storages/local.pfstg.xml
file.c03 = %(here)s/../../Configuration/Storages/hg.pfstg.xml

# ------ Indexers
file.d01 = %(here)s/../../Configuration/Indexers/publidoc.pfidx.xml
file.d02 = %(here)s/../../Configuration/Indexers/subjects_fr.pfidx.xml

# ------ Projects
file.e01 = %(here)s/../../Configuration/Projects/publidoc.pfprj.xml
file.e02 = %(here)s/../../Configuration/Projects/publiquiz.pfprj.xml
file.e03 = %(here)s/../../Configuration/Projects/comedie_humaine.pfprj.xml


# =============================================================================
# ====== Logging configuration
[loggers]
keys = root, publiforge, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

# ====== Loggers
[logger_root]
level = INFO
handlers = console

[logger_publiforge]
level = DEBUG
handlers =
qualname = publiforge

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

# ====== Handlers
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

# ====== Formatters
[formatter_generic]
format = [%(name)s %(levelname)s] %(message)s
