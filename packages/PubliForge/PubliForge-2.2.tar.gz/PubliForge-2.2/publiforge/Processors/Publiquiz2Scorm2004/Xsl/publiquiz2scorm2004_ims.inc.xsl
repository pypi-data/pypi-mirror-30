<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns="http://www.imsglobal.org/xsd/imscp_v1p1"
                xmlns:lom="http://ltsc.ieee.org/xsd/LOM"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:imsss="http://www.imsglobal.org/xsd/imsss"
                xmlns:adlcp="http://www.adlnet.org/xsd/adlcp_v1p3"
                xmlns:adlseq="http://www.adlnet.org/xsd/adlseq_v1p3"
                xmlns:adlnav="http://www.adlnet.org/xsd/adlnav_v1p3"
                xmlns:date="http://exslt.org/dates-and-times"
                extension-element-prefixes="date">

  <!--
      =========================================================================
      Template imsmanifest
      =========================================================================
  -->
  <xsl:template name="imsmanifest">
    <xsl:document href="{concat($output, 'Container~/')}imsmanifest.xml"
                  method="xml" encoding="utf-8" indent="yes">
      <xsl:comment> Generated by PubliForge, <xsl:value-of select="date:date-time()"/> </xsl:comment>
      <manifest identifier="{$fid}" version="1.3"
                xmlns="http://www.imsglobal.org/xsd/imscp_v1p1"
                xmlns:lom="http://ltsc.ieee.org/xsd/LOM"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:imsss="http://www.imsglobal.org/xsd/imsss"
                xmlns:adlcp="http://www.adlnet.org/xsd/adlcp_v1p3"
                xmlns:adlseq="http://www.adlnet.org/xsd/adlseq_v1p3"
                xmlns:adlnav="http://www.adlnet.org/xsd/adlnav_v1p3">
        <xsl:attribute name="xsi:schemaLocation">
          <xsl:text>http://www.imsglobal.org/xsd/imscp_v1p1 imscp_v1p1.xsd</xsl:text>
          <xsl:text> http://ltsc.ieee.org/xsd/LOM lom.xsd</xsl:text>
          <xsl:text> http://www.imsglobal.org/xsd/imsss imsss_v1p0.xsd</xsl:text>
          <xsl:text> http://www.adlnet.org/xsd/adlcp_v1p3 adlcp_v1p3.xsd</xsl:text>
          <xsl:text> http://www.adlnet.org/xsd/adlseq_v1p3 adlseq_v1p3.xsd</xsl:text>
          <xsl:text> http://www.adlnet.org/xsd/adlnav_v1p3 adlnav_v1p3.xsd</xsl:text>
        </xsl:attribute>

        <metadata>
          <schema>ADL SCORM</schema>
          <schemaversion>2004 4th Edition</schemaversion>
        </metadata>

        <xsl:call-template name="organizations"/>
        <xsl:call-template name="resources"/>
      </manifest>
    </xsl:document>
  </xsl:template>


  <!--
      *************************************************************************
                                     ORGANIZATIONS
      *************************************************************************
  -->
  <!--
      =========================================================================
      Template organizations
      =========================================================================
  -->
  <xsl:template name="organizations">
    <xsl:comment> ==================================================================== </xsl:comment>
    <organizations default="{$fid}-org">
      <organization identifier="{$fid}-org"
                    adlseq:objectivesGlobalToSystem="false"
                    adlcp:sharedDataGlobalToSystem="false">
        <xsl:call-template name="ims_title_text">
          <xsl:with-param name="default" select="$fid"/>
        </xsl:call-template>
        <xsl:choose>
          <xsl:when test="$onefile">
            <item identifier="{$fid}-sco"
                  identifierref="{$fid}-res"
                  isvisible="true">
              <xsl:call-template name="ims_title_text">
                <xsl:with-param name="default" select="$fid"/>
              </xsl:call-template>
            </item>
          </xsl:when>
          <xsl:otherwise>
            <xsl:apply-templates
                select="../topic|../quiz|division|topic|quiz"
                mode="item"/>
          </xsl:otherwise>
        </xsl:choose>
        <imsss:sequencing>
          <imsss:controlMode choice="true" flow="true"/>
        </imsss:sequencing>
      </organization>
    </organizations>
  </xsl:template>

  <!--
      =========================================================================
      division mode item
      =========================================================================
  -->
  <xsl:template match="division" mode="item">
    <item identifier="{$fid}-div{count(preceding::division|ancestor::division)+1}-agg"
          isvisible="true">
      <xsl:call-template name="ims_title_text"/>
      <xsl:apply-templates select="division|topic|quiz" mode="item"/>
    </item>
  </xsl:template>

  <!--
      =========================================================================
      topic mode item
      =========================================================================
  -->
  <xsl:template match="topic" mode="item">
    <item identifier="{$fid}-tpc{count(preceding::topic)+1}-sco"
          identifierref="{$fid}-tpc{count(preceding::topic)+1}-res"
          isvisible="true">
      <xsl:call-template name="ims_title_text">
        <xsl:with-param name="default"
                        select="concat($i18n_topic, ' ', count(preceding::topic)+1)"/>
      </xsl:call-template>
    </item>
  </xsl:template>

  <!--
      =========================================================================
      quiz mode item
      =========================================================================
  -->
  <xsl:template match="quiz" mode="item">
    <item identifier="{$fid}-quz{count(preceding::quiz)+1}-sco"
          identifierref="{$fid}-quz{count(preceding::quiz)+1}-res"
          isvisible="true">
      <xsl:call-template name="ims_title_text">
        <xsl:with-param name="default"
                        select="concat($i18n_quiz, ' ', count(preceding::quiz)+1)"/>
      </xsl:call-template>
    </item>
  </xsl:template>


  <!--
      *************************************************************************
                                       RESOURCES
      *************************************************************************
  -->
  <!--
      =========================================================================
      Template resources
      =========================================================================
  -->
  <xsl:template name="resources">
    <xsl:comment> ==================================================================== </xsl:comment>
    <resources>
      <xsl:choose>
        <xsl:when test="$onefile">
          <resource identifier="{$fid}-res"
                    adlcp:scormType="sco" type="webcontent" xml:base="Content/">
            <xsl:choose>
              <xsl:when test="name()='topic'">
                <xsl:attribute name="href">
                  <xsl:value-of select="concat($fid, '-tpc-0001', $html_ext)"/>
                </xsl:attribute>
                <file href="{$fid}-tpc-0001{$html_ext}"/>
              </xsl:when>
              <xsl:when test="name()='quiz'">
                <xsl:attribute name="href">
                  <xsl:value-of select="concat($fid, '-quz-0001', $html_ext)"/>
                </xsl:attribute>
                <file href="{$fid}-quz-0001{$html_ext}"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:attribute name="href">
                  <xsl:value-of select="concat($fid, $html_ext)"/>
                </xsl:attribute>
                <file href="{$fid}{$html_ext}"/>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:apply-templates select=".//image|.//audio|.//video" mode="resource"/>
            <dependency identifierref="{$fid}-css-res"/>
            <dependency identifierref="{$fid}-js-res"/>
          </resource>
        </xsl:when>

        <xsl:otherwise>
          <xsl:apply-templates select="../topic|../quiz|.//topic|.//quiz"
                               mode="resource"/>
        </xsl:otherwise>
      </xsl:choose>

      <resource identifier="{$fid}-css-res" adlcp:scormType="asset"
                type="webcontent" xml:base="Content/{$css_dir}">
        <xsl:choose>
          <xsl:when test="$minify">
            <file href="styles.css"/>
          </xsl:when>
          <xsl:otherwise>
            <file href="publidoc.css"/>
            <file href="custom.css"/>
          </xsl:otherwise>
        </xsl:choose>
      </resource>

      <resource identifier="{$fid}-js-res" adlcp:scormType="asset"
                type="webcontent" xml:base="Content/{$js_dir}">
        <xsl:choose>
          <xsl:when test="$minify">
            <file href="jquery.js"/>
            <file href="scripts.js"/>
          </xsl:when>
          <xsl:otherwise>
            <file href="jquery.js"/>
            <file href="scorm_apiwrapper.js"/>
            <file href="publiquiz.js"/>
            <file href="publiquiz_basics.js"/>
            <xsl:if test="$matching_link">
              <file href="publiquiz_matching_link.js"/>
            </xsl:if>
            <file href="publiquiz_loader.js"/>
          </xsl:otherwise>
        </xsl:choose>
      </resource>
    </resources>
  </xsl:template>

  <!--
      =========================================================================
      topic, quiz mode resource
      =========================================================================
  -->
  <xsl:template match="topic" mode="resource">
    <xsl:variable name="number"
                  select="format-number(count(preceding::topic)+1, '0000')"/>

    <resource
        identifier="{$fid}-tpc{count(preceding::topic)+1}-res"
        adlcp:scormType="sco" type="webcontent" xml:base="Content/"
        href="{$fid}-tpc-{$number}{$html_ext}">
      <file href="{$fid}-tpc-{$number}{$html_ext}"/>
      <xsl:if test="not($onefile)">
        <xsl:apply-templates select=".//note" mode="resource"/>
      </xsl:if>
      <xsl:apply-templates select=".//image|.//audio|.//video" mode="resource"/>
      <dependency identifierref="{$fid}-css-res"/>
    </resource>
  </xsl:template>

  <xsl:template match="quiz" mode="resource">
    <xsl:variable name="number"
                  select="format-number(count(preceding::quiz)+1, '0000')"/>

    <resource
        identifier="{$fid}-quz{count(preceding::quiz)+1}-res"
        adlcp:scormType="sco" type="webcontent" xml:base="Content/"
        href="{$fid}-quz-{$number}{$html_ext}">
      <file href="{$fid}-quz-{$number}{$html_ext}"/>
      <xsl:if test="not($onefile)">
        <xsl:apply-templates select=".//note" mode="resource"/>
      </xsl:if>
      <xsl:apply-templates select=".//image|.//audio|.//video" mode="resource"/>
      <dependency identifierref="{$fid}-css-res"/>
      <dependency identifierref="{$fid}-js-res"/>
    </resource>
  </xsl:template>

  <!--
      =========================================================================
      note mode resource
      =========================================================================
  -->
  <xsl:template match="note" mode="resource">
      <file href="{$fid}-not-{format-number(count(preceding::note)+1, '0000')}{$html_ext}"/>
  </xsl:template>

  <!--
      =========================================================================
      image, audio, video mode resource
      =========================================================================
  -->
  <xsl:template match="image" mode="resource">
    <file>
      <xsl:attribute name="href">
        <xsl:value-of select="concat($img_dir, @id)"/>
        <xsl:call-template name="image_extension"/>
      </xsl:attribute>
    </file>
  </xsl:template>

  <xsl:template match="audio" mode="resource">
    <file href="{concat($aud_dir, @id, $aud_ext1)}"/>
    <xsl:if test="$aud_ext2!='-' and $aud_ext1!=$aud_ext2">
      <file href="{concat($aud_dir, @id, $aud_ext2)}"/>
    </xsl:if>
  </xsl:template>

  <xsl:template match="video" mode="resource">
    <file href="{concat($vid_dir, @id, $vid_ext1)}"/>
    <xsl:if test="$vid_ext2!='-' and $vid_ext1!=$vid_ext2">
      <file href="{concat($vid_dir, @id, $vid_ext2)}"/>
    </xsl:if>
  </xsl:template>


  <!--
      *************************************************************************
                                 CALLABABLE TEMPLATE
      *************************************************************************
  -->
  <!--
      =========================================================================
      Template ims_title_text
      =========================================================================
  -->
  <xsl:template name="ims_title_text">
    <xsl:param name="head" select="head"/>
    <xsl:param name="default"/>

    <xsl:choose>
      <xsl:when test="$head/title">
        <title>
          <xsl:apply-templates select="$head/title" mode="text"/>
          <xsl:if test="$head/subtitle">
            <xsl:value-of select="$str_sep"/>
            <xsl:apply-templates select="$head/subtitle" mode="text"/>
          </xsl:if>
        </title>
      </xsl:when>
      <xsl:when test="$default">
        <title><xsl:value-of select="$default"/></title>
      </xsl:when>
    </xsl:choose>
  </xsl:template>

</xsl:stylesheet>
