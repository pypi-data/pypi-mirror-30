.TH LOGDISSECT 1
.SH NAME
logdissect - A robust CLI syslog forensics tool.

.SH SYNOPSIS
\fBlogdissect\fR [\fB-h\fR] [\fB--dhost \fIDHOST\fR] [\fB--grep \fIPATTERN\fR] [\fB--last \fILAST\fR] [\fB--process \fIPROCESS\fR] [\fB--protocol \fIPROTOCOL\fR] [\fB--range \fIRANGE\fR] [\fB--rdhost \fIDHOST\fR] [\fB--rgrep \fIPATTERN\fR] [\fB--rprocess \fIPROCESS\fR] [\fB--rshost \fISHOST\fR] [\fB--rsource \fISOURCE\fR] [\fB--shost \fISHOST\fR] [\fB--source \fISOURCE\fR] [\fB--outlog \fIOUTLOG\fR] [\fB--label \fILABEL\fR] [\fB--outjson \fIOUTJSON\fR] [\fB--version\fR] [\fB--verbose\fR] [\fB-s\fR] [\fB--list-parsers\fR] [\fB-p \fIPARSER\fR] [\fB-z\fR] [\fB-t \fITZONE\fR] [\fBfile \fR[\fBfile ...\fR]]

.SH DESCRIPTION
\fBlogdissect\fR is a command line utility and library module for analyzing syslog files and other data. It can merge entries from multiple files and sort by timestamp, and filter the results by time range and other criteria. Results are output to the terminal by default, and can also be output to a standard log file, or to a JSON array along with some metadata.

.SH OPTIONS

  usage: \fBlogdissect\fR [\fBoptions\fR] \fBfile\fR [\fBfile\fR] ...
  
  positional arguments:
    \fBfile\fR                 specify input files
  
  optional arguments:
    \fB-h\fR, \fB--help\fR           show this help message and exit
    \fB--version\fR            show program's version number and exit
    \fB--verbose\fR            set verbose terminal output
    \fB-s\fR                   silence terminal output
    \fB--list-parsers\fR       return a list of available parsers
    \fB-p\fR \fIPARSER\fR            select a parser (default: syslog)
    \fB-z\fR, \fB--unzip\fR          include files compressed with gzip
    \fB-t\fR \fITZONE\fR             specify timezone offset to UTC (e.g. '+0500')

  
  morph options:
    \fB--dhost\fR \fIDHOST\fR        match a destination host
    \fB--grep\fR \fIPATTERN\fR       match a pattern
    \fB--last\fR \fILAST\fR          match a preceeding time period (5m/3h/2d/etc)
    \fB--process\fR \fIPROCESS\fR    match a source process
    \fB--protocol\fR \fIPROTOCOL\fR  match a protocol
    \fB--range\fR \fIRANGE\fR        match a time range <YYYYMMDDhhmm-YYYYMMDDhhmm>
    \fB--utc\fR                use UTC for range matching
    \fB--rdhost\fR \fIDHOST\fR       filter out a destination host
    \fB--rgrep\fR \fIPATTERN\fR      filter out a pattern
    \fB--rprocess\fR \fIPROCESS\fR   filter out a source process
    \fB--rprotocol\fR \fIPROTOCOL\fR match a protocol
    \fB--rshost\fR \fISHOST\fR       filter out a source host
    \fB--rsource\fR \fISOURCE\fR     filter out a log source
    \fB--shost\fR \fISHOST\fR        match a source host
    \fB--source\fR \fISOURCE\fR      match a log source

  output options:
    \fB--linejson LINEJSON   \fRset the output file for line by line JSON output
    \fB--outlog OUTLOG       \fRset the output file for standard log output
    \fB--label LABEL         \fRset label type for OUTLOG (fname|fpath)
    \fB--sojson SOJSON       \fRset the output file for single object JSON output
    \fB--pretty              \fRuse pretty formatting for sojson output


  ==== Available parsing modules: ====
  
  \fBciscoios        \fR: cisco ios parsing module
  \fBlinejson        \fR: logdissect line by line JSON parsing module
  \fBsojson          \fR: logdissect single object JSON parsing module
  \fBsyslog          \fR: syslog (standard timestamp) parsing module
  \fBsyslogiso       \fR: syslog (ISO timestamp) parsing module
  \fBsyslognohost    \fR: syslog (standard timestamp, no host) parsing module
  \fBtcpdump         \fR: tcpdump terminal output parsing module
  \fBwebaccess       \fR: web access log parsing module

  \fBwindowsrsyslog  \fR: windows rsyslog agent log parsing module

.SH EXAMPLES
logdissect --last 10m auth.log
.br
logdissect --last 1h --process systemd --process CRON messages
.br
logdissect -v --range 20160202020202-20170227213200 --label fpath messages debug apache2/error.log
.br
logdissect -s --outlog myaccess.log --grep 192.168.1.56 --last 30d --label fname /var/log/apache2/access.log /var/log/apache2/other_vhosts_access.log

.SH NOTES
1. metadata: logdissect uses file modification times to assign years to syslog date stamps. This allows it to parse logs that span more than one year without a problem. If you are copying log files, always use 'cp -p' (or 'cp --preserve=timestamps') and 'scp -p' to preserve original mtimes and other file metadata.

2. Re-parsing: If you are planning on parsing an output file back into logdissect at some point, using JSON is highly recommended. The JSON output modules use date stamps that include a year. Re-parsing a standard log output file will cause problems if the file has a different mtime than the original logs.

3. --range shortcuts: The range module will fill in your ranges with zeroes if they are shorter than 14 characters. If you want to get a range of 20170204120000 to 20170204130000, you can save time and use 2017020412 and 2017020413.

4. --last options: the last option should be a number followed by either 's' for seconds, 'm' for minutes, 'h' for hours, or 'd' for days (e.g. --last=20m).

5. Multiple options: All non-time-based morphers can be used more than once.

.SH SEE ALSO
    logdissect(3)

.SH FILES
    /usr/share/doc/logdissect/README.md
    /usr/share/doc/logdissect/README-API.md
    /usr/share/doc/logdissect/README-DEV.md
    /usr/share/doc/logdissect/CHANGELOG.md
    /usr/share/doc/logdissect/LICENSE

.SH AUTHOR
    Dan Persons (dpersonsdev@gmail.com)

.SH COPYRIGHT
MIT License

Copyright (c) 2017 Dan Persons

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
