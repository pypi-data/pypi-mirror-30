
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "IDENTIFIER NEWLINE OTHER PREPROCESSING_NUMBER PUNCTUATOR STRING_LITERAL WHITESPACE LONG_COMMENT SYSTEM_INCLUDE_LITERAL PREPROCESSING_KEYWORD_INCLUDE PREPROCESSING_KEYWORD_DEFINE PREPROCESSING_KEYWORD_IFDEF PREPROCESSING_KEYWORD_IFNDEF PREPROCESSING_KEYWORD_ENDIF PREPROCESSING_KEYWORD_ELSE PREPROCESSING_KEYWORD_IF PREPROCESSING_KEYWORD_PY\n    program : lines statement\n    \n    lines :\n    \n    lines : lines line\n    \n    line : statement NEWLINE\n    \n    statement : pepper_directive\n    \n    statement : code_expressions\n    \n    pepper_directive : preprocessor_expression\n    \n    preprocessor_expression : include_expression\n                            | define_expression\n                            | ifdef_expression\n                            | ifndef_expression\n                            | endif_expression\n                            | else_expression\n    \n    ifdef_expression : PREPROCESSING_KEYWORD_IFDEF WHITESPACE IDENTIFIER\n    \n    ifndef_expression : PREPROCESSING_KEYWORD_IFNDEF WHITESPACE IDENTIFIER\n    \n    else_expression : PREPROCESSING_KEYWORD_ELSE\n    \n    endif_expression : PREPROCESSING_KEYWORD_ENDIF\n    \n    define_expression : PREPROCESSING_KEYWORD_DEFINE WHITESPACE IDENTIFIER\n    \n    define_expression : PREPROCESSING_KEYWORD_DEFINE WHITESPACE IDENTIFIER WHITESPACE macro_expansion\n    \n    define_expression : PREPROCESSING_KEYWORD_DEFINE WHITESPACE IDENTIFIER '(' identifier_list ')'  maybe_space macro_expansion\n    \n    identifier_list : IDENTIFIER\n    \n    identifier_list :\n    \n    identifier_list : identifier_list ',' maybe_space IDENTIFIER\n    \n    maybe_space :\n    \n    maybe_space : WHITESPACE\n    \n    include_expression : include_expression_file\n                       | include_expression_system\n    \n    macro_expansion : code_expressions\n    \n    include_expression_file : PREPROCESSING_KEYWORD_INCLUDE WHITESPACE STRING_LITERAL\n    \n    include_expression_system : PREPROCESSING_KEYWORD_INCLUDE WHITESPACE SYSTEM_INCLUDE_LITERAL\n    \n    code_expressions :\n    \n    code_expressions : code_expressions code_expression\n    \n    code_expressions : code_expression\n    \n    safe_code_expression : IDENTIFIER code_expression_parenthetical\n    \n    safe_code_expression : code_expression_parenthetical\n    \n    code_expression : safe_code_expression\n    \n    safe_code_expression : IDENTIFIER\n    \n    code_expression_parenthetical : '(' list_of_expressions ')'\n    \n    safe_code_expression : WHITESPACE\n    \n    safe_code_expression : STRING_LITERAL\n    \n    list_of_expressions : safe_code_expressions\n    \n    list_of_expressions :\n    \n    list_of_expressions : list_of_expressions ',' safe_code_expressions\n    \n    safe_code_expressions :\n    \n    safe_code_expressions : safe_code_expressions safe_code_expression\n    \n    safe_code_expression : '<'\n              | '>'\n              | '+'\n              | '-'\n              | '%'\n              | '^'\n              | '&'\n              | '*'\n              | '{'\n              | '}'\n              | '['\n              | ']'\n              | '='\n              | ';'\n              | ':'\n              | '#'\n              | '.'\n              | '?'\n              | '~'\n    \n    code_expression :\n              | ','\n              | '('\n              | ')'\n    \n    safe_code_expression : PREPROCESSING_NUMBER\n    "
    
_lr_action_items = {',':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,56,57,61,62,63,69,70,71,73,74,75,76,78,79,82,],[-2,16,-3,16,-33,-36,-66,-42,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,62,-41,-34,-42,-38,-44,-45,-43,16,-22,16,-21,77,-24,-25,16,-23,]),'(':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,64,69,70,73,76,78,79,],[-2,17,-3,17,-33,-36,-66,-44,-68,-39,57,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,57,-34,-44,-38,-44,-45,71,57,17,17,-24,-25,17,]),')':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,56,57,61,62,63,69,70,71,73,74,75,76,78,79,82,],[-2,18,-3,18,-33,-36,-66,-42,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,61,-41,-34,-42,-38,-44,-45,-43,18,-22,18,-21,76,-24,-25,18,-23,]),'PREPROCESSING_KEYWORD_DEFINE':([0,2,4,51,],[-2,21,-3,-4,]),'PREPROCESSING_KEYWORD_IFDEF':([0,2,4,51,],[-2,24,-3,-4,]),'PREPROCESSING_KEYWORD_IFNDEF':([0,2,4,51,],[-2,25,-3,-4,]),'PREPROCESSING_KEYWORD_ENDIF':([0,2,4,51,],[-2,26,-3,-4,]),'PREPROCESSING_KEYWORD_ELSE':([0,2,4,51,],[-2,27,-3,-4,]),'IDENTIFIER':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,55,56,57,58,59,61,62,63,69,70,71,73,76,77,78,79,80,],[-2,23,-3,23,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,23,64,-34,-44,65,66,-38,-44,-45,23,23,74,23,-24,-24,-25,23,82,]),'WHITESPACE':([0,2,4,6,8,15,16,17,18,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,56,57,61,62,63,64,69,70,73,76,77,78,79,],[-2,22,-3,22,-33,-36,-66,-44,-68,55,-39,-37,58,59,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,60,-4,-32,22,-34,-44,-38,-44,-45,70,22,22,22,78,78,-25,22,]),'STRING_LITERAL':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,60,61,62,63,69,70,73,76,78,79,],[-2,29,-3,29,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,29,-34,-44,67,-38,-44,-45,29,29,29,-24,-25,29,]),'<':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,30,-3,30,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,30,-34,-44,-38,-44,-45,30,30,30,-24,-25,30,]),'>':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,31,-3,31,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,31,-34,-44,-38,-44,-45,31,31,31,-24,-25,31,]),'+':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,32,-3,32,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,32,-34,-44,-38,-44,-45,32,32,32,-24,-25,32,]),'-':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,33,-3,33,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,33,-34,-44,-38,-44,-45,33,33,33,-24,-25,33,]),'%':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,34,-3,34,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,34,-34,-44,-38,-44,-45,34,34,34,-24,-25,34,]),'^':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,35,-3,35,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,35,-34,-44,-38,-44,-45,35,35,35,-24,-25,35,]),'&':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,36,-3,36,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,36,-34,-44,-38,-44,-45,36,36,36,-24,-25,36,]),'*':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,37,-3,37,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,37,-34,-44,-38,-44,-45,37,37,37,-24,-25,37,]),'{':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,38,-3,38,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,38,-34,-44,-38,-44,-45,38,38,38,-24,-25,38,]),'}':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,39,-3,39,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,39,-34,-44,-38,-44,-45,39,39,39,-24,-25,39,]),'[':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,40,-3,40,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,40,-34,-44,-38,-44,-45,40,40,40,-24,-25,40,]),']':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,41,-3,41,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,41,-34,-44,-38,-44,-45,41,41,41,-24,-25,41,]),'=':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,42,-3,42,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,42,-34,-44,-38,-44,-45,42,42,42,-24,-25,42,]),';':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,43,-3,43,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,43,-34,-44,-38,-44,-45,43,43,43,-24,-25,43,]),':':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,44,-3,44,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,44,-34,-44,-38,-44,-45,44,44,44,-24,-25,44,]),'#':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,45,-3,45,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,45,-34,-44,-38,-44,-45,45,45,45,-24,-25,45,]),'.':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,46,-3,46,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,46,-34,-44,-38,-44,-45,46,46,46,-24,-25,46,]),'?':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,47,-3,47,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,47,-34,-44,-38,-44,-45,47,47,47,-24,-25,47,]),'~':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,48,-3,48,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,48,-34,-44,-38,-44,-45,48,48,48,-24,-25,48,]),'PREPROCESSING_NUMBER':([0,2,4,6,8,15,16,17,18,22,23,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,57,61,62,63,69,70,73,76,78,79,],[-2,49,-3,49,-33,-36,-66,-44,-68,-39,-37,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,49,-34,-44,-38,-44,-45,49,49,49,-24,-25,49,]),'PREPROCESSING_KEYWORD_INCLUDE':([0,2,4,51,],[-2,50,-3,-4,]),'NEWLINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,56,61,64,65,66,67,68,70,72,73,76,78,79,81,],[-2,-31,51,-3,-5,-6,-7,-33,-8,-9,-10,-11,-12,-13,-36,-66,-67,-68,-26,-27,-39,-37,-17,-16,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,-34,-38,-18,-14,-15,-29,-30,-31,-19,-28,-24,-25,-31,-20,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,56,61,64,65,66,67,68,70,72,73,76,78,79,81,],[-2,0,-31,-1,-3,-5,-6,-7,-33,-8,-9,-10,-11,-12,-13,-36,-66,-67,-68,-26,-27,-39,-37,-17,-16,-35,-40,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-69,-4,-32,-34,-38,-18,-14,-15,-29,-30,-31,-19,-28,-24,-25,-31,-20,]),'SYSTEM_INCLUDE_LITERAL':([60,],[68,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'lines':([0,],[2,]),'statement':([2,],[3,]),'line':([2,],[4,]),'pepper_directive':([2,],[5,]),'code_expressions':([2,70,79,],[6,73,73,]),'preprocessor_expression':([2,],[7,]),'code_expression':([2,6,70,73,79,],[8,52,8,52,8,]),'include_expression':([2,],[9,]),'define_expression':([2,],[10,]),'ifdef_expression':([2,],[11,]),'ifndef_expression':([2,],[12,]),'endif_expression':([2,],[13,]),'else_expression':([2,],[14,]),'safe_code_expression':([2,6,54,69,70,73,79,],[15,15,63,63,15,15,15,]),'include_expression_file':([2,],[19,]),'include_expression_system':([2,],[20,]),'code_expression_parenthetical':([2,6,23,54,69,70,73,79,],[28,28,56,28,28,28,28,28,]),'list_of_expressions':([17,57,],[53,53,]),'safe_code_expressions':([17,57,62,],[54,54,69,]),'macro_expansion':([70,79,],[72,81,]),'identifier_list':([71,],[75,]),'maybe_space':([76,77,],[79,80,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> lines statement','program',2,'p_program','parser.py',26),
  ('lines -> <empty>','lines',0,'p_statements_empty','parser.py',34),
  ('lines -> lines line','lines',2,'p_lines_nonempty','parser.py',41),
  ('line -> statement NEWLINE','line',2,'p_line_to_statement','parser.py',49),
  ('statement -> pepper_directive','statement',1,'p_statement_to_pepper_directive','parser.py',56),
  ('statement -> code_expressions','statement',1,'p_statement_to_code_expression','parser.py',63),
  ('pepper_directive -> preprocessor_expression','pepper_directive',1,'p_pepper_directive','parser.py',70),
  ('preprocessor_expression -> include_expression','preprocessor_expression',1,'p_include_expression','parser.py',77),
  ('preprocessor_expression -> define_expression','preprocessor_expression',1,'p_include_expression','parser.py',78),
  ('preprocessor_expression -> ifdef_expression','preprocessor_expression',1,'p_include_expression','parser.py',79),
  ('preprocessor_expression -> ifndef_expression','preprocessor_expression',1,'p_include_expression','parser.py',80),
  ('preprocessor_expression -> endif_expression','preprocessor_expression',1,'p_include_expression','parser.py',81),
  ('preprocessor_expression -> else_expression','preprocessor_expression',1,'p_include_expression','parser.py',82),
  ('ifdef_expression -> PREPROCESSING_KEYWORD_IFDEF WHITESPACE IDENTIFIER','ifdef_expression',3,'p_ifdef_expression','parser.py',89),
  ('ifndef_expression -> PREPROCESSING_KEYWORD_IFNDEF WHITESPACE IDENTIFIER','ifndef_expression',3,'p_ifndef_expression','parser.py',101),
  ('else_expression -> PREPROCESSING_KEYWORD_ELSE','else_expression',1,'p_else_expression','parser.py',113),
  ('endif_expression -> PREPROCESSING_KEYWORD_ENDIF','endif_expression',1,'p_endif_expression','parser.py',121),
  ('define_expression -> PREPROCESSING_KEYWORD_DEFINE WHITESPACE IDENTIFIER','define_expression',3,'p_define_expression_no_expansion','parser.py',129),
  ('define_expression -> PREPROCESSING_KEYWORD_DEFINE WHITESPACE IDENTIFIER WHITESPACE macro_expansion','define_expression',5,'p_define_expression_no_args','parser.py',136),
  ('define_expression -> PREPROCESSING_KEYWORD_DEFINE WHITESPACE IDENTIFIER ( identifier_list ) maybe_space macro_expansion','define_expression',8,'p_define_expression_some_args','parser.py',143),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list_singleton','parser.py',151),
  ('identifier_list -> <empty>','identifier_list',0,'p_identifier_list_empty','parser.py',158),
  ('identifier_list -> identifier_list , maybe_space IDENTIFIER','identifier_list',4,'p_identifier_list_multiple','parser.py',165),
  ('maybe_space -> <empty>','maybe_space',0,'p_maybe_whitespace_none','parser.py',173),
  ('maybe_space -> WHITESPACE','maybe_space',1,'p_maybe_whitespace_some','parser.py',180),
  ('include_expression -> include_expression_file','include_expression',1,'p_include_expression_disambiguation','parser.py',187),
  ('include_expression -> include_expression_system','include_expression',1,'p_include_expression_disambiguation','parser.py',188),
  ('macro_expansion -> code_expressions','macro_expansion',1,'p_define_expansion','parser.py',195),
  ('include_expression_file -> PREPROCESSING_KEYWORD_INCLUDE WHITESPACE STRING_LITERAL','include_expression_file',3,'p_include_expression_file','parser.py',202),
  ('include_expression_system -> PREPROCESSING_KEYWORD_INCLUDE WHITESPACE SYSTEM_INCLUDE_LITERAL','include_expression_system',3,'p_include_expression_system','parser.py',209),
  ('code_expressions -> <empty>','code_expressions',0,'p_expressions_empty','parser.py',216),
  ('code_expressions -> code_expressions code_expression','code_expressions',2,'p_expressions','parser.py',223),
  ('code_expressions -> code_expression','code_expressions',1,'p_expressions_to_single','parser.py',231),
  ('safe_code_expression -> IDENTIFIER code_expression_parenthetical','safe_code_expression',2,'p_identifier_call','parser.py',238),
  ('safe_code_expression -> code_expression_parenthetical','safe_code_expression',1,'p_safe_code_expression_to_parens','parser.py',246),
  ('code_expression -> safe_code_expression','code_expression',1,'p_code_expression_to_safe','parser.py',256),
  ('safe_code_expression -> IDENTIFIER','safe_code_expression',1,'p_statement_to_identifier','parser.py',263),
  ('code_expression_parenthetical -> ( list_of_expressions )','code_expression_parenthetical',3,'p_expression_to_list_of_something','parser.py',270),
  ('safe_code_expression -> WHITESPACE','safe_code_expression',1,'p_whitespace_unsafe','parser.py',277),
  ('safe_code_expression -> STRING_LITERAL','safe_code_expression',1,'p_expression_to_string_lit','parser.py',284),
  ('list_of_expressions -> safe_code_expressions','list_of_expressions',1,'p_expression_list_singleton','parser.py',292),
  ('list_of_expressions -> <empty>','list_of_expressions',0,'p_expression_list_empty','parser.py',299),
  ('list_of_expressions -> list_of_expressions , safe_code_expressions','list_of_expressions',3,'p_expression_list_multiple','parser.py',306),
  ('safe_code_expressions -> <empty>','safe_code_expressions',0,'p_safe_expressions_empty','parser.py',315),
  ('safe_code_expressions -> safe_code_expressions safe_code_expression','safe_code_expressions',2,'p_safe_expressions','parser.py',322),
  ('safe_code_expression -> <','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',330),
  ('safe_code_expression -> >','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',331),
  ('safe_code_expression -> +','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',332),
  ('safe_code_expression -> -','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',333),
  ('safe_code_expression -> %','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',334),
  ('safe_code_expression -> ^','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',335),
  ('safe_code_expression -> &','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',336),
  ('safe_code_expression -> *','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',337),
  ('safe_code_expression -> {','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',338),
  ('safe_code_expression -> }','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',339),
  ('safe_code_expression -> [','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',340),
  ('safe_code_expression -> ]','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',341),
  ('safe_code_expression -> =','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',342),
  ('safe_code_expression -> ;','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',343),
  ('safe_code_expression -> :','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',344),
  ('safe_code_expression -> #','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',345),
  ('safe_code_expression -> .','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',346),
  ('safe_code_expression -> ?','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',347),
  ('safe_code_expression -> ~','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',348),
  ('code_expression -> <empty>','code_expression',0,'p_statement_to_ascii_literal','parser.py',355),
  ('code_expression -> ,','code_expression',1,'p_statement_to_ascii_literal','parser.py',356),
  ('code_expression -> (','code_expression',1,'p_statement_to_ascii_literal','parser.py',357),
  ('code_expression -> )','code_expression',1,'p_statement_to_ascii_literal','parser.py',358),
  ('safe_code_expression -> PREPROCESSING_NUMBER','safe_code_expression',1,'p_statement_to_preprocessing_number','parser.py',365),
]
