- hosts: localhost

  # `droplet_name`      need to be passed as `--extra-var` !!
  # `droplet_spec_name` need to be passed as `--extra-var` !!
  vars:
    # Load config
    do_token: "{{ lookup('file', '{{ digitalocean_token_location }}') }}"
    ssh_pub_key_to_load_on_droplet: "{{ lookup('file', '{{ ssh_pub_key_to_load_on_droplet_location }}') }}"

  tasks:
    - name: "Ensure 'droplet_name' is passed as parameter"
      assert:
        that: droplet_name != ""

    - name: "Ensure 'droplet_spec_name' is passed as parameter"
      assert:
        that: droplet_spec_name != ""

    - name: "Load the specs of the droplet to create"
      include_role:
        name: load-droplet-specs
      vars:
        droplet_spec_name: droplet_spec_name

    - name: "Ensure SSH Key exists at DigitalOcean | Using key at: {{ ssh_pub_key_to_load_on_droplet_location }}"
      digital_ocean:
        command: ssh
        state: present
        name: "{{ ssh_pub_key_name_on_digitalocean }}"
        ssh_pub_key: "{{ ssh_pub_key_to_load_on_droplet }}"
        api_token: "{{ do_token }}"
      register: ssh_key_on_do

    - name: "Create Droplet: \"{{ droplet_name }}\""
      digital_ocean:
        api_token: "{{ do_token }}"
        command: droplet
        ssh_key_ids: "{{ ssh_key_on_do.ssh_key.id }}"
        unique_name: yes
        state: present
        name: "{{ droplet_name }}"
        size_id: "{{ droplet_specs.size }}"
        region_id: "{{ droplet_specs.region }}"
        image_id: "{{ droplet_specs.image }}"
      register: created

    - name: "Add Host in `.ssh/config`. For SSH Quick-Access ==> `ssh {{ droplet_name }}`"
      blockinfile:
        path: "{{ ansible_env.HOME }}/.ssh/config"
        state: present
        marker: "### ANSIBLE MANAGED - DigitalOcean Droplet: '{{ droplet_name }}' - {mark} #######################"
        block: |
          Host {{ droplet_name }}
            Hostname {{ created.droplet.ip_address }}
            User root

    - name: "Add Droplet as Ansible Host in `~/.ansible-droplet-inventory`"
      blockinfile:
        path: "{{ ansible_env.HOME }}/.ansible-droplet-inventory"
        state: present
        create: yes
        marker: "### ANSIBLE MANAGED - DigitalOcean Droplet: '{{ droplet_name }}' - {mark} #######################"
        block: "{{ droplet_name }} ansible_host={{ created.droplet.ip_address }} ansible_user=root ansible_python_interpreter=/usr/bin/python3"

    - name: "Refresh inventory"
      meta: refresh_inventory


- hosts: "{{ droplet_name }}"
  gather_facts: False
  tasks:
    - name: "Wait for Droplet available"
      wait_for_connection:
        timeout: 60

    - name: "Gather Facts"
      setup: 

    - name: "Load Swap size from specs of the droplet to create"
      include_role:
        name: load-droplet-specs
      vars:
        droplet_spec_name: droplet_spec_name

    - name: "Add Swap"
      include_role:
        name: kamaln7.swapfile
      vars:
        swapfile_size: "{{ droplet_specs.swap }}"

    - name: "Install Glances Webserver as a service"
      include_role:
        name: glances

    - name: "Enable advanced metrics on DigitalOcean"
      shell: "curl -sSL https://agent.digitalocean.com/install.sh | sh"

    - debug: 
       msg: "Droplet '{{ droplet_name }}' succesfuly created | IP = {{ ansible_default_ipv4.address }}"
    

