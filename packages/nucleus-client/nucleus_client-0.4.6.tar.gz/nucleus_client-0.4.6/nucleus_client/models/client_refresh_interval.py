# coding: utf-8

"""
    Nucleus REST API


    OpenAPI spec version: 0.4.3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class ClientRefreshInterval(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, weeks=None, days=None, hours=None, minutes=None, seconds=None):
        """
        ClientRefreshInterval - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'weeks': 'int',
            'days': 'int',
            'hours': 'int',
            'minutes': 'int',
            'seconds': 'int'
        }

        self.attribute_map = {
            'weeks': 'weeks',
            'days': 'days',
            'hours': 'hours',
            'minutes': 'minutes',
            'seconds': 'seconds'
        }

        self._weeks = weeks
        self._days = days
        self._hours = hours
        self._minutes = minutes
        self._seconds = seconds

    @property
    def weeks(self):
        """
        Gets the weeks of this ClientRefreshInterval.


        :return: The weeks of this ClientRefreshInterval.
        :rtype: int
        """
        return self._weeks

    @weeks.setter
    def weeks(self, weeks):
        """
        Sets the weeks of this ClientRefreshInterval.


        :param weeks: The weeks of this ClientRefreshInterval.
        :type: int
        """

        self._weeks = weeks

    @property
    def days(self):
        """
        Gets the days of this ClientRefreshInterval.


        :return: The days of this ClientRefreshInterval.
        :rtype: int
        """
        return self._days

    @days.setter
    def days(self, days):
        """
        Sets the days of this ClientRefreshInterval.


        :param days: The days of this ClientRefreshInterval.
        :type: int
        """

        self._days = days

    @property
    def hours(self):
        """
        Gets the hours of this ClientRefreshInterval.


        :return: The hours of this ClientRefreshInterval.
        :rtype: int
        """
        return self._hours

    @hours.setter
    def hours(self, hours):
        """
        Sets the hours of this ClientRefreshInterval.


        :param hours: The hours of this ClientRefreshInterval.
        :type: int
        """

        self._hours = hours

    @property
    def minutes(self):
        """
        Gets the minutes of this ClientRefreshInterval.


        :return: The minutes of this ClientRefreshInterval.
        :rtype: int
        """
        return self._minutes

    @minutes.setter
    def minutes(self, minutes):
        """
        Sets the minutes of this ClientRefreshInterval.


        :param minutes: The minutes of this ClientRefreshInterval.
        :type: int
        """

        self._minutes = minutes

    @property
    def seconds(self):
        """
        Gets the seconds of this ClientRefreshInterval.


        :return: The seconds of this ClientRefreshInterval.
        :rtype: int
        """
        return self._seconds

    @seconds.setter
    def seconds(self, seconds):
        """
        Sets the seconds of this ClientRefreshInterval.


        :param seconds: The seconds of this ClientRefreshInterval.
        :type: int
        """

        self._seconds = seconds

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
